|top
sw[0] => RISC_processor:myRISC.ValueSelect[0]
sw[1] => RISC_processor:myRISC.ValueSelect[1]
sw[2] => RISC_processor:myRISC.ValueSelect[2]
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
sw[8] => ~NO_FANOUT~
sw[9] => ~NO_FANOUT~
sw[10] => ~NO_FANOUT~
sw[11] => ~NO_FANOUT~
sw[12] => ~NO_FANOUT~
sw[13] => ~NO_FANOUT~
sw[14] => ~NO_FANOUT~
sw[15] => ~NO_FANOUT~
sw[16] => ~NO_FANOUT~
sw[17] => ~NO_FANOUT~
key[0] => RISC_processor:myRISC.GClock
key[1] => RISC_processor:myRISC.GReset
key[2] => ~NO_FANOUT~
key[3] => ~NO_FANOUT~
ledG[0] <= RISC_processor:myRISC.MuxOut[0]
ledG[1] <= RISC_processor:myRISC.MuxOut[1]
ledG[2] <= RISC_processor:myRISC.MuxOut[2]
ledG[3] <= RISC_processor:myRISC.MuxOut[3]
ledG[4] <= RISC_processor:myRISC.MuxOut[4]
ledG[5] <= RISC_processor:myRISC.MuxOut[5]
ledG[6] <= RISC_processor:myRISC.MuxOut[6]
ledG[7] <= RISC_processor:myRISC.MuxOut[7]
ledR[0] <= RISC_processor:myRISC.InstructionOut[0]
ledR[1] <= RISC_processor:myRISC.InstructionOut[1]
ledR[2] <= RISC_processor:myRISC.InstructionOut[2]
ledR[3] <= RISC_processor:myRISC.InstructionOut[3]
ledR[4] <= RISC_processor:myRISC.InstructionOut[4]
ledR[5] <= RISC_processor:myRISC.InstructionOut[5]
ledR[6] <= RISC_processor:myRISC.InstructionOut[6]
ledR[7] <= RISC_processor:myRISC.InstructionOut[7]
ledR[8] <= RISC_processor:myRISC.InstructionOut[8]
ledR[9] <= RISC_processor:myRISC.InstructionOut[9]
ledR[10] <= RISC_processor:myRISC.InstructionOut[10]
ledR[11] <= RISC_processor:myRISC.InstructionOut[11]
ledR[12] <= RISC_processor:myRISC.InstructionOut[12]
ledR[13] <= RISC_processor:myRISC.InstructionOut[13]
ledR[14] <= RISC_processor:myRISC.RegWriteOut
ledR[15] <= RISC_processor:myRISC.MemWriteOut
ledR[16] <= RISC_processor:myRISC.ZeroOut
ledR[17] <= RISC_processor:myRISC.BranchOut


|top|RISC_processor:myRISC
GClock => nbit_reg:PCreg.clk
GClock => myInstruction_memory:ROM.clock
GClock => registerfile_8x32:myregfile.Clk
GClock => myData_memory:RAM.clock
GReset => nbit_reg:PCreg.rst
GReset => registerfile_8x32:myregfile.rst
ValueSelect[0] => nbitmux8_1:Selectmuxout.sel[0]
ValueSelect[1] => nbitmux8_1:Selectmuxout.sel[1]
ValueSelect[2] => nbitmux8_1:Selectmuxout.sel[2]
MuxOut[0] <= nbitmux8_1:Selectmuxout.muxOut[0]
MuxOut[1] <= nbitmux8_1:Selectmuxout.muxOut[1]
MuxOut[2] <= nbitmux8_1:Selectmuxout.muxOut[2]
MuxOut[3] <= nbitmux8_1:Selectmuxout.muxOut[3]
MuxOut[4] <= nbitmux8_1:Selectmuxout.muxOut[4]
MuxOut[5] <= nbitmux8_1:Selectmuxout.muxOut[5]
MuxOut[6] <= nbitmux8_1:Selectmuxout.muxOut[6]
MuxOut[7] <= nbitmux8_1:Selectmuxout.muxOut[7]
InstructionOut[0] <= myInstruction_memory:ROM.q[0]
InstructionOut[1] <= myInstruction_memory:ROM.q[1]
InstructionOut[2] <= myInstruction_memory:ROM.q[2]
InstructionOut[3] <= myInstruction_memory:ROM.q[3]
InstructionOut[4] <= myInstruction_memory:ROM.q[4]
InstructionOut[5] <= myInstruction_memory:ROM.q[5]
InstructionOut[6] <= myInstruction_memory:ROM.q[6]
InstructionOut[7] <= myInstruction_memory:ROM.q[7]
InstructionOut[8] <= myInstruction_memory:ROM.q[8]
InstructionOut[9] <= myInstruction_memory:ROM.q[9]
InstructionOut[10] <= myInstruction_memory:ROM.q[10]
InstructionOut[11] <= myInstruction_memory:ROM.q[11]
InstructionOut[12] <= myInstruction_memory:ROM.q[12]
InstructionOut[13] <= myInstruction_memory:ROM.q[13]
InstructionOut[14] <= myInstruction_memory:ROM.q[14]
InstructionOut[15] <= myInstruction_memory:ROM.q[15]
InstructionOut[16] <= myInstruction_memory:ROM.q[16]
InstructionOut[17] <= myInstruction_memory:ROM.q[17]
InstructionOut[18] <= myInstruction_memory:ROM.q[18]
InstructionOut[19] <= myInstruction_memory:ROM.q[19]
InstructionOut[20] <= myInstruction_memory:ROM.q[20]
InstructionOut[21] <= myInstruction_memory:ROM.q[21]
InstructionOut[22] <= myInstruction_memory:ROM.q[22]
InstructionOut[23] <= myInstruction_memory:ROM.q[23]
InstructionOut[24] <= myInstruction_memory:ROM.q[24]
InstructionOut[25] <= myInstruction_memory:ROM.q[25]
InstructionOut[26] <= myInstruction_memory:ROM.q[26]
InstructionOut[27] <= myInstruction_memory:ROM.q[27]
InstructionOut[28] <= myInstruction_memory:ROM.q[28]
InstructionOut[29] <= myInstruction_memory:ROM.q[29]
InstructionOut[30] <= myInstruction_memory:ROM.q[30]
InstructionOut[31] <= myInstruction_memory:ROM.q[31]
BranchOut <= to_branch.DB_MAX_OUTPUT_PORT_TYPE
ZeroOut <= mainALU:ALUMAIN.zero
MemWriteOut <= RISC_control:RISCcontroller.MemWrite
RegWriteOut <= RISC_control:RISCcontroller.RegWrite


|top|RISC_processor:myRISC|nbit_reg:PCreg
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_reg:PCreg|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder
A[0] => full_adder:FA_f:0:FA_i.A
A[1] => full_adder:FA_f:1:FA_i.A
A[2] => full_adder:FA_f:2:FA_i.A
A[3] => full_adder:FA_f:3:FA_i.A
A[4] => full_adder:FA_f:4:FA_i.A
A[5] => full_adder:FA_f:5:FA_i.A
A[6] => full_adder:FA_f:6:FA_i.A
A[7] => full_adder:FA_f:7:FA_i.A
A[8] => full_adder:FA_f:8:FA_i.A
A[9] => full_adder:FA_f:9:FA_i.A
A[10] => full_adder:FA_f:10:FA_i.A
A[11] => full_adder:FA_f:11:FA_i.A
A[12] => full_adder:FA_f:12:FA_i.A
A[13] => full_adder:FA_f:13:FA_i.A
A[14] => full_adder:FA_f:14:FA_i.A
A[15] => full_adder:FA_f:15:FA_i.A
A[16] => full_adder:FA_f:16:FA_i.A
A[17] => full_adder:FA_f:17:FA_i.A
A[18] => full_adder:FA_f:18:FA_i.A
A[19] => full_adder:FA_f:19:FA_i.A
A[20] => full_adder:FA_f:20:FA_i.A
A[21] => full_adder:FA_f:21:FA_i.A
A[22] => full_adder:FA_f:22:FA_i.A
A[23] => full_adder:FA_f:23:FA_i.A
A[24] => full_adder:FA_f:24:FA_i.A
A[25] => full_adder:FA_f:25:FA_i.A
A[26] => full_adder:FA_f:26:FA_i.A
A[27] => full_adder:FA_f:27:FA_i.A
A[28] => full_adder:FA_f:28:FA_i.A
A[29] => full_adder:FA_f:29:FA_i.A
A[30] => full_adder:FA_f:30:FA_i.A
A[31] => full_adder:FA_f:31:FA_i.A
B[0] => full_adder:FA_f:0:FA_i.B
B[1] => full_adder:FA_f:1:FA_i.B
B[2] => full_adder:FA_f:2:FA_i.B
B[3] => full_adder:FA_f:3:FA_i.B
B[4] => full_adder:FA_f:4:FA_i.B
B[5] => full_adder:FA_f:5:FA_i.B
B[6] => full_adder:FA_f:6:FA_i.B
B[7] => full_adder:FA_f:7:FA_i.B
B[8] => full_adder:FA_f:8:FA_i.B
B[9] => full_adder:FA_f:9:FA_i.B
B[10] => full_adder:FA_f:10:FA_i.B
B[11] => full_adder:FA_f:11:FA_i.B
B[12] => full_adder:FA_f:12:FA_i.B
B[13] => full_adder:FA_f:13:FA_i.B
B[14] => full_adder:FA_f:14:FA_i.B
B[15] => full_adder:FA_f:15:FA_i.B
B[16] => full_adder:FA_f:16:FA_i.B
B[17] => full_adder:FA_f:17:FA_i.B
B[18] => full_adder:FA_f:18:FA_i.B
B[19] => full_adder:FA_f:19:FA_i.B
B[20] => full_adder:FA_f:20:FA_i.B
B[21] => full_adder:FA_f:21:FA_i.B
B[22] => full_adder:FA_f:22:FA_i.B
B[23] => full_adder:FA_f:23:FA_i.B
B[24] => full_adder:FA_f:24:FA_i.B
B[25] => full_adder:FA_f:25:FA_i.B
B[26] => full_adder:FA_f:26:FA_i.B
B[27] => full_adder:FA_f:27:FA_i.B
B[28] => full_adder:FA_f:28:FA_i.B
B[29] => full_adder:FA_f:29:FA_i.B
B[30] => full_adder:FA_f:30:FA_i.B
B[31] => full_adder:FA_f:31:FA_i.B
Z[0] <= full_adder:FA_f:0:FA_i.Sum
Z[1] <= full_adder:FA_f:1:FA_i.Sum
Z[2] <= full_adder:FA_f:2:FA_i.Sum
Z[3] <= full_adder:FA_f:3:FA_i.Sum
Z[4] <= full_adder:FA_f:4:FA_i.Sum
Z[5] <= full_adder:FA_f:5:FA_i.Sum
Z[6] <= full_adder:FA_f:6:FA_i.Sum
Z[7] <= full_adder:FA_f:7:FA_i.Sum
Z[8] <= full_adder:FA_f:8:FA_i.Sum
Z[9] <= full_adder:FA_f:9:FA_i.Sum
Z[10] <= full_adder:FA_f:10:FA_i.Sum
Z[11] <= full_adder:FA_f:11:FA_i.Sum
Z[12] <= full_adder:FA_f:12:FA_i.Sum
Z[13] <= full_adder:FA_f:13:FA_i.Sum
Z[14] <= full_adder:FA_f:14:FA_i.Sum
Z[15] <= full_adder:FA_f:15:FA_i.Sum
Z[16] <= full_adder:FA_f:16:FA_i.Sum
Z[17] <= full_adder:FA_f:17:FA_i.Sum
Z[18] <= full_adder:FA_f:18:FA_i.Sum
Z[19] <= full_adder:FA_f:19:FA_i.Sum
Z[20] <= full_adder:FA_f:20:FA_i.Sum
Z[21] <= full_adder:FA_f:21:FA_i.Sum
Z[22] <= full_adder:FA_f:22:FA_i.Sum
Z[23] <= full_adder:FA_f:23:FA_i.Sum
Z[24] <= full_adder:FA_f:24:FA_i.Sum
Z[25] <= full_adder:FA_f:25:FA_i.Sum
Z[26] <= full_adder:FA_f:26:FA_i.Sum
Z[27] <= full_adder:FA_f:27:FA_i.Sum
Z[28] <= full_adder:FA_f:28:FA_i.Sum
Z[29] <= full_adder:FA_f:29:FA_i.Sum
Z[30] <= full_adder:FA_f:30:FA_i.Sum
Z[31] <= full_adder:FA_f:31:FA_i.Sum
Cin => full_adder:FA_f:0:FA_i.Cin
Cout <= full_adder:FA_f:31:FA_i.Cout


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:0:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:1:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:2:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:3:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:4:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:5:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:6:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:7:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:8:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:9:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:10:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:11:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:12:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:13:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:14:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:15:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:16:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:17:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:18:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:19:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:20:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:21:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:22:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:23:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:24:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:25:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:26:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:27:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:28:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:29:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:30:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PC4adder|full_adder:\FA_f:31:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc
A[0] => full_adder:FA_f:0:FA_i.A
A[1] => full_adder:FA_f:1:FA_i.A
A[2] => full_adder:FA_f:2:FA_i.A
A[3] => full_adder:FA_f:3:FA_i.A
A[4] => full_adder:FA_f:4:FA_i.A
A[5] => full_adder:FA_f:5:FA_i.A
A[6] => full_adder:FA_f:6:FA_i.A
A[7] => full_adder:FA_f:7:FA_i.A
A[8] => full_adder:FA_f:8:FA_i.A
A[9] => full_adder:FA_f:9:FA_i.A
A[10] => full_adder:FA_f:10:FA_i.A
A[11] => full_adder:FA_f:11:FA_i.A
A[12] => full_adder:FA_f:12:FA_i.A
A[13] => full_adder:FA_f:13:FA_i.A
A[14] => full_adder:FA_f:14:FA_i.A
A[15] => full_adder:FA_f:15:FA_i.A
A[16] => full_adder:FA_f:16:FA_i.A
A[17] => full_adder:FA_f:17:FA_i.A
A[18] => full_adder:FA_f:18:FA_i.A
A[19] => full_adder:FA_f:19:FA_i.A
A[20] => full_adder:FA_f:20:FA_i.A
A[21] => full_adder:FA_f:21:FA_i.A
A[22] => full_adder:FA_f:22:FA_i.A
A[23] => full_adder:FA_f:23:FA_i.A
A[24] => full_adder:FA_f:24:FA_i.A
A[25] => full_adder:FA_f:25:FA_i.A
A[26] => full_adder:FA_f:26:FA_i.A
A[27] => full_adder:FA_f:27:FA_i.A
A[28] => full_adder:FA_f:28:FA_i.A
A[29] => full_adder:FA_f:29:FA_i.A
A[30] => full_adder:FA_f:30:FA_i.A
A[31] => full_adder:FA_f:31:FA_i.A
B[0] => full_adder:FA_f:0:FA_i.B
B[1] => full_adder:FA_f:1:FA_i.B
B[2] => full_adder:FA_f:2:FA_i.B
B[3] => full_adder:FA_f:3:FA_i.B
B[4] => full_adder:FA_f:4:FA_i.B
B[5] => full_adder:FA_f:5:FA_i.B
B[6] => full_adder:FA_f:6:FA_i.B
B[7] => full_adder:FA_f:7:FA_i.B
B[8] => full_adder:FA_f:8:FA_i.B
B[9] => full_adder:FA_f:9:FA_i.B
B[10] => full_adder:FA_f:10:FA_i.B
B[11] => full_adder:FA_f:11:FA_i.B
B[12] => full_adder:FA_f:12:FA_i.B
B[13] => full_adder:FA_f:13:FA_i.B
B[14] => full_adder:FA_f:14:FA_i.B
B[15] => full_adder:FA_f:15:FA_i.B
B[16] => full_adder:FA_f:16:FA_i.B
B[17] => full_adder:FA_f:17:FA_i.B
B[18] => full_adder:FA_f:18:FA_i.B
B[19] => full_adder:FA_f:19:FA_i.B
B[20] => full_adder:FA_f:20:FA_i.B
B[21] => full_adder:FA_f:21:FA_i.B
B[22] => full_adder:FA_f:22:FA_i.B
B[23] => full_adder:FA_f:23:FA_i.B
B[24] => full_adder:FA_f:24:FA_i.B
B[25] => full_adder:FA_f:25:FA_i.B
B[26] => full_adder:FA_f:26:FA_i.B
B[27] => full_adder:FA_f:27:FA_i.B
B[28] => full_adder:FA_f:28:FA_i.B
B[29] => full_adder:FA_f:29:FA_i.B
B[30] => full_adder:FA_f:30:FA_i.B
B[31] => full_adder:FA_f:31:FA_i.B
Z[0] <= full_adder:FA_f:0:FA_i.Sum
Z[1] <= full_adder:FA_f:1:FA_i.Sum
Z[2] <= full_adder:FA_f:2:FA_i.Sum
Z[3] <= full_adder:FA_f:3:FA_i.Sum
Z[4] <= full_adder:FA_f:4:FA_i.Sum
Z[5] <= full_adder:FA_f:5:FA_i.Sum
Z[6] <= full_adder:FA_f:6:FA_i.Sum
Z[7] <= full_adder:FA_f:7:FA_i.Sum
Z[8] <= full_adder:FA_f:8:FA_i.Sum
Z[9] <= full_adder:FA_f:9:FA_i.Sum
Z[10] <= full_adder:FA_f:10:FA_i.Sum
Z[11] <= full_adder:FA_f:11:FA_i.Sum
Z[12] <= full_adder:FA_f:12:FA_i.Sum
Z[13] <= full_adder:FA_f:13:FA_i.Sum
Z[14] <= full_adder:FA_f:14:FA_i.Sum
Z[15] <= full_adder:FA_f:15:FA_i.Sum
Z[16] <= full_adder:FA_f:16:FA_i.Sum
Z[17] <= full_adder:FA_f:17:FA_i.Sum
Z[18] <= full_adder:FA_f:18:FA_i.Sum
Z[19] <= full_adder:FA_f:19:FA_i.Sum
Z[20] <= full_adder:FA_f:20:FA_i.Sum
Z[21] <= full_adder:FA_f:21:FA_i.Sum
Z[22] <= full_adder:FA_f:22:FA_i.Sum
Z[23] <= full_adder:FA_f:23:FA_i.Sum
Z[24] <= full_adder:FA_f:24:FA_i.Sum
Z[25] <= full_adder:FA_f:25:FA_i.Sum
Z[26] <= full_adder:FA_f:26:FA_i.Sum
Z[27] <= full_adder:FA_f:27:FA_i.Sum
Z[28] <= full_adder:FA_f:28:FA_i.Sum
Z[29] <= full_adder:FA_f:29:FA_i.Sum
Z[30] <= full_adder:FA_f:30:FA_i.Sum
Z[31] <= full_adder:FA_f:31:FA_i.Sum
Cin => full_adder:FA_f:0:FA_i.Cin
Cout <= full_adder:FA_f:31:FA_i.Cout


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:0:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:1:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:2:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:3:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:4:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:5:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:6:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:7:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:8:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:9:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:10:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:11:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:12:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:13:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:14:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:15:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:16:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:17:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:18:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:19:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:20:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:21:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:22:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:23:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:24:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:25:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:26:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:27:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:28:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:29:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:30:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_adder:PCbranchcalc|full_adder:\FA_f:31:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt1[5] => mux_2_1:Mx_f:5:Mx_i.opt1
opt1[6] => mux_2_1:Mx_f:6:Mx_i.opt1
opt1[7] => mux_2_1:Mx_f:7:Mx_i.opt1
opt1[8] => mux_2_1:Mx_f:8:Mx_i.opt1
opt1[9] => mux_2_1:Mx_f:9:Mx_i.opt1
opt1[10] => mux_2_1:Mx_f:10:Mx_i.opt1
opt1[11] => mux_2_1:Mx_f:11:Mx_i.opt1
opt1[12] => mux_2_1:Mx_f:12:Mx_i.opt1
opt1[13] => mux_2_1:Mx_f:13:Mx_i.opt1
opt1[14] => mux_2_1:Mx_f:14:Mx_i.opt1
opt1[15] => mux_2_1:Mx_f:15:Mx_i.opt1
opt1[16] => mux_2_1:Mx_f:16:Mx_i.opt1
opt1[17] => mux_2_1:Mx_f:17:Mx_i.opt1
opt1[18] => mux_2_1:Mx_f:18:Mx_i.opt1
opt1[19] => mux_2_1:Mx_f:19:Mx_i.opt1
opt1[20] => mux_2_1:Mx_f:20:Mx_i.opt1
opt1[21] => mux_2_1:Mx_f:21:Mx_i.opt1
opt1[22] => mux_2_1:Mx_f:22:Mx_i.opt1
opt1[23] => mux_2_1:Mx_f:23:Mx_i.opt1
opt1[24] => mux_2_1:Mx_f:24:Mx_i.opt1
opt1[25] => mux_2_1:Mx_f:25:Mx_i.opt1
opt1[26] => mux_2_1:Mx_f:26:Mx_i.opt1
opt1[27] => mux_2_1:Mx_f:27:Mx_i.opt1
opt1[28] => mux_2_1:Mx_f:28:Mx_i.opt1
opt1[29] => mux_2_1:Mx_f:29:Mx_i.opt1
opt1[30] => mux_2_1:Mx_f:30:Mx_i.opt1
opt1[31] => mux_2_1:Mx_f:31:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
opt2[5] => mux_2_1:Mx_f:5:Mx_i.opt2
opt2[6] => mux_2_1:Mx_f:6:Mx_i.opt2
opt2[7] => mux_2_1:Mx_f:7:Mx_i.opt2
opt2[8] => mux_2_1:Mx_f:8:Mx_i.opt2
opt2[9] => mux_2_1:Mx_f:9:Mx_i.opt2
opt2[10] => mux_2_1:Mx_f:10:Mx_i.opt2
opt2[11] => mux_2_1:Mx_f:11:Mx_i.opt2
opt2[12] => mux_2_1:Mx_f:12:Mx_i.opt2
opt2[13] => mux_2_1:Mx_f:13:Mx_i.opt2
opt2[14] => mux_2_1:Mx_f:14:Mx_i.opt2
opt2[15] => mux_2_1:Mx_f:15:Mx_i.opt2
opt2[16] => mux_2_1:Mx_f:16:Mx_i.opt2
opt2[17] => mux_2_1:Mx_f:17:Mx_i.opt2
opt2[18] => mux_2_1:Mx_f:18:Mx_i.opt2
opt2[19] => mux_2_1:Mx_f:19:Mx_i.opt2
opt2[20] => mux_2_1:Mx_f:20:Mx_i.opt2
opt2[21] => mux_2_1:Mx_f:21:Mx_i.opt2
opt2[22] => mux_2_1:Mx_f:22:Mx_i.opt2
opt2[23] => mux_2_1:Mx_f:23:Mx_i.opt2
opt2[24] => mux_2_1:Mx_f:24:Mx_i.opt2
opt2[25] => mux_2_1:Mx_f:25:Mx_i.opt2
opt2[26] => mux_2_1:Mx_f:26:Mx_i.opt2
opt2[27] => mux_2_1:Mx_f:27:Mx_i.opt2
opt2[28] => mux_2_1:Mx_f:28:Mx_i.opt2
opt2[29] => mux_2_1:Mx_f:29:Mx_i.opt2
opt2[30] => mux_2_1:Mx_f:30:Mx_i.opt2
opt2[31] => mux_2_1:Mx_f:31:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
sel => mux_2_1:Mx_f:5:Mx_i.sel
sel => mux_2_1:Mx_f:6:Mx_i.sel
sel => mux_2_1:Mx_f:7:Mx_i.sel
sel => mux_2_1:Mx_f:8:Mx_i.sel
sel => mux_2_1:Mx_f:9:Mx_i.sel
sel => mux_2_1:Mx_f:10:Mx_i.sel
sel => mux_2_1:Mx_f:11:Mx_i.sel
sel => mux_2_1:Mx_f:12:Mx_i.sel
sel => mux_2_1:Mx_f:13:Mx_i.sel
sel => mux_2_1:Mx_f:14:Mx_i.sel
sel => mux_2_1:Mx_f:15:Mx_i.sel
sel => mux_2_1:Mx_f:16:Mx_i.sel
sel => mux_2_1:Mx_f:17:Mx_i.sel
sel => mux_2_1:Mx_f:18:Mx_i.sel
sel => mux_2_1:Mx_f:19:Mx_i.sel
sel => mux_2_1:Mx_f:20:Mx_i.sel
sel => mux_2_1:Mx_f:21:Mx_i.sel
sel => mux_2_1:Mx_f:22:Mx_i.sel
sel => mux_2_1:Mx_f:23:Mx_i.sel
sel => mux_2_1:Mx_f:24:Mx_i.sel
sel => mux_2_1:Mx_f:25:Mx_i.sel
sel => mux_2_1:Mx_f:26:Mx_i.sel
sel => mux_2_1:Mx_f:27:Mx_i.sel
sel => mux_2_1:Mx_f:28:Mx_i.sel
sel => mux_2_1:Mx_f:29:Mx_i.sel
sel => mux_2_1:Mx_f:30:Mx_i.sel
sel => mux_2_1:Mx_f:31:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut
muxOut[5] <= mux_2_1:Mx_f:5:Mx_i.muxOut
muxOut[6] <= mux_2_1:Mx_f:6:Mx_i.muxOut
muxOut[7] <= mux_2_1:Mx_f:7:Mx_i.muxOut
muxOut[8] <= mux_2_1:Mx_f:8:Mx_i.muxOut
muxOut[9] <= mux_2_1:Mx_f:9:Mx_i.muxOut
muxOut[10] <= mux_2_1:Mx_f:10:Mx_i.muxOut
muxOut[11] <= mux_2_1:Mx_f:11:Mx_i.muxOut
muxOut[12] <= mux_2_1:Mx_f:12:Mx_i.muxOut
muxOut[13] <= mux_2_1:Mx_f:13:Mx_i.muxOut
muxOut[14] <= mux_2_1:Mx_f:14:Mx_i.muxOut
muxOut[15] <= mux_2_1:Mx_f:15:Mx_i.muxOut
muxOut[16] <= mux_2_1:Mx_f:16:Mx_i.muxOut
muxOut[17] <= mux_2_1:Mx_f:17:Mx_i.muxOut
muxOut[18] <= mux_2_1:Mx_f:18:Mx_i.muxOut
muxOut[19] <= mux_2_1:Mx_f:19:Mx_i.muxOut
muxOut[20] <= mux_2_1:Mx_f:20:Mx_i.muxOut
muxOut[21] <= mux_2_1:Mx_f:21:Mx_i.muxOut
muxOut[22] <= mux_2_1:Mx_f:22:Mx_i.muxOut
muxOut[23] <= mux_2_1:Mx_f:23:Mx_i.muxOut
muxOut[24] <= mux_2_1:Mx_f:24:Mx_i.muxOut
muxOut[25] <= mux_2_1:Mx_f:25:Mx_i.muxOut
muxOut[26] <= mux_2_1:Mx_f:26:Mx_i.muxOut
muxOut[27] <= mux_2_1:Mx_f:27:Mx_i.muxOut
muxOut[28] <= mux_2_1:Mx_f:28:Mx_i.muxOut
muxOut[29] <= mux_2_1:Mx_f:29:Mx_i.muxOut
muxOut[30] <= mux_2_1:Mx_f:30:Mx_i.muxOut
muxOut[31] <= mux_2_1:Mx_f:31:Mx_i.muxOut


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:5:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:6:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:7:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:8:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:9:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:10:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:11:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:12:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:13:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:14:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:15:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:16:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:17:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:18:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:19:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:20:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:21:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:22:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:23:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:24:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:25:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:26:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:27:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:28:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:29:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:30:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxBranch|mux_2_1:\Mx_f:31:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt1[5] => mux_2_1:Mx_f:5:Mx_i.opt1
opt1[6] => mux_2_1:Mx_f:6:Mx_i.opt1
opt1[7] => mux_2_1:Mx_f:7:Mx_i.opt1
opt1[8] => mux_2_1:Mx_f:8:Mx_i.opt1
opt1[9] => mux_2_1:Mx_f:9:Mx_i.opt1
opt1[10] => mux_2_1:Mx_f:10:Mx_i.opt1
opt1[11] => mux_2_1:Mx_f:11:Mx_i.opt1
opt1[12] => mux_2_1:Mx_f:12:Mx_i.opt1
opt1[13] => mux_2_1:Mx_f:13:Mx_i.opt1
opt1[14] => mux_2_1:Mx_f:14:Mx_i.opt1
opt1[15] => mux_2_1:Mx_f:15:Mx_i.opt1
opt1[16] => mux_2_1:Mx_f:16:Mx_i.opt1
opt1[17] => mux_2_1:Mx_f:17:Mx_i.opt1
opt1[18] => mux_2_1:Mx_f:18:Mx_i.opt1
opt1[19] => mux_2_1:Mx_f:19:Mx_i.opt1
opt1[20] => mux_2_1:Mx_f:20:Mx_i.opt1
opt1[21] => mux_2_1:Mx_f:21:Mx_i.opt1
opt1[22] => mux_2_1:Mx_f:22:Mx_i.opt1
opt1[23] => mux_2_1:Mx_f:23:Mx_i.opt1
opt1[24] => mux_2_1:Mx_f:24:Mx_i.opt1
opt1[25] => mux_2_1:Mx_f:25:Mx_i.opt1
opt1[26] => mux_2_1:Mx_f:26:Mx_i.opt1
opt1[27] => mux_2_1:Mx_f:27:Mx_i.opt1
opt1[28] => mux_2_1:Mx_f:28:Mx_i.opt1
opt1[29] => mux_2_1:Mx_f:29:Mx_i.opt1
opt1[30] => mux_2_1:Mx_f:30:Mx_i.opt1
opt1[31] => mux_2_1:Mx_f:31:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
opt2[5] => mux_2_1:Mx_f:5:Mx_i.opt2
opt2[6] => mux_2_1:Mx_f:6:Mx_i.opt2
opt2[7] => mux_2_1:Mx_f:7:Mx_i.opt2
opt2[8] => mux_2_1:Mx_f:8:Mx_i.opt2
opt2[9] => mux_2_1:Mx_f:9:Mx_i.opt2
opt2[10] => mux_2_1:Mx_f:10:Mx_i.opt2
opt2[11] => mux_2_1:Mx_f:11:Mx_i.opt2
opt2[12] => mux_2_1:Mx_f:12:Mx_i.opt2
opt2[13] => mux_2_1:Mx_f:13:Mx_i.opt2
opt2[14] => mux_2_1:Mx_f:14:Mx_i.opt2
opt2[15] => mux_2_1:Mx_f:15:Mx_i.opt2
opt2[16] => mux_2_1:Mx_f:16:Mx_i.opt2
opt2[17] => mux_2_1:Mx_f:17:Mx_i.opt2
opt2[18] => mux_2_1:Mx_f:18:Mx_i.opt2
opt2[19] => mux_2_1:Mx_f:19:Mx_i.opt2
opt2[20] => mux_2_1:Mx_f:20:Mx_i.opt2
opt2[21] => mux_2_1:Mx_f:21:Mx_i.opt2
opt2[22] => mux_2_1:Mx_f:22:Mx_i.opt2
opt2[23] => mux_2_1:Mx_f:23:Mx_i.opt2
opt2[24] => mux_2_1:Mx_f:24:Mx_i.opt2
opt2[25] => mux_2_1:Mx_f:25:Mx_i.opt2
opt2[26] => mux_2_1:Mx_f:26:Mx_i.opt2
opt2[27] => mux_2_1:Mx_f:27:Mx_i.opt2
opt2[28] => mux_2_1:Mx_f:28:Mx_i.opt2
opt2[29] => mux_2_1:Mx_f:29:Mx_i.opt2
opt2[30] => mux_2_1:Mx_f:30:Mx_i.opt2
opt2[31] => mux_2_1:Mx_f:31:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
sel => mux_2_1:Mx_f:5:Mx_i.sel
sel => mux_2_1:Mx_f:6:Mx_i.sel
sel => mux_2_1:Mx_f:7:Mx_i.sel
sel => mux_2_1:Mx_f:8:Mx_i.sel
sel => mux_2_1:Mx_f:9:Mx_i.sel
sel => mux_2_1:Mx_f:10:Mx_i.sel
sel => mux_2_1:Mx_f:11:Mx_i.sel
sel => mux_2_1:Mx_f:12:Mx_i.sel
sel => mux_2_1:Mx_f:13:Mx_i.sel
sel => mux_2_1:Mx_f:14:Mx_i.sel
sel => mux_2_1:Mx_f:15:Mx_i.sel
sel => mux_2_1:Mx_f:16:Mx_i.sel
sel => mux_2_1:Mx_f:17:Mx_i.sel
sel => mux_2_1:Mx_f:18:Mx_i.sel
sel => mux_2_1:Mx_f:19:Mx_i.sel
sel => mux_2_1:Mx_f:20:Mx_i.sel
sel => mux_2_1:Mx_f:21:Mx_i.sel
sel => mux_2_1:Mx_f:22:Mx_i.sel
sel => mux_2_1:Mx_f:23:Mx_i.sel
sel => mux_2_1:Mx_f:24:Mx_i.sel
sel => mux_2_1:Mx_f:25:Mx_i.sel
sel => mux_2_1:Mx_f:26:Mx_i.sel
sel => mux_2_1:Mx_f:27:Mx_i.sel
sel => mux_2_1:Mx_f:28:Mx_i.sel
sel => mux_2_1:Mx_f:29:Mx_i.sel
sel => mux_2_1:Mx_f:30:Mx_i.sel
sel => mux_2_1:Mx_f:31:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut
muxOut[5] <= mux_2_1:Mx_f:5:Mx_i.muxOut
muxOut[6] <= mux_2_1:Mx_f:6:Mx_i.muxOut
muxOut[7] <= mux_2_1:Mx_f:7:Mx_i.muxOut
muxOut[8] <= mux_2_1:Mx_f:8:Mx_i.muxOut
muxOut[9] <= mux_2_1:Mx_f:9:Mx_i.muxOut
muxOut[10] <= mux_2_1:Mx_f:10:Mx_i.muxOut
muxOut[11] <= mux_2_1:Mx_f:11:Mx_i.muxOut
muxOut[12] <= mux_2_1:Mx_f:12:Mx_i.muxOut
muxOut[13] <= mux_2_1:Mx_f:13:Mx_i.muxOut
muxOut[14] <= mux_2_1:Mx_f:14:Mx_i.muxOut
muxOut[15] <= mux_2_1:Mx_f:15:Mx_i.muxOut
muxOut[16] <= mux_2_1:Mx_f:16:Mx_i.muxOut
muxOut[17] <= mux_2_1:Mx_f:17:Mx_i.muxOut
muxOut[18] <= mux_2_1:Mx_f:18:Mx_i.muxOut
muxOut[19] <= mux_2_1:Mx_f:19:Mx_i.muxOut
muxOut[20] <= mux_2_1:Mx_f:20:Mx_i.muxOut
muxOut[21] <= mux_2_1:Mx_f:21:Mx_i.muxOut
muxOut[22] <= mux_2_1:Mx_f:22:Mx_i.muxOut
muxOut[23] <= mux_2_1:Mx_f:23:Mx_i.muxOut
muxOut[24] <= mux_2_1:Mx_f:24:Mx_i.muxOut
muxOut[25] <= mux_2_1:Mx_f:25:Mx_i.muxOut
muxOut[26] <= mux_2_1:Mx_f:26:Mx_i.muxOut
muxOut[27] <= mux_2_1:Mx_f:27:Mx_i.muxOut
muxOut[28] <= mux_2_1:Mx_f:28:Mx_i.muxOut
muxOut[29] <= mux_2_1:Mx_f:29:Mx_i.muxOut
muxOut[30] <= mux_2_1:Mx_f:30:Mx_i.muxOut
muxOut[31] <= mux_2_1:Mx_f:31:Mx_i.muxOut


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:5:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:6:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:7:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:8:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:9:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:10:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:11:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:12:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:13:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:14:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:15:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:16:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:17:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:18:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:19:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:20:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:21:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:22:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:23:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:24:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:25:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:26:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:27:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:28:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:29:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:30:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxJump|mux_2_1:\Mx_f:31:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|myInstruction_memory:ROM
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]
q[8] <= altsyncram:altsyncram_component.q_a[8]
q[9] <= altsyncram:altsyncram_component.q_a[9]
q[10] <= altsyncram:altsyncram_component.q_a[10]
q[11] <= altsyncram:altsyncram_component.q_a[11]
q[12] <= altsyncram:altsyncram_component.q_a[12]
q[13] <= altsyncram:altsyncram_component.q_a[13]
q[14] <= altsyncram:altsyncram_component.q_a[14]
q[15] <= altsyncram:altsyncram_component.q_a[15]
q[16] <= altsyncram:altsyncram_component.q_a[16]
q[17] <= altsyncram:altsyncram_component.q_a[17]
q[18] <= altsyncram:altsyncram_component.q_a[18]
q[19] <= altsyncram:altsyncram_component.q_a[19]
q[20] <= altsyncram:altsyncram_component.q_a[20]
q[21] <= altsyncram:altsyncram_component.q_a[21]
q[22] <= altsyncram:altsyncram_component.q_a[22]
q[23] <= altsyncram:altsyncram_component.q_a[23]
q[24] <= altsyncram:altsyncram_component.q_a[24]
q[25] <= altsyncram:altsyncram_component.q_a[25]
q[26] <= altsyncram:altsyncram_component.q_a[26]
q[27] <= altsyncram:altsyncram_component.q_a[27]
q[28] <= altsyncram:altsyncram_component.q_a[28]
q[29] <= altsyncram:altsyncram_component.q_a[29]
q[30] <= altsyncram:altsyncram_component.q_a[30]
q[31] <= altsyncram:altsyncram_component.q_a[31]


|top|RISC_processor:myRISC|myInstruction_memory:ROM|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_a[16] => ~NO_FANOUT~
data_a[17] => ~NO_FANOUT~
data_a[18] => ~NO_FANOUT~
data_a[19] => ~NO_FANOUT~
data_a[20] => ~NO_FANOUT~
data_a[21] => ~NO_FANOUT~
data_a[22] => ~NO_FANOUT~
data_a[23] => ~NO_FANOUT~
data_a[24] => ~NO_FANOUT~
data_a[25] => ~NO_FANOUT~
data_a[26] => ~NO_FANOUT~
data_a[27] => ~NO_FANOUT~
data_a[28] => ~NO_FANOUT~
data_a[29] => ~NO_FANOUT~
data_a[30] => ~NO_FANOUT~
data_a[31] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e5a1:auto_generated.address_a[0]
address_a[1] => altsyncram_e5a1:auto_generated.address_a[1]
address_a[2] => altsyncram_e5a1:auto_generated.address_a[2]
address_a[3] => altsyncram_e5a1:auto_generated.address_a[3]
address_a[4] => altsyncram_e5a1:auto_generated.address_a[4]
address_a[5] => altsyncram_e5a1:auto_generated.address_a[5]
address_a[6] => altsyncram_e5a1:auto_generated.address_a[6]
address_a[7] => altsyncram_e5a1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e5a1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e5a1:auto_generated.q_a[0]
q_a[1] <= altsyncram_e5a1:auto_generated.q_a[1]
q_a[2] <= altsyncram_e5a1:auto_generated.q_a[2]
q_a[3] <= altsyncram_e5a1:auto_generated.q_a[3]
q_a[4] <= altsyncram_e5a1:auto_generated.q_a[4]
q_a[5] <= altsyncram_e5a1:auto_generated.q_a[5]
q_a[6] <= altsyncram_e5a1:auto_generated.q_a[6]
q_a[7] <= altsyncram_e5a1:auto_generated.q_a[7]
q_a[8] <= altsyncram_e5a1:auto_generated.q_a[8]
q_a[9] <= altsyncram_e5a1:auto_generated.q_a[9]
q_a[10] <= altsyncram_e5a1:auto_generated.q_a[10]
q_a[11] <= altsyncram_e5a1:auto_generated.q_a[11]
q_a[12] <= altsyncram_e5a1:auto_generated.q_a[12]
q_a[13] <= altsyncram_e5a1:auto_generated.q_a[13]
q_a[14] <= altsyncram_e5a1:auto_generated.q_a[14]
q_a[15] <= altsyncram_e5a1:auto_generated.q_a[15]
q_a[16] <= altsyncram_e5a1:auto_generated.q_a[16]
q_a[17] <= altsyncram_e5a1:auto_generated.q_a[17]
q_a[18] <= altsyncram_e5a1:auto_generated.q_a[18]
q_a[19] <= altsyncram_e5a1:auto_generated.q_a[19]
q_a[20] <= altsyncram_e5a1:auto_generated.q_a[20]
q_a[21] <= altsyncram_e5a1:auto_generated.q_a[21]
q_a[22] <= altsyncram_e5a1:auto_generated.q_a[22]
q_a[23] <= altsyncram_e5a1:auto_generated.q_a[23]
q_a[24] <= altsyncram_e5a1:auto_generated.q_a[24]
q_a[25] <= altsyncram_e5a1:auto_generated.q_a[25]
q_a[26] <= altsyncram_e5a1:auto_generated.q_a[26]
q_a[27] <= altsyncram_e5a1:auto_generated.q_a[27]
q_a[28] <= altsyncram_e5a1:auto_generated.q_a[28]
q_a[29] <= altsyncram_e5a1:auto_generated.q_a[29]
q_a[30] <= altsyncram_e5a1:auto_generated.q_a[30]
q_a[31] <= altsyncram_e5a1:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|top|RISC_processor:myRISC|myInstruction_memory:ROM|altsyncram:altsyncram_component|altsyncram_e5a1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT


|top|RISC_processor:myRISC|RISC_control:RISCcontroller
Opcode[0] => lw.IN0
Opcode[0] => R_format.IN0
Opcode[0] => Jump.IN0
Opcode[1] => lw.IN1
Opcode[1] => Jump.IN1
Opcode[1] => R_format.IN1
Opcode[2] => beq.IN1
Opcode[2] => R_format.IN1
Opcode[2] => Jump.IN1
Opcode[2] => lw.IN1
Opcode[3] => sw.IN1
Opcode[3] => R_format.IN1
Opcode[3] => Jump.IN1
Opcode[3] => beq.IN1
Opcode[3] => lw.IN1
Opcode[4] => R_format.IN1
Opcode[4] => Jump.IN1
Opcode[4] => beq.IN1
Opcode[4] => lw.IN1
Opcode[4] => sw.IN1
Opcode[5] => lw.IN1
Opcode[5] => sw.IN1
Opcode[5] => R_format.IN1
Opcode[5] => Jump.IN1
Opcode[5] => beq.IN1
RegDst <= R_format.DB_MAX_OUTPUT_PORT_TYPE
Jump <= Jump.DB_MAX_OUTPUT_PORT_TYPE
Branch <= beq.DB_MAX_OUTPUT_PORT_TYPE
MemRead <= lw.DB_MAX_OUTPUT_PORT_TYPE
MemtoReg <= lw.DB_MAX_OUTPUT_PORT_TYPE
MemWrite <= sw.DB_MAX_OUTPUT_PORT_TYPE
ALUsrc <= ALUsrc.DB_MAX_OUTPUT_PORT_TYPE
RegWrite <= RegWrite.DB_MAX_OUTPUT_PORT_TYPE
ALUop[0] <= beq.DB_MAX_OUTPUT_PORT_TYPE
ALUop[1] <= R_format.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:muxdestreg|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile
Clk => nbit_reg:Reg_1.clk
Clk => nbit_reg:Reg_2.clk
Clk => nbit_reg:Reg_3.clk
Clk => nbit_reg:Reg_4.clk
Clk => nbit_reg:Reg_5.clk
Clk => nbit_reg:Reg_6.clk
Clk => nbit_reg:Reg_7.clk
Clk => nbit_reg:Reg_8.clk
rst => nbit_reg:Reg_1.rst
rst => nbit_reg:Reg_2.rst
rst => nbit_reg:Reg_3.rst
rst => nbit_reg:Reg_4.rst
rst => nbit_reg:Reg_5.rst
rst => nbit_reg:Reg_6.rst
rst => nbit_reg:Reg_7.rst
rst => nbit_reg:Reg_8.rst
en => ~NO_FANOUT~
RegWrite => Write_en[0].IN1
RegWrite => Write_en[1].IN1
RegWrite => Write_en[2].IN1
RegWrite => Write_en[3].IN1
RegWrite => Write_en[4].IN1
RegWrite => Write_en[5].IN1
RegWrite => Write_en[6].IN1
RegWrite => Write_en[7].IN1
WriteReg[0] => decoder3_8:writeselector.sel[0]
WriteReg[1] => decoder3_8:writeselector.sel[1]
WriteReg[2] => decoder3_8:writeselector.sel[2]
WriteData[0] => nbit_reg:Reg_1.d[0]
WriteData[0] => nbit_reg:Reg_2.d[0]
WriteData[0] => nbit_reg:Reg_3.d[0]
WriteData[0] => nbit_reg:Reg_4.d[0]
WriteData[0] => nbit_reg:Reg_5.d[0]
WriteData[0] => nbit_reg:Reg_6.d[0]
WriteData[0] => nbit_reg:Reg_7.d[0]
WriteData[0] => nbit_reg:Reg_8.d[0]
WriteData[1] => nbit_reg:Reg_1.d[1]
WriteData[1] => nbit_reg:Reg_2.d[1]
WriteData[1] => nbit_reg:Reg_3.d[1]
WriteData[1] => nbit_reg:Reg_4.d[1]
WriteData[1] => nbit_reg:Reg_5.d[1]
WriteData[1] => nbit_reg:Reg_6.d[1]
WriteData[1] => nbit_reg:Reg_7.d[1]
WriteData[1] => nbit_reg:Reg_8.d[1]
WriteData[2] => nbit_reg:Reg_1.d[2]
WriteData[2] => nbit_reg:Reg_2.d[2]
WriteData[2] => nbit_reg:Reg_3.d[2]
WriteData[2] => nbit_reg:Reg_4.d[2]
WriteData[2] => nbit_reg:Reg_5.d[2]
WriteData[2] => nbit_reg:Reg_6.d[2]
WriteData[2] => nbit_reg:Reg_7.d[2]
WriteData[2] => nbit_reg:Reg_8.d[2]
WriteData[3] => nbit_reg:Reg_1.d[3]
WriteData[3] => nbit_reg:Reg_2.d[3]
WriteData[3] => nbit_reg:Reg_3.d[3]
WriteData[3] => nbit_reg:Reg_4.d[3]
WriteData[3] => nbit_reg:Reg_5.d[3]
WriteData[3] => nbit_reg:Reg_6.d[3]
WriteData[3] => nbit_reg:Reg_7.d[3]
WriteData[3] => nbit_reg:Reg_8.d[3]
WriteData[4] => nbit_reg:Reg_1.d[4]
WriteData[4] => nbit_reg:Reg_2.d[4]
WriteData[4] => nbit_reg:Reg_3.d[4]
WriteData[4] => nbit_reg:Reg_4.d[4]
WriteData[4] => nbit_reg:Reg_5.d[4]
WriteData[4] => nbit_reg:Reg_6.d[4]
WriteData[4] => nbit_reg:Reg_7.d[4]
WriteData[4] => nbit_reg:Reg_8.d[4]
WriteData[5] => nbit_reg:Reg_1.d[5]
WriteData[5] => nbit_reg:Reg_2.d[5]
WriteData[5] => nbit_reg:Reg_3.d[5]
WriteData[5] => nbit_reg:Reg_4.d[5]
WriteData[5] => nbit_reg:Reg_5.d[5]
WriteData[5] => nbit_reg:Reg_6.d[5]
WriteData[5] => nbit_reg:Reg_7.d[5]
WriteData[5] => nbit_reg:Reg_8.d[5]
WriteData[6] => nbit_reg:Reg_1.d[6]
WriteData[6] => nbit_reg:Reg_2.d[6]
WriteData[6] => nbit_reg:Reg_3.d[6]
WriteData[6] => nbit_reg:Reg_4.d[6]
WriteData[6] => nbit_reg:Reg_5.d[6]
WriteData[6] => nbit_reg:Reg_6.d[6]
WriteData[6] => nbit_reg:Reg_7.d[6]
WriteData[6] => nbit_reg:Reg_8.d[6]
WriteData[7] => nbit_reg:Reg_1.d[7]
WriteData[7] => nbit_reg:Reg_2.d[7]
WriteData[7] => nbit_reg:Reg_3.d[7]
WriteData[7] => nbit_reg:Reg_4.d[7]
WriteData[7] => nbit_reg:Reg_5.d[7]
WriteData[7] => nbit_reg:Reg_6.d[7]
WriteData[7] => nbit_reg:Reg_7.d[7]
WriteData[7] => nbit_reg:Reg_8.d[7]
WriteData[8] => nbit_reg:Reg_1.d[8]
WriteData[8] => nbit_reg:Reg_2.d[8]
WriteData[8] => nbit_reg:Reg_3.d[8]
WriteData[8] => nbit_reg:Reg_4.d[8]
WriteData[8] => nbit_reg:Reg_5.d[8]
WriteData[8] => nbit_reg:Reg_6.d[8]
WriteData[8] => nbit_reg:Reg_7.d[8]
WriteData[8] => nbit_reg:Reg_8.d[8]
WriteData[9] => nbit_reg:Reg_1.d[9]
WriteData[9] => nbit_reg:Reg_2.d[9]
WriteData[9] => nbit_reg:Reg_3.d[9]
WriteData[9] => nbit_reg:Reg_4.d[9]
WriteData[9] => nbit_reg:Reg_5.d[9]
WriteData[9] => nbit_reg:Reg_6.d[9]
WriteData[9] => nbit_reg:Reg_7.d[9]
WriteData[9] => nbit_reg:Reg_8.d[9]
WriteData[10] => nbit_reg:Reg_1.d[10]
WriteData[10] => nbit_reg:Reg_2.d[10]
WriteData[10] => nbit_reg:Reg_3.d[10]
WriteData[10] => nbit_reg:Reg_4.d[10]
WriteData[10] => nbit_reg:Reg_5.d[10]
WriteData[10] => nbit_reg:Reg_6.d[10]
WriteData[10] => nbit_reg:Reg_7.d[10]
WriteData[10] => nbit_reg:Reg_8.d[10]
WriteData[11] => nbit_reg:Reg_1.d[11]
WriteData[11] => nbit_reg:Reg_2.d[11]
WriteData[11] => nbit_reg:Reg_3.d[11]
WriteData[11] => nbit_reg:Reg_4.d[11]
WriteData[11] => nbit_reg:Reg_5.d[11]
WriteData[11] => nbit_reg:Reg_6.d[11]
WriteData[11] => nbit_reg:Reg_7.d[11]
WriteData[11] => nbit_reg:Reg_8.d[11]
WriteData[12] => nbit_reg:Reg_1.d[12]
WriteData[12] => nbit_reg:Reg_2.d[12]
WriteData[12] => nbit_reg:Reg_3.d[12]
WriteData[12] => nbit_reg:Reg_4.d[12]
WriteData[12] => nbit_reg:Reg_5.d[12]
WriteData[12] => nbit_reg:Reg_6.d[12]
WriteData[12] => nbit_reg:Reg_7.d[12]
WriteData[12] => nbit_reg:Reg_8.d[12]
WriteData[13] => nbit_reg:Reg_1.d[13]
WriteData[13] => nbit_reg:Reg_2.d[13]
WriteData[13] => nbit_reg:Reg_3.d[13]
WriteData[13] => nbit_reg:Reg_4.d[13]
WriteData[13] => nbit_reg:Reg_5.d[13]
WriteData[13] => nbit_reg:Reg_6.d[13]
WriteData[13] => nbit_reg:Reg_7.d[13]
WriteData[13] => nbit_reg:Reg_8.d[13]
WriteData[14] => nbit_reg:Reg_1.d[14]
WriteData[14] => nbit_reg:Reg_2.d[14]
WriteData[14] => nbit_reg:Reg_3.d[14]
WriteData[14] => nbit_reg:Reg_4.d[14]
WriteData[14] => nbit_reg:Reg_5.d[14]
WriteData[14] => nbit_reg:Reg_6.d[14]
WriteData[14] => nbit_reg:Reg_7.d[14]
WriteData[14] => nbit_reg:Reg_8.d[14]
WriteData[15] => nbit_reg:Reg_1.d[15]
WriteData[15] => nbit_reg:Reg_2.d[15]
WriteData[15] => nbit_reg:Reg_3.d[15]
WriteData[15] => nbit_reg:Reg_4.d[15]
WriteData[15] => nbit_reg:Reg_5.d[15]
WriteData[15] => nbit_reg:Reg_6.d[15]
WriteData[15] => nbit_reg:Reg_7.d[15]
WriteData[15] => nbit_reg:Reg_8.d[15]
WriteData[16] => nbit_reg:Reg_1.d[16]
WriteData[16] => nbit_reg:Reg_2.d[16]
WriteData[16] => nbit_reg:Reg_3.d[16]
WriteData[16] => nbit_reg:Reg_4.d[16]
WriteData[16] => nbit_reg:Reg_5.d[16]
WriteData[16] => nbit_reg:Reg_6.d[16]
WriteData[16] => nbit_reg:Reg_7.d[16]
WriteData[16] => nbit_reg:Reg_8.d[16]
WriteData[17] => nbit_reg:Reg_1.d[17]
WriteData[17] => nbit_reg:Reg_2.d[17]
WriteData[17] => nbit_reg:Reg_3.d[17]
WriteData[17] => nbit_reg:Reg_4.d[17]
WriteData[17] => nbit_reg:Reg_5.d[17]
WriteData[17] => nbit_reg:Reg_6.d[17]
WriteData[17] => nbit_reg:Reg_7.d[17]
WriteData[17] => nbit_reg:Reg_8.d[17]
WriteData[18] => nbit_reg:Reg_1.d[18]
WriteData[18] => nbit_reg:Reg_2.d[18]
WriteData[18] => nbit_reg:Reg_3.d[18]
WriteData[18] => nbit_reg:Reg_4.d[18]
WriteData[18] => nbit_reg:Reg_5.d[18]
WriteData[18] => nbit_reg:Reg_6.d[18]
WriteData[18] => nbit_reg:Reg_7.d[18]
WriteData[18] => nbit_reg:Reg_8.d[18]
WriteData[19] => nbit_reg:Reg_1.d[19]
WriteData[19] => nbit_reg:Reg_2.d[19]
WriteData[19] => nbit_reg:Reg_3.d[19]
WriteData[19] => nbit_reg:Reg_4.d[19]
WriteData[19] => nbit_reg:Reg_5.d[19]
WriteData[19] => nbit_reg:Reg_6.d[19]
WriteData[19] => nbit_reg:Reg_7.d[19]
WriteData[19] => nbit_reg:Reg_8.d[19]
WriteData[20] => nbit_reg:Reg_1.d[20]
WriteData[20] => nbit_reg:Reg_2.d[20]
WriteData[20] => nbit_reg:Reg_3.d[20]
WriteData[20] => nbit_reg:Reg_4.d[20]
WriteData[20] => nbit_reg:Reg_5.d[20]
WriteData[20] => nbit_reg:Reg_6.d[20]
WriteData[20] => nbit_reg:Reg_7.d[20]
WriteData[20] => nbit_reg:Reg_8.d[20]
WriteData[21] => nbit_reg:Reg_1.d[21]
WriteData[21] => nbit_reg:Reg_2.d[21]
WriteData[21] => nbit_reg:Reg_3.d[21]
WriteData[21] => nbit_reg:Reg_4.d[21]
WriteData[21] => nbit_reg:Reg_5.d[21]
WriteData[21] => nbit_reg:Reg_6.d[21]
WriteData[21] => nbit_reg:Reg_7.d[21]
WriteData[21] => nbit_reg:Reg_8.d[21]
WriteData[22] => nbit_reg:Reg_1.d[22]
WriteData[22] => nbit_reg:Reg_2.d[22]
WriteData[22] => nbit_reg:Reg_3.d[22]
WriteData[22] => nbit_reg:Reg_4.d[22]
WriteData[22] => nbit_reg:Reg_5.d[22]
WriteData[22] => nbit_reg:Reg_6.d[22]
WriteData[22] => nbit_reg:Reg_7.d[22]
WriteData[22] => nbit_reg:Reg_8.d[22]
WriteData[23] => nbit_reg:Reg_1.d[23]
WriteData[23] => nbit_reg:Reg_2.d[23]
WriteData[23] => nbit_reg:Reg_3.d[23]
WriteData[23] => nbit_reg:Reg_4.d[23]
WriteData[23] => nbit_reg:Reg_5.d[23]
WriteData[23] => nbit_reg:Reg_6.d[23]
WriteData[23] => nbit_reg:Reg_7.d[23]
WriteData[23] => nbit_reg:Reg_8.d[23]
WriteData[24] => nbit_reg:Reg_1.d[24]
WriteData[24] => nbit_reg:Reg_2.d[24]
WriteData[24] => nbit_reg:Reg_3.d[24]
WriteData[24] => nbit_reg:Reg_4.d[24]
WriteData[24] => nbit_reg:Reg_5.d[24]
WriteData[24] => nbit_reg:Reg_6.d[24]
WriteData[24] => nbit_reg:Reg_7.d[24]
WriteData[24] => nbit_reg:Reg_8.d[24]
WriteData[25] => nbit_reg:Reg_1.d[25]
WriteData[25] => nbit_reg:Reg_2.d[25]
WriteData[25] => nbit_reg:Reg_3.d[25]
WriteData[25] => nbit_reg:Reg_4.d[25]
WriteData[25] => nbit_reg:Reg_5.d[25]
WriteData[25] => nbit_reg:Reg_6.d[25]
WriteData[25] => nbit_reg:Reg_7.d[25]
WriteData[25] => nbit_reg:Reg_8.d[25]
WriteData[26] => nbit_reg:Reg_1.d[26]
WriteData[26] => nbit_reg:Reg_2.d[26]
WriteData[26] => nbit_reg:Reg_3.d[26]
WriteData[26] => nbit_reg:Reg_4.d[26]
WriteData[26] => nbit_reg:Reg_5.d[26]
WriteData[26] => nbit_reg:Reg_6.d[26]
WriteData[26] => nbit_reg:Reg_7.d[26]
WriteData[26] => nbit_reg:Reg_8.d[26]
WriteData[27] => nbit_reg:Reg_1.d[27]
WriteData[27] => nbit_reg:Reg_2.d[27]
WriteData[27] => nbit_reg:Reg_3.d[27]
WriteData[27] => nbit_reg:Reg_4.d[27]
WriteData[27] => nbit_reg:Reg_5.d[27]
WriteData[27] => nbit_reg:Reg_6.d[27]
WriteData[27] => nbit_reg:Reg_7.d[27]
WriteData[27] => nbit_reg:Reg_8.d[27]
WriteData[28] => nbit_reg:Reg_1.d[28]
WriteData[28] => nbit_reg:Reg_2.d[28]
WriteData[28] => nbit_reg:Reg_3.d[28]
WriteData[28] => nbit_reg:Reg_4.d[28]
WriteData[28] => nbit_reg:Reg_5.d[28]
WriteData[28] => nbit_reg:Reg_6.d[28]
WriteData[28] => nbit_reg:Reg_7.d[28]
WriteData[28] => nbit_reg:Reg_8.d[28]
WriteData[29] => nbit_reg:Reg_1.d[29]
WriteData[29] => nbit_reg:Reg_2.d[29]
WriteData[29] => nbit_reg:Reg_3.d[29]
WriteData[29] => nbit_reg:Reg_4.d[29]
WriteData[29] => nbit_reg:Reg_5.d[29]
WriteData[29] => nbit_reg:Reg_6.d[29]
WriteData[29] => nbit_reg:Reg_7.d[29]
WriteData[29] => nbit_reg:Reg_8.d[29]
WriteData[30] => nbit_reg:Reg_1.d[30]
WriteData[30] => nbit_reg:Reg_2.d[30]
WriteData[30] => nbit_reg:Reg_3.d[30]
WriteData[30] => nbit_reg:Reg_4.d[30]
WriteData[30] => nbit_reg:Reg_5.d[30]
WriteData[30] => nbit_reg:Reg_6.d[30]
WriteData[30] => nbit_reg:Reg_7.d[30]
WriteData[30] => nbit_reg:Reg_8.d[30]
WriteData[31] => nbit_reg:Reg_1.d[31]
WriteData[31] => nbit_reg:Reg_2.d[31]
WriteData[31] => nbit_reg:Reg_3.d[31]
WriteData[31] => nbit_reg:Reg_4.d[31]
WriteData[31] => nbit_reg:Reg_5.d[31]
WriteData[31] => nbit_reg:Reg_6.d[31]
WriteData[31] => nbit_reg:Reg_7.d[31]
WriteData[31] => nbit_reg:Reg_8.d[31]
ReadReg1[0] => nbitmux8_1:muxOut1.sel[0]
ReadReg1[1] => nbitmux8_1:muxOut1.sel[1]
ReadReg1[2] => nbitmux8_1:muxOut1.sel[2]
ReadReg2[0] => nbitmux8_1:muxOut2.sel[0]
ReadReg2[1] => nbitmux8_1:muxOut2.sel[1]
ReadReg2[2] => nbitmux8_1:muxOut2.sel[2]
ReadData1[0] <= nbitmux8_1:muxOut1.muxOut[0]
ReadData1[1] <= nbitmux8_1:muxOut1.muxOut[1]
ReadData1[2] <= nbitmux8_1:muxOut1.muxOut[2]
ReadData1[3] <= nbitmux8_1:muxOut1.muxOut[3]
ReadData1[4] <= nbitmux8_1:muxOut1.muxOut[4]
ReadData1[5] <= nbitmux8_1:muxOut1.muxOut[5]
ReadData1[6] <= nbitmux8_1:muxOut1.muxOut[6]
ReadData1[7] <= nbitmux8_1:muxOut1.muxOut[7]
ReadData1[8] <= nbitmux8_1:muxOut1.muxOut[8]
ReadData1[9] <= nbitmux8_1:muxOut1.muxOut[9]
ReadData1[10] <= nbitmux8_1:muxOut1.muxOut[10]
ReadData1[11] <= nbitmux8_1:muxOut1.muxOut[11]
ReadData1[12] <= nbitmux8_1:muxOut1.muxOut[12]
ReadData1[13] <= nbitmux8_1:muxOut1.muxOut[13]
ReadData1[14] <= nbitmux8_1:muxOut1.muxOut[14]
ReadData1[15] <= nbitmux8_1:muxOut1.muxOut[15]
ReadData1[16] <= nbitmux8_1:muxOut1.muxOut[16]
ReadData1[17] <= nbitmux8_1:muxOut1.muxOut[17]
ReadData1[18] <= nbitmux8_1:muxOut1.muxOut[18]
ReadData1[19] <= nbitmux8_1:muxOut1.muxOut[19]
ReadData1[20] <= nbitmux8_1:muxOut1.muxOut[20]
ReadData1[21] <= nbitmux8_1:muxOut1.muxOut[21]
ReadData1[22] <= nbitmux8_1:muxOut1.muxOut[22]
ReadData1[23] <= nbitmux8_1:muxOut1.muxOut[23]
ReadData1[24] <= nbitmux8_1:muxOut1.muxOut[24]
ReadData1[25] <= nbitmux8_1:muxOut1.muxOut[25]
ReadData1[26] <= nbitmux8_1:muxOut1.muxOut[26]
ReadData1[27] <= nbitmux8_1:muxOut1.muxOut[27]
ReadData1[28] <= nbitmux8_1:muxOut1.muxOut[28]
ReadData1[29] <= nbitmux8_1:muxOut1.muxOut[29]
ReadData1[30] <= nbitmux8_1:muxOut1.muxOut[30]
ReadData1[31] <= nbitmux8_1:muxOut1.muxOut[31]
ReadData2[0] <= nbitmux8_1:muxOut2.muxOut[0]
ReadData2[1] <= nbitmux8_1:muxOut2.muxOut[1]
ReadData2[2] <= nbitmux8_1:muxOut2.muxOut[2]
ReadData2[3] <= nbitmux8_1:muxOut2.muxOut[3]
ReadData2[4] <= nbitmux8_1:muxOut2.muxOut[4]
ReadData2[5] <= nbitmux8_1:muxOut2.muxOut[5]
ReadData2[6] <= nbitmux8_1:muxOut2.muxOut[6]
ReadData2[7] <= nbitmux8_1:muxOut2.muxOut[7]
ReadData2[8] <= nbitmux8_1:muxOut2.muxOut[8]
ReadData2[9] <= nbitmux8_1:muxOut2.muxOut[9]
ReadData2[10] <= nbitmux8_1:muxOut2.muxOut[10]
ReadData2[11] <= nbitmux8_1:muxOut2.muxOut[11]
ReadData2[12] <= nbitmux8_1:muxOut2.muxOut[12]
ReadData2[13] <= nbitmux8_1:muxOut2.muxOut[13]
ReadData2[14] <= nbitmux8_1:muxOut2.muxOut[14]
ReadData2[15] <= nbitmux8_1:muxOut2.muxOut[15]
ReadData2[16] <= nbitmux8_1:muxOut2.muxOut[16]
ReadData2[17] <= nbitmux8_1:muxOut2.muxOut[17]
ReadData2[18] <= nbitmux8_1:muxOut2.muxOut[18]
ReadData2[19] <= nbitmux8_1:muxOut2.muxOut[19]
ReadData2[20] <= nbitmux8_1:muxOut2.muxOut[20]
ReadData2[21] <= nbitmux8_1:muxOut2.muxOut[21]
ReadData2[22] <= nbitmux8_1:muxOut2.muxOut[22]
ReadData2[23] <= nbitmux8_1:muxOut2.muxOut[23]
ReadData2[24] <= nbitmux8_1:muxOut2.muxOut[24]
ReadData2[25] <= nbitmux8_1:muxOut2.muxOut[25]
ReadData2[26] <= nbitmux8_1:muxOut2.muxOut[26]
ReadData2[27] <= nbitmux8_1:muxOut2.muxOut[27]
ReadData2[28] <= nbitmux8_1:muxOut2.muxOut[28]
ReadData2[29] <= nbitmux8_1:muxOut2.muxOut[29]
ReadData2[30] <= nbitmux8_1:muxOut2.muxOut[30]
ReadData2[31] <= nbitmux8_1:muxOut2.muxOut[31]


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|decoder3_8:writeselector
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[0] => outbits.IN1
sel[1] => outbits.IN0
sel[1] => outbits.IN0
sel[1] => outbits.IN0
sel[1] => outbits.IN0
sel[2] => outbits.IN1
sel[2] => outbits.IN1
sel[2] => outbits.IN1
sel[2] => outbits.IN1
outbits[0] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[1] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[2] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[3] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[4] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[5] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[6] <= outbits.DB_MAX_OUTPUT_PORT_TYPE
outbits[7] <= outbits.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_1|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_2|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_3|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_4|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_5|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_6|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_7|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8
clk => d_ff:FA_f:0:FA_i.clk
clk => d_ff:FA_f:1:FA_i.clk
clk => d_ff:FA_f:2:FA_i.clk
clk => d_ff:FA_f:3:FA_i.clk
clk => d_ff:FA_f:4:FA_i.clk
clk => d_ff:FA_f:5:FA_i.clk
clk => d_ff:FA_f:6:FA_i.clk
clk => d_ff:FA_f:7:FA_i.clk
clk => d_ff:FA_f:8:FA_i.clk
clk => d_ff:FA_f:9:FA_i.clk
clk => d_ff:FA_f:10:FA_i.clk
clk => d_ff:FA_f:11:FA_i.clk
clk => d_ff:FA_f:12:FA_i.clk
clk => d_ff:FA_f:13:FA_i.clk
clk => d_ff:FA_f:14:FA_i.clk
clk => d_ff:FA_f:15:FA_i.clk
clk => d_ff:FA_f:16:FA_i.clk
clk => d_ff:FA_f:17:FA_i.clk
clk => d_ff:FA_f:18:FA_i.clk
clk => d_ff:FA_f:19:FA_i.clk
clk => d_ff:FA_f:20:FA_i.clk
clk => d_ff:FA_f:21:FA_i.clk
clk => d_ff:FA_f:22:FA_i.clk
clk => d_ff:FA_f:23:FA_i.clk
clk => d_ff:FA_f:24:FA_i.clk
clk => d_ff:FA_f:25:FA_i.clk
clk => d_ff:FA_f:26:FA_i.clk
clk => d_ff:FA_f:27:FA_i.clk
clk => d_ff:FA_f:28:FA_i.clk
clk => d_ff:FA_f:29:FA_i.clk
clk => d_ff:FA_f:30:FA_i.clk
clk => d_ff:FA_f:31:FA_i.clk
rst => d_ff:FA_f:0:FA_i.rst
rst => d_ff:FA_f:1:FA_i.rst
rst => d_ff:FA_f:2:FA_i.rst
rst => d_ff:FA_f:3:FA_i.rst
rst => d_ff:FA_f:4:FA_i.rst
rst => d_ff:FA_f:5:FA_i.rst
rst => d_ff:FA_f:6:FA_i.rst
rst => d_ff:FA_f:7:FA_i.rst
rst => d_ff:FA_f:8:FA_i.rst
rst => d_ff:FA_f:9:FA_i.rst
rst => d_ff:FA_f:10:FA_i.rst
rst => d_ff:FA_f:11:FA_i.rst
rst => d_ff:FA_f:12:FA_i.rst
rst => d_ff:FA_f:13:FA_i.rst
rst => d_ff:FA_f:14:FA_i.rst
rst => d_ff:FA_f:15:FA_i.rst
rst => d_ff:FA_f:16:FA_i.rst
rst => d_ff:FA_f:17:FA_i.rst
rst => d_ff:FA_f:18:FA_i.rst
rst => d_ff:FA_f:19:FA_i.rst
rst => d_ff:FA_f:20:FA_i.rst
rst => d_ff:FA_f:21:FA_i.rst
rst => d_ff:FA_f:22:FA_i.rst
rst => d_ff:FA_f:23:FA_i.rst
rst => d_ff:FA_f:24:FA_i.rst
rst => d_ff:FA_f:25:FA_i.rst
rst => d_ff:FA_f:26:FA_i.rst
rst => d_ff:FA_f:27:FA_i.rst
rst => d_ff:FA_f:28:FA_i.rst
rst => d_ff:FA_f:29:FA_i.rst
rst => d_ff:FA_f:30:FA_i.rst
rst => d_ff:FA_f:31:FA_i.rst
en => d_ff:FA_f:0:FA_i.en
en => d_ff:FA_f:1:FA_i.en
en => d_ff:FA_f:2:FA_i.en
en => d_ff:FA_f:3:FA_i.en
en => d_ff:FA_f:4:FA_i.en
en => d_ff:FA_f:5:FA_i.en
en => d_ff:FA_f:6:FA_i.en
en => d_ff:FA_f:7:FA_i.en
en => d_ff:FA_f:8:FA_i.en
en => d_ff:FA_f:9:FA_i.en
en => d_ff:FA_f:10:FA_i.en
en => d_ff:FA_f:11:FA_i.en
en => d_ff:FA_f:12:FA_i.en
en => d_ff:FA_f:13:FA_i.en
en => d_ff:FA_f:14:FA_i.en
en => d_ff:FA_f:15:FA_i.en
en => d_ff:FA_f:16:FA_i.en
en => d_ff:FA_f:17:FA_i.en
en => d_ff:FA_f:18:FA_i.en
en => d_ff:FA_f:19:FA_i.en
en => d_ff:FA_f:20:FA_i.en
en => d_ff:FA_f:21:FA_i.en
en => d_ff:FA_f:22:FA_i.en
en => d_ff:FA_f:23:FA_i.en
en => d_ff:FA_f:24:FA_i.en
en => d_ff:FA_f:25:FA_i.en
en => d_ff:FA_f:26:FA_i.en
en => d_ff:FA_f:27:FA_i.en
en => d_ff:FA_f:28:FA_i.en
en => d_ff:FA_f:29:FA_i.en
en => d_ff:FA_f:30:FA_i.en
en => d_ff:FA_f:31:FA_i.en
d[0] => d_ff:FA_f:0:FA_i.d
d[1] => d_ff:FA_f:1:FA_i.d
d[2] => d_ff:FA_f:2:FA_i.d
d[3] => d_ff:FA_f:3:FA_i.d
d[4] => d_ff:FA_f:4:FA_i.d
d[5] => d_ff:FA_f:5:FA_i.d
d[6] => d_ff:FA_f:6:FA_i.d
d[7] => d_ff:FA_f:7:FA_i.d
d[8] => d_ff:FA_f:8:FA_i.d
d[9] => d_ff:FA_f:9:FA_i.d
d[10] => d_ff:FA_f:10:FA_i.d
d[11] => d_ff:FA_f:11:FA_i.d
d[12] => d_ff:FA_f:12:FA_i.d
d[13] => d_ff:FA_f:13:FA_i.d
d[14] => d_ff:FA_f:14:FA_i.d
d[15] => d_ff:FA_f:15:FA_i.d
d[16] => d_ff:FA_f:16:FA_i.d
d[17] => d_ff:FA_f:17:FA_i.d
d[18] => d_ff:FA_f:18:FA_i.d
d[19] => d_ff:FA_f:19:FA_i.d
d[20] => d_ff:FA_f:20:FA_i.d
d[21] => d_ff:FA_f:21:FA_i.d
d[22] => d_ff:FA_f:22:FA_i.d
d[23] => d_ff:FA_f:23:FA_i.d
d[24] => d_ff:FA_f:24:FA_i.d
d[25] => d_ff:FA_f:25:FA_i.d
d[26] => d_ff:FA_f:26:FA_i.d
d[27] => d_ff:FA_f:27:FA_i.d
d[28] => d_ff:FA_f:28:FA_i.d
d[29] => d_ff:FA_f:29:FA_i.d
d[30] => d_ff:FA_f:30:FA_i.d
d[31] => d_ff:FA_f:31:FA_i.d
q[0] <= d_ff:FA_f:0:FA_i.q
q[1] <= d_ff:FA_f:1:FA_i.q
q[2] <= d_ff:FA_f:2:FA_i.q
q[3] <= d_ff:FA_f:3:FA_i.q
q[4] <= d_ff:FA_f:4:FA_i.q
q[5] <= d_ff:FA_f:5:FA_i.q
q[6] <= d_ff:FA_f:6:FA_i.q
q[7] <= d_ff:FA_f:7:FA_i.q
q[8] <= d_ff:FA_f:8:FA_i.q
q[9] <= d_ff:FA_f:9:FA_i.q
q[10] <= d_ff:FA_f:10:FA_i.q
q[11] <= d_ff:FA_f:11:FA_i.q
q[12] <= d_ff:FA_f:12:FA_i.q
q[13] <= d_ff:FA_f:13:FA_i.q
q[14] <= d_ff:FA_f:14:FA_i.q
q[15] <= d_ff:FA_f:15:FA_i.q
q[16] <= d_ff:FA_f:16:FA_i.q
q[17] <= d_ff:FA_f:17:FA_i.q
q[18] <= d_ff:FA_f:18:FA_i.q
q[19] <= d_ff:FA_f:19:FA_i.q
q[20] <= d_ff:FA_f:20:FA_i.q
q[21] <= d_ff:FA_f:21:FA_i.q
q[22] <= d_ff:FA_f:22:FA_i.q
q[23] <= d_ff:FA_f:23:FA_i.q
q[24] <= d_ff:FA_f:24:FA_i.q
q[25] <= d_ff:FA_f:25:FA_i.q
q[26] <= d_ff:FA_f:26:FA_i.q
q[27] <= d_ff:FA_f:27:FA_i.q
q[28] <= d_ff:FA_f:28:FA_i.q
q[29] <= d_ff:FA_f:29:FA_i.q
q[30] <= d_ff:FA_f:30:FA_i.q
q[31] <= d_ff:FA_f:31:FA_i.q


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:0:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:1:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:2:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:3:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:4:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:5:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:6:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:7:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:8:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:9:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:10:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:11:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:12:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:13:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:14:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:15:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:16:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:17:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:18:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:19:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:20:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:21:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:22:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:23:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:24:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:25:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:26:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:27:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:28:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:29:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:30:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbit_reg:Reg_8|d_ff:\FA_f:31:FA_i
clk => t.CLK
rst => t.ACLR
en => t.ENA
d => t.DATAIN
q <= t.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1
opt1[0] => mux8_1:MU_f:0:MU_i.opt1
opt1[1] => mux8_1:MU_f:1:MU_i.opt1
opt1[2] => mux8_1:MU_f:2:MU_i.opt1
opt1[3] => mux8_1:MU_f:3:MU_i.opt1
opt1[4] => mux8_1:MU_f:4:MU_i.opt1
opt1[5] => mux8_1:MU_f:5:MU_i.opt1
opt1[6] => mux8_1:MU_f:6:MU_i.opt1
opt1[7] => mux8_1:MU_f:7:MU_i.opt1
opt1[8] => mux8_1:MU_f:8:MU_i.opt1
opt1[9] => mux8_1:MU_f:9:MU_i.opt1
opt1[10] => mux8_1:MU_f:10:MU_i.opt1
opt1[11] => mux8_1:MU_f:11:MU_i.opt1
opt1[12] => mux8_1:MU_f:12:MU_i.opt1
opt1[13] => mux8_1:MU_f:13:MU_i.opt1
opt1[14] => mux8_1:MU_f:14:MU_i.opt1
opt1[15] => mux8_1:MU_f:15:MU_i.opt1
opt1[16] => mux8_1:MU_f:16:MU_i.opt1
opt1[17] => mux8_1:MU_f:17:MU_i.opt1
opt1[18] => mux8_1:MU_f:18:MU_i.opt1
opt1[19] => mux8_1:MU_f:19:MU_i.opt1
opt1[20] => mux8_1:MU_f:20:MU_i.opt1
opt1[21] => mux8_1:MU_f:21:MU_i.opt1
opt1[22] => mux8_1:MU_f:22:MU_i.opt1
opt1[23] => mux8_1:MU_f:23:MU_i.opt1
opt1[24] => mux8_1:MU_f:24:MU_i.opt1
opt1[25] => mux8_1:MU_f:25:MU_i.opt1
opt1[26] => mux8_1:MU_f:26:MU_i.opt1
opt1[27] => mux8_1:MU_f:27:MU_i.opt1
opt1[28] => mux8_1:MU_f:28:MU_i.opt1
opt1[29] => mux8_1:MU_f:29:MU_i.opt1
opt1[30] => mux8_1:MU_f:30:MU_i.opt1
opt1[31] => mux8_1:MU_f:31:MU_i.opt1
opt2[0] => mux8_1:MU_f:0:MU_i.opt2
opt2[1] => mux8_1:MU_f:1:MU_i.opt2
opt2[2] => mux8_1:MU_f:2:MU_i.opt2
opt2[3] => mux8_1:MU_f:3:MU_i.opt2
opt2[4] => mux8_1:MU_f:4:MU_i.opt2
opt2[5] => mux8_1:MU_f:5:MU_i.opt2
opt2[6] => mux8_1:MU_f:6:MU_i.opt2
opt2[7] => mux8_1:MU_f:7:MU_i.opt2
opt2[8] => mux8_1:MU_f:8:MU_i.opt2
opt2[9] => mux8_1:MU_f:9:MU_i.opt2
opt2[10] => mux8_1:MU_f:10:MU_i.opt2
opt2[11] => mux8_1:MU_f:11:MU_i.opt2
opt2[12] => mux8_1:MU_f:12:MU_i.opt2
opt2[13] => mux8_1:MU_f:13:MU_i.opt2
opt2[14] => mux8_1:MU_f:14:MU_i.opt2
opt2[15] => mux8_1:MU_f:15:MU_i.opt2
opt2[16] => mux8_1:MU_f:16:MU_i.opt2
opt2[17] => mux8_1:MU_f:17:MU_i.opt2
opt2[18] => mux8_1:MU_f:18:MU_i.opt2
opt2[19] => mux8_1:MU_f:19:MU_i.opt2
opt2[20] => mux8_1:MU_f:20:MU_i.opt2
opt2[21] => mux8_1:MU_f:21:MU_i.opt2
opt2[22] => mux8_1:MU_f:22:MU_i.opt2
opt2[23] => mux8_1:MU_f:23:MU_i.opt2
opt2[24] => mux8_1:MU_f:24:MU_i.opt2
opt2[25] => mux8_1:MU_f:25:MU_i.opt2
opt2[26] => mux8_1:MU_f:26:MU_i.opt2
opt2[27] => mux8_1:MU_f:27:MU_i.opt2
opt2[28] => mux8_1:MU_f:28:MU_i.opt2
opt2[29] => mux8_1:MU_f:29:MU_i.opt2
opt2[30] => mux8_1:MU_f:30:MU_i.opt2
opt2[31] => mux8_1:MU_f:31:MU_i.opt2
opt3[0] => mux8_1:MU_f:0:MU_i.opt3
opt3[1] => mux8_1:MU_f:1:MU_i.opt3
opt3[2] => mux8_1:MU_f:2:MU_i.opt3
opt3[3] => mux8_1:MU_f:3:MU_i.opt3
opt3[4] => mux8_1:MU_f:4:MU_i.opt3
opt3[5] => mux8_1:MU_f:5:MU_i.opt3
opt3[6] => mux8_1:MU_f:6:MU_i.opt3
opt3[7] => mux8_1:MU_f:7:MU_i.opt3
opt3[8] => mux8_1:MU_f:8:MU_i.opt3
opt3[9] => mux8_1:MU_f:9:MU_i.opt3
opt3[10] => mux8_1:MU_f:10:MU_i.opt3
opt3[11] => mux8_1:MU_f:11:MU_i.opt3
opt3[12] => mux8_1:MU_f:12:MU_i.opt3
opt3[13] => mux8_1:MU_f:13:MU_i.opt3
opt3[14] => mux8_1:MU_f:14:MU_i.opt3
opt3[15] => mux8_1:MU_f:15:MU_i.opt3
opt3[16] => mux8_1:MU_f:16:MU_i.opt3
opt3[17] => mux8_1:MU_f:17:MU_i.opt3
opt3[18] => mux8_1:MU_f:18:MU_i.opt3
opt3[19] => mux8_1:MU_f:19:MU_i.opt3
opt3[20] => mux8_1:MU_f:20:MU_i.opt3
opt3[21] => mux8_1:MU_f:21:MU_i.opt3
opt3[22] => mux8_1:MU_f:22:MU_i.opt3
opt3[23] => mux8_1:MU_f:23:MU_i.opt3
opt3[24] => mux8_1:MU_f:24:MU_i.opt3
opt3[25] => mux8_1:MU_f:25:MU_i.opt3
opt3[26] => mux8_1:MU_f:26:MU_i.opt3
opt3[27] => mux8_1:MU_f:27:MU_i.opt3
opt3[28] => mux8_1:MU_f:28:MU_i.opt3
opt3[29] => mux8_1:MU_f:29:MU_i.opt3
opt3[30] => mux8_1:MU_f:30:MU_i.opt3
opt3[31] => mux8_1:MU_f:31:MU_i.opt3
opt4[0] => mux8_1:MU_f:0:MU_i.opt4
opt4[1] => mux8_1:MU_f:1:MU_i.opt4
opt4[2] => mux8_1:MU_f:2:MU_i.opt4
opt4[3] => mux8_1:MU_f:3:MU_i.opt4
opt4[4] => mux8_1:MU_f:4:MU_i.opt4
opt4[5] => mux8_1:MU_f:5:MU_i.opt4
opt4[6] => mux8_1:MU_f:6:MU_i.opt4
opt4[7] => mux8_1:MU_f:7:MU_i.opt4
opt4[8] => mux8_1:MU_f:8:MU_i.opt4
opt4[9] => mux8_1:MU_f:9:MU_i.opt4
opt4[10] => mux8_1:MU_f:10:MU_i.opt4
opt4[11] => mux8_1:MU_f:11:MU_i.opt4
opt4[12] => mux8_1:MU_f:12:MU_i.opt4
opt4[13] => mux8_1:MU_f:13:MU_i.opt4
opt4[14] => mux8_1:MU_f:14:MU_i.opt4
opt4[15] => mux8_1:MU_f:15:MU_i.opt4
opt4[16] => mux8_1:MU_f:16:MU_i.opt4
opt4[17] => mux8_1:MU_f:17:MU_i.opt4
opt4[18] => mux8_1:MU_f:18:MU_i.opt4
opt4[19] => mux8_1:MU_f:19:MU_i.opt4
opt4[20] => mux8_1:MU_f:20:MU_i.opt4
opt4[21] => mux8_1:MU_f:21:MU_i.opt4
opt4[22] => mux8_1:MU_f:22:MU_i.opt4
opt4[23] => mux8_1:MU_f:23:MU_i.opt4
opt4[24] => mux8_1:MU_f:24:MU_i.opt4
opt4[25] => mux8_1:MU_f:25:MU_i.opt4
opt4[26] => mux8_1:MU_f:26:MU_i.opt4
opt4[27] => mux8_1:MU_f:27:MU_i.opt4
opt4[28] => mux8_1:MU_f:28:MU_i.opt4
opt4[29] => mux8_1:MU_f:29:MU_i.opt4
opt4[30] => mux8_1:MU_f:30:MU_i.opt4
opt4[31] => mux8_1:MU_f:31:MU_i.opt4
opt5[0] => mux8_1:MU_f:0:MU_i.opt5
opt5[1] => mux8_1:MU_f:1:MU_i.opt5
opt5[2] => mux8_1:MU_f:2:MU_i.opt5
opt5[3] => mux8_1:MU_f:3:MU_i.opt5
opt5[4] => mux8_1:MU_f:4:MU_i.opt5
opt5[5] => mux8_1:MU_f:5:MU_i.opt5
opt5[6] => mux8_1:MU_f:6:MU_i.opt5
opt5[7] => mux8_1:MU_f:7:MU_i.opt5
opt5[8] => mux8_1:MU_f:8:MU_i.opt5
opt5[9] => mux8_1:MU_f:9:MU_i.opt5
opt5[10] => mux8_1:MU_f:10:MU_i.opt5
opt5[11] => mux8_1:MU_f:11:MU_i.opt5
opt5[12] => mux8_1:MU_f:12:MU_i.opt5
opt5[13] => mux8_1:MU_f:13:MU_i.opt5
opt5[14] => mux8_1:MU_f:14:MU_i.opt5
opt5[15] => mux8_1:MU_f:15:MU_i.opt5
opt5[16] => mux8_1:MU_f:16:MU_i.opt5
opt5[17] => mux8_1:MU_f:17:MU_i.opt5
opt5[18] => mux8_1:MU_f:18:MU_i.opt5
opt5[19] => mux8_1:MU_f:19:MU_i.opt5
opt5[20] => mux8_1:MU_f:20:MU_i.opt5
opt5[21] => mux8_1:MU_f:21:MU_i.opt5
opt5[22] => mux8_1:MU_f:22:MU_i.opt5
opt5[23] => mux8_1:MU_f:23:MU_i.opt5
opt5[24] => mux8_1:MU_f:24:MU_i.opt5
opt5[25] => mux8_1:MU_f:25:MU_i.opt5
opt5[26] => mux8_1:MU_f:26:MU_i.opt5
opt5[27] => mux8_1:MU_f:27:MU_i.opt5
opt5[28] => mux8_1:MU_f:28:MU_i.opt5
opt5[29] => mux8_1:MU_f:29:MU_i.opt5
opt5[30] => mux8_1:MU_f:30:MU_i.opt5
opt5[31] => mux8_1:MU_f:31:MU_i.opt5
opt6[0] => mux8_1:MU_f:0:MU_i.opt6
opt6[1] => mux8_1:MU_f:1:MU_i.opt6
opt6[2] => mux8_1:MU_f:2:MU_i.opt6
opt6[3] => mux8_1:MU_f:3:MU_i.opt6
opt6[4] => mux8_1:MU_f:4:MU_i.opt6
opt6[5] => mux8_1:MU_f:5:MU_i.opt6
opt6[6] => mux8_1:MU_f:6:MU_i.opt6
opt6[7] => mux8_1:MU_f:7:MU_i.opt6
opt6[8] => mux8_1:MU_f:8:MU_i.opt6
opt6[9] => mux8_1:MU_f:9:MU_i.opt6
opt6[10] => mux8_1:MU_f:10:MU_i.opt6
opt6[11] => mux8_1:MU_f:11:MU_i.opt6
opt6[12] => mux8_1:MU_f:12:MU_i.opt6
opt6[13] => mux8_1:MU_f:13:MU_i.opt6
opt6[14] => mux8_1:MU_f:14:MU_i.opt6
opt6[15] => mux8_1:MU_f:15:MU_i.opt6
opt6[16] => mux8_1:MU_f:16:MU_i.opt6
opt6[17] => mux8_1:MU_f:17:MU_i.opt6
opt6[18] => mux8_1:MU_f:18:MU_i.opt6
opt6[19] => mux8_1:MU_f:19:MU_i.opt6
opt6[20] => mux8_1:MU_f:20:MU_i.opt6
opt6[21] => mux8_1:MU_f:21:MU_i.opt6
opt6[22] => mux8_1:MU_f:22:MU_i.opt6
opt6[23] => mux8_1:MU_f:23:MU_i.opt6
opt6[24] => mux8_1:MU_f:24:MU_i.opt6
opt6[25] => mux8_1:MU_f:25:MU_i.opt6
opt6[26] => mux8_1:MU_f:26:MU_i.opt6
opt6[27] => mux8_1:MU_f:27:MU_i.opt6
opt6[28] => mux8_1:MU_f:28:MU_i.opt6
opt6[29] => mux8_1:MU_f:29:MU_i.opt6
opt6[30] => mux8_1:MU_f:30:MU_i.opt6
opt6[31] => mux8_1:MU_f:31:MU_i.opt6
opt7[0] => mux8_1:MU_f:0:MU_i.opt7
opt7[1] => mux8_1:MU_f:1:MU_i.opt7
opt7[2] => mux8_1:MU_f:2:MU_i.opt7
opt7[3] => mux8_1:MU_f:3:MU_i.opt7
opt7[4] => mux8_1:MU_f:4:MU_i.opt7
opt7[5] => mux8_1:MU_f:5:MU_i.opt7
opt7[6] => mux8_1:MU_f:6:MU_i.opt7
opt7[7] => mux8_1:MU_f:7:MU_i.opt7
opt7[8] => mux8_1:MU_f:8:MU_i.opt7
opt7[9] => mux8_1:MU_f:9:MU_i.opt7
opt7[10] => mux8_1:MU_f:10:MU_i.opt7
opt7[11] => mux8_1:MU_f:11:MU_i.opt7
opt7[12] => mux8_1:MU_f:12:MU_i.opt7
opt7[13] => mux8_1:MU_f:13:MU_i.opt7
opt7[14] => mux8_1:MU_f:14:MU_i.opt7
opt7[15] => mux8_1:MU_f:15:MU_i.opt7
opt7[16] => mux8_1:MU_f:16:MU_i.opt7
opt7[17] => mux8_1:MU_f:17:MU_i.opt7
opt7[18] => mux8_1:MU_f:18:MU_i.opt7
opt7[19] => mux8_1:MU_f:19:MU_i.opt7
opt7[20] => mux8_1:MU_f:20:MU_i.opt7
opt7[21] => mux8_1:MU_f:21:MU_i.opt7
opt7[22] => mux8_1:MU_f:22:MU_i.opt7
opt7[23] => mux8_1:MU_f:23:MU_i.opt7
opt7[24] => mux8_1:MU_f:24:MU_i.opt7
opt7[25] => mux8_1:MU_f:25:MU_i.opt7
opt7[26] => mux8_1:MU_f:26:MU_i.opt7
opt7[27] => mux8_1:MU_f:27:MU_i.opt7
opt7[28] => mux8_1:MU_f:28:MU_i.opt7
opt7[29] => mux8_1:MU_f:29:MU_i.opt7
opt7[30] => mux8_1:MU_f:30:MU_i.opt7
opt7[31] => mux8_1:MU_f:31:MU_i.opt7
opt8[0] => mux8_1:MU_f:0:MU_i.opt8
opt8[1] => mux8_1:MU_f:1:MU_i.opt8
opt8[2] => mux8_1:MU_f:2:MU_i.opt8
opt8[3] => mux8_1:MU_f:3:MU_i.opt8
opt8[4] => mux8_1:MU_f:4:MU_i.opt8
opt8[5] => mux8_1:MU_f:5:MU_i.opt8
opt8[6] => mux8_1:MU_f:6:MU_i.opt8
opt8[7] => mux8_1:MU_f:7:MU_i.opt8
opt8[8] => mux8_1:MU_f:8:MU_i.opt8
opt8[9] => mux8_1:MU_f:9:MU_i.opt8
opt8[10] => mux8_1:MU_f:10:MU_i.opt8
opt8[11] => mux8_1:MU_f:11:MU_i.opt8
opt8[12] => mux8_1:MU_f:12:MU_i.opt8
opt8[13] => mux8_1:MU_f:13:MU_i.opt8
opt8[14] => mux8_1:MU_f:14:MU_i.opt8
opt8[15] => mux8_1:MU_f:15:MU_i.opt8
opt8[16] => mux8_1:MU_f:16:MU_i.opt8
opt8[17] => mux8_1:MU_f:17:MU_i.opt8
opt8[18] => mux8_1:MU_f:18:MU_i.opt8
opt8[19] => mux8_1:MU_f:19:MU_i.opt8
opt8[20] => mux8_1:MU_f:20:MU_i.opt8
opt8[21] => mux8_1:MU_f:21:MU_i.opt8
opt8[22] => mux8_1:MU_f:22:MU_i.opt8
opt8[23] => mux8_1:MU_f:23:MU_i.opt8
opt8[24] => mux8_1:MU_f:24:MU_i.opt8
opt8[25] => mux8_1:MU_f:25:MU_i.opt8
opt8[26] => mux8_1:MU_f:26:MU_i.opt8
opt8[27] => mux8_1:MU_f:27:MU_i.opt8
opt8[28] => mux8_1:MU_f:28:MU_i.opt8
opt8[29] => mux8_1:MU_f:29:MU_i.opt8
opt8[30] => mux8_1:MU_f:30:MU_i.opt8
opt8[31] => mux8_1:MU_f:31:MU_i.opt8
sel[0] => mux8_1:MU_f:0:MU_i.sel[0]
sel[0] => mux8_1:MU_f:1:MU_i.sel[0]
sel[0] => mux8_1:MU_f:2:MU_i.sel[0]
sel[0] => mux8_1:MU_f:3:MU_i.sel[0]
sel[0] => mux8_1:MU_f:4:MU_i.sel[0]
sel[0] => mux8_1:MU_f:5:MU_i.sel[0]
sel[0] => mux8_1:MU_f:6:MU_i.sel[0]
sel[0] => mux8_1:MU_f:7:MU_i.sel[0]
sel[0] => mux8_1:MU_f:8:MU_i.sel[0]
sel[0] => mux8_1:MU_f:9:MU_i.sel[0]
sel[0] => mux8_1:MU_f:10:MU_i.sel[0]
sel[0] => mux8_1:MU_f:11:MU_i.sel[0]
sel[0] => mux8_1:MU_f:12:MU_i.sel[0]
sel[0] => mux8_1:MU_f:13:MU_i.sel[0]
sel[0] => mux8_1:MU_f:14:MU_i.sel[0]
sel[0] => mux8_1:MU_f:15:MU_i.sel[0]
sel[0] => mux8_1:MU_f:16:MU_i.sel[0]
sel[0] => mux8_1:MU_f:17:MU_i.sel[0]
sel[0] => mux8_1:MU_f:18:MU_i.sel[0]
sel[0] => mux8_1:MU_f:19:MU_i.sel[0]
sel[0] => mux8_1:MU_f:20:MU_i.sel[0]
sel[0] => mux8_1:MU_f:21:MU_i.sel[0]
sel[0] => mux8_1:MU_f:22:MU_i.sel[0]
sel[0] => mux8_1:MU_f:23:MU_i.sel[0]
sel[0] => mux8_1:MU_f:24:MU_i.sel[0]
sel[0] => mux8_1:MU_f:25:MU_i.sel[0]
sel[0] => mux8_1:MU_f:26:MU_i.sel[0]
sel[0] => mux8_1:MU_f:27:MU_i.sel[0]
sel[0] => mux8_1:MU_f:28:MU_i.sel[0]
sel[0] => mux8_1:MU_f:29:MU_i.sel[0]
sel[0] => mux8_1:MU_f:30:MU_i.sel[0]
sel[0] => mux8_1:MU_f:31:MU_i.sel[0]
sel[1] => mux8_1:MU_f:0:MU_i.sel[1]
sel[1] => mux8_1:MU_f:1:MU_i.sel[1]
sel[1] => mux8_1:MU_f:2:MU_i.sel[1]
sel[1] => mux8_1:MU_f:3:MU_i.sel[1]
sel[1] => mux8_1:MU_f:4:MU_i.sel[1]
sel[1] => mux8_1:MU_f:5:MU_i.sel[1]
sel[1] => mux8_1:MU_f:6:MU_i.sel[1]
sel[1] => mux8_1:MU_f:7:MU_i.sel[1]
sel[1] => mux8_1:MU_f:8:MU_i.sel[1]
sel[1] => mux8_1:MU_f:9:MU_i.sel[1]
sel[1] => mux8_1:MU_f:10:MU_i.sel[1]
sel[1] => mux8_1:MU_f:11:MU_i.sel[1]
sel[1] => mux8_1:MU_f:12:MU_i.sel[1]
sel[1] => mux8_1:MU_f:13:MU_i.sel[1]
sel[1] => mux8_1:MU_f:14:MU_i.sel[1]
sel[1] => mux8_1:MU_f:15:MU_i.sel[1]
sel[1] => mux8_1:MU_f:16:MU_i.sel[1]
sel[1] => mux8_1:MU_f:17:MU_i.sel[1]
sel[1] => mux8_1:MU_f:18:MU_i.sel[1]
sel[1] => mux8_1:MU_f:19:MU_i.sel[1]
sel[1] => mux8_1:MU_f:20:MU_i.sel[1]
sel[1] => mux8_1:MU_f:21:MU_i.sel[1]
sel[1] => mux8_1:MU_f:22:MU_i.sel[1]
sel[1] => mux8_1:MU_f:23:MU_i.sel[1]
sel[1] => mux8_1:MU_f:24:MU_i.sel[1]
sel[1] => mux8_1:MU_f:25:MU_i.sel[1]
sel[1] => mux8_1:MU_f:26:MU_i.sel[1]
sel[1] => mux8_1:MU_f:27:MU_i.sel[1]
sel[1] => mux8_1:MU_f:28:MU_i.sel[1]
sel[1] => mux8_1:MU_f:29:MU_i.sel[1]
sel[1] => mux8_1:MU_f:30:MU_i.sel[1]
sel[1] => mux8_1:MU_f:31:MU_i.sel[1]
sel[2] => mux8_1:MU_f:0:MU_i.sel[2]
sel[2] => mux8_1:MU_f:1:MU_i.sel[2]
sel[2] => mux8_1:MU_f:2:MU_i.sel[2]
sel[2] => mux8_1:MU_f:3:MU_i.sel[2]
sel[2] => mux8_1:MU_f:4:MU_i.sel[2]
sel[2] => mux8_1:MU_f:5:MU_i.sel[2]
sel[2] => mux8_1:MU_f:6:MU_i.sel[2]
sel[2] => mux8_1:MU_f:7:MU_i.sel[2]
sel[2] => mux8_1:MU_f:8:MU_i.sel[2]
sel[2] => mux8_1:MU_f:9:MU_i.sel[2]
sel[2] => mux8_1:MU_f:10:MU_i.sel[2]
sel[2] => mux8_1:MU_f:11:MU_i.sel[2]
sel[2] => mux8_1:MU_f:12:MU_i.sel[2]
sel[2] => mux8_1:MU_f:13:MU_i.sel[2]
sel[2] => mux8_1:MU_f:14:MU_i.sel[2]
sel[2] => mux8_1:MU_f:15:MU_i.sel[2]
sel[2] => mux8_1:MU_f:16:MU_i.sel[2]
sel[2] => mux8_1:MU_f:17:MU_i.sel[2]
sel[2] => mux8_1:MU_f:18:MU_i.sel[2]
sel[2] => mux8_1:MU_f:19:MU_i.sel[2]
sel[2] => mux8_1:MU_f:20:MU_i.sel[2]
sel[2] => mux8_1:MU_f:21:MU_i.sel[2]
sel[2] => mux8_1:MU_f:22:MU_i.sel[2]
sel[2] => mux8_1:MU_f:23:MU_i.sel[2]
sel[2] => mux8_1:MU_f:24:MU_i.sel[2]
sel[2] => mux8_1:MU_f:25:MU_i.sel[2]
sel[2] => mux8_1:MU_f:26:MU_i.sel[2]
sel[2] => mux8_1:MU_f:27:MU_i.sel[2]
sel[2] => mux8_1:MU_f:28:MU_i.sel[2]
sel[2] => mux8_1:MU_f:29:MU_i.sel[2]
sel[2] => mux8_1:MU_f:30:MU_i.sel[2]
sel[2] => mux8_1:MU_f:31:MU_i.sel[2]
muxOut[0] <= mux8_1:MU_f:0:MU_i.muxOut
muxOut[1] <= mux8_1:MU_f:1:MU_i.muxOut
muxOut[2] <= mux8_1:MU_f:2:MU_i.muxOut
muxOut[3] <= mux8_1:MU_f:3:MU_i.muxOut
muxOut[4] <= mux8_1:MU_f:4:MU_i.muxOut
muxOut[5] <= mux8_1:MU_f:5:MU_i.muxOut
muxOut[6] <= mux8_1:MU_f:6:MU_i.muxOut
muxOut[7] <= mux8_1:MU_f:7:MU_i.muxOut
muxOut[8] <= mux8_1:MU_f:8:MU_i.muxOut
muxOut[9] <= mux8_1:MU_f:9:MU_i.muxOut
muxOut[10] <= mux8_1:MU_f:10:MU_i.muxOut
muxOut[11] <= mux8_1:MU_f:11:MU_i.muxOut
muxOut[12] <= mux8_1:MU_f:12:MU_i.muxOut
muxOut[13] <= mux8_1:MU_f:13:MU_i.muxOut
muxOut[14] <= mux8_1:MU_f:14:MU_i.muxOut
muxOut[15] <= mux8_1:MU_f:15:MU_i.muxOut
muxOut[16] <= mux8_1:MU_f:16:MU_i.muxOut
muxOut[17] <= mux8_1:MU_f:17:MU_i.muxOut
muxOut[18] <= mux8_1:MU_f:18:MU_i.muxOut
muxOut[19] <= mux8_1:MU_f:19:MU_i.muxOut
muxOut[20] <= mux8_1:MU_f:20:MU_i.muxOut
muxOut[21] <= mux8_1:MU_f:21:MU_i.muxOut
muxOut[22] <= mux8_1:MU_f:22:MU_i.muxOut
muxOut[23] <= mux8_1:MU_f:23:MU_i.muxOut
muxOut[24] <= mux8_1:MU_f:24:MU_i.muxOut
muxOut[25] <= mux8_1:MU_f:25:MU_i.muxOut
muxOut[26] <= mux8_1:MU_f:26:MU_i.muxOut
muxOut[27] <= mux8_1:MU_f:27:MU_i.muxOut
muxOut[28] <= mux8_1:MU_f:28:MU_i.muxOut
muxOut[29] <= mux8_1:MU_f:29:MU_i.muxOut
muxOut[30] <= mux8_1:MU_f:30:MU_i.muxOut
muxOut[31] <= mux8_1:MU_f:31:MU_i.muxOut


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:0:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:1:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:2:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:3:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:4:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:5:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:6:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:7:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:8:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:9:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:10:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:11:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:12:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:13:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:14:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:15:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:16:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:17:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:18:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:19:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:20:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:21:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:22:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:23:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:24:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:25:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:26:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:27:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:28:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:29:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:30:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut1|mux8_1:\MU_f:31:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2
opt1[0] => mux8_1:MU_f:0:MU_i.opt1
opt1[1] => mux8_1:MU_f:1:MU_i.opt1
opt1[2] => mux8_1:MU_f:2:MU_i.opt1
opt1[3] => mux8_1:MU_f:3:MU_i.opt1
opt1[4] => mux8_1:MU_f:4:MU_i.opt1
opt1[5] => mux8_1:MU_f:5:MU_i.opt1
opt1[6] => mux8_1:MU_f:6:MU_i.opt1
opt1[7] => mux8_1:MU_f:7:MU_i.opt1
opt1[8] => mux8_1:MU_f:8:MU_i.opt1
opt1[9] => mux8_1:MU_f:9:MU_i.opt1
opt1[10] => mux8_1:MU_f:10:MU_i.opt1
opt1[11] => mux8_1:MU_f:11:MU_i.opt1
opt1[12] => mux8_1:MU_f:12:MU_i.opt1
opt1[13] => mux8_1:MU_f:13:MU_i.opt1
opt1[14] => mux8_1:MU_f:14:MU_i.opt1
opt1[15] => mux8_1:MU_f:15:MU_i.opt1
opt1[16] => mux8_1:MU_f:16:MU_i.opt1
opt1[17] => mux8_1:MU_f:17:MU_i.opt1
opt1[18] => mux8_1:MU_f:18:MU_i.opt1
opt1[19] => mux8_1:MU_f:19:MU_i.opt1
opt1[20] => mux8_1:MU_f:20:MU_i.opt1
opt1[21] => mux8_1:MU_f:21:MU_i.opt1
opt1[22] => mux8_1:MU_f:22:MU_i.opt1
opt1[23] => mux8_1:MU_f:23:MU_i.opt1
opt1[24] => mux8_1:MU_f:24:MU_i.opt1
opt1[25] => mux8_1:MU_f:25:MU_i.opt1
opt1[26] => mux8_1:MU_f:26:MU_i.opt1
opt1[27] => mux8_1:MU_f:27:MU_i.opt1
opt1[28] => mux8_1:MU_f:28:MU_i.opt1
opt1[29] => mux8_1:MU_f:29:MU_i.opt1
opt1[30] => mux8_1:MU_f:30:MU_i.opt1
opt1[31] => mux8_1:MU_f:31:MU_i.opt1
opt2[0] => mux8_1:MU_f:0:MU_i.opt2
opt2[1] => mux8_1:MU_f:1:MU_i.opt2
opt2[2] => mux8_1:MU_f:2:MU_i.opt2
opt2[3] => mux8_1:MU_f:3:MU_i.opt2
opt2[4] => mux8_1:MU_f:4:MU_i.opt2
opt2[5] => mux8_1:MU_f:5:MU_i.opt2
opt2[6] => mux8_1:MU_f:6:MU_i.opt2
opt2[7] => mux8_1:MU_f:7:MU_i.opt2
opt2[8] => mux8_1:MU_f:8:MU_i.opt2
opt2[9] => mux8_1:MU_f:9:MU_i.opt2
opt2[10] => mux8_1:MU_f:10:MU_i.opt2
opt2[11] => mux8_1:MU_f:11:MU_i.opt2
opt2[12] => mux8_1:MU_f:12:MU_i.opt2
opt2[13] => mux8_1:MU_f:13:MU_i.opt2
opt2[14] => mux8_1:MU_f:14:MU_i.opt2
opt2[15] => mux8_1:MU_f:15:MU_i.opt2
opt2[16] => mux8_1:MU_f:16:MU_i.opt2
opt2[17] => mux8_1:MU_f:17:MU_i.opt2
opt2[18] => mux8_1:MU_f:18:MU_i.opt2
opt2[19] => mux8_1:MU_f:19:MU_i.opt2
opt2[20] => mux8_1:MU_f:20:MU_i.opt2
opt2[21] => mux8_1:MU_f:21:MU_i.opt2
opt2[22] => mux8_1:MU_f:22:MU_i.opt2
opt2[23] => mux8_1:MU_f:23:MU_i.opt2
opt2[24] => mux8_1:MU_f:24:MU_i.opt2
opt2[25] => mux8_1:MU_f:25:MU_i.opt2
opt2[26] => mux8_1:MU_f:26:MU_i.opt2
opt2[27] => mux8_1:MU_f:27:MU_i.opt2
opt2[28] => mux8_1:MU_f:28:MU_i.opt2
opt2[29] => mux8_1:MU_f:29:MU_i.opt2
opt2[30] => mux8_1:MU_f:30:MU_i.opt2
opt2[31] => mux8_1:MU_f:31:MU_i.opt2
opt3[0] => mux8_1:MU_f:0:MU_i.opt3
opt3[1] => mux8_1:MU_f:1:MU_i.opt3
opt3[2] => mux8_1:MU_f:2:MU_i.opt3
opt3[3] => mux8_1:MU_f:3:MU_i.opt3
opt3[4] => mux8_1:MU_f:4:MU_i.opt3
opt3[5] => mux8_1:MU_f:5:MU_i.opt3
opt3[6] => mux8_1:MU_f:6:MU_i.opt3
opt3[7] => mux8_1:MU_f:7:MU_i.opt3
opt3[8] => mux8_1:MU_f:8:MU_i.opt3
opt3[9] => mux8_1:MU_f:9:MU_i.opt3
opt3[10] => mux8_1:MU_f:10:MU_i.opt3
opt3[11] => mux8_1:MU_f:11:MU_i.opt3
opt3[12] => mux8_1:MU_f:12:MU_i.opt3
opt3[13] => mux8_1:MU_f:13:MU_i.opt3
opt3[14] => mux8_1:MU_f:14:MU_i.opt3
opt3[15] => mux8_1:MU_f:15:MU_i.opt3
opt3[16] => mux8_1:MU_f:16:MU_i.opt3
opt3[17] => mux8_1:MU_f:17:MU_i.opt3
opt3[18] => mux8_1:MU_f:18:MU_i.opt3
opt3[19] => mux8_1:MU_f:19:MU_i.opt3
opt3[20] => mux8_1:MU_f:20:MU_i.opt3
opt3[21] => mux8_1:MU_f:21:MU_i.opt3
opt3[22] => mux8_1:MU_f:22:MU_i.opt3
opt3[23] => mux8_1:MU_f:23:MU_i.opt3
opt3[24] => mux8_1:MU_f:24:MU_i.opt3
opt3[25] => mux8_1:MU_f:25:MU_i.opt3
opt3[26] => mux8_1:MU_f:26:MU_i.opt3
opt3[27] => mux8_1:MU_f:27:MU_i.opt3
opt3[28] => mux8_1:MU_f:28:MU_i.opt3
opt3[29] => mux8_1:MU_f:29:MU_i.opt3
opt3[30] => mux8_1:MU_f:30:MU_i.opt3
opt3[31] => mux8_1:MU_f:31:MU_i.opt3
opt4[0] => mux8_1:MU_f:0:MU_i.opt4
opt4[1] => mux8_1:MU_f:1:MU_i.opt4
opt4[2] => mux8_1:MU_f:2:MU_i.opt4
opt4[3] => mux8_1:MU_f:3:MU_i.opt4
opt4[4] => mux8_1:MU_f:4:MU_i.opt4
opt4[5] => mux8_1:MU_f:5:MU_i.opt4
opt4[6] => mux8_1:MU_f:6:MU_i.opt4
opt4[7] => mux8_1:MU_f:7:MU_i.opt4
opt4[8] => mux8_1:MU_f:8:MU_i.opt4
opt4[9] => mux8_1:MU_f:9:MU_i.opt4
opt4[10] => mux8_1:MU_f:10:MU_i.opt4
opt4[11] => mux8_1:MU_f:11:MU_i.opt4
opt4[12] => mux8_1:MU_f:12:MU_i.opt4
opt4[13] => mux8_1:MU_f:13:MU_i.opt4
opt4[14] => mux8_1:MU_f:14:MU_i.opt4
opt4[15] => mux8_1:MU_f:15:MU_i.opt4
opt4[16] => mux8_1:MU_f:16:MU_i.opt4
opt4[17] => mux8_1:MU_f:17:MU_i.opt4
opt4[18] => mux8_1:MU_f:18:MU_i.opt4
opt4[19] => mux8_1:MU_f:19:MU_i.opt4
opt4[20] => mux8_1:MU_f:20:MU_i.opt4
opt4[21] => mux8_1:MU_f:21:MU_i.opt4
opt4[22] => mux8_1:MU_f:22:MU_i.opt4
opt4[23] => mux8_1:MU_f:23:MU_i.opt4
opt4[24] => mux8_1:MU_f:24:MU_i.opt4
opt4[25] => mux8_1:MU_f:25:MU_i.opt4
opt4[26] => mux8_1:MU_f:26:MU_i.opt4
opt4[27] => mux8_1:MU_f:27:MU_i.opt4
opt4[28] => mux8_1:MU_f:28:MU_i.opt4
opt4[29] => mux8_1:MU_f:29:MU_i.opt4
opt4[30] => mux8_1:MU_f:30:MU_i.opt4
opt4[31] => mux8_1:MU_f:31:MU_i.opt4
opt5[0] => mux8_1:MU_f:0:MU_i.opt5
opt5[1] => mux8_1:MU_f:1:MU_i.opt5
opt5[2] => mux8_1:MU_f:2:MU_i.opt5
opt5[3] => mux8_1:MU_f:3:MU_i.opt5
opt5[4] => mux8_1:MU_f:4:MU_i.opt5
opt5[5] => mux8_1:MU_f:5:MU_i.opt5
opt5[6] => mux8_1:MU_f:6:MU_i.opt5
opt5[7] => mux8_1:MU_f:7:MU_i.opt5
opt5[8] => mux8_1:MU_f:8:MU_i.opt5
opt5[9] => mux8_1:MU_f:9:MU_i.opt5
opt5[10] => mux8_1:MU_f:10:MU_i.opt5
opt5[11] => mux8_1:MU_f:11:MU_i.opt5
opt5[12] => mux8_1:MU_f:12:MU_i.opt5
opt5[13] => mux8_1:MU_f:13:MU_i.opt5
opt5[14] => mux8_1:MU_f:14:MU_i.opt5
opt5[15] => mux8_1:MU_f:15:MU_i.opt5
opt5[16] => mux8_1:MU_f:16:MU_i.opt5
opt5[17] => mux8_1:MU_f:17:MU_i.opt5
opt5[18] => mux8_1:MU_f:18:MU_i.opt5
opt5[19] => mux8_1:MU_f:19:MU_i.opt5
opt5[20] => mux8_1:MU_f:20:MU_i.opt5
opt5[21] => mux8_1:MU_f:21:MU_i.opt5
opt5[22] => mux8_1:MU_f:22:MU_i.opt5
opt5[23] => mux8_1:MU_f:23:MU_i.opt5
opt5[24] => mux8_1:MU_f:24:MU_i.opt5
opt5[25] => mux8_1:MU_f:25:MU_i.opt5
opt5[26] => mux8_1:MU_f:26:MU_i.opt5
opt5[27] => mux8_1:MU_f:27:MU_i.opt5
opt5[28] => mux8_1:MU_f:28:MU_i.opt5
opt5[29] => mux8_1:MU_f:29:MU_i.opt5
opt5[30] => mux8_1:MU_f:30:MU_i.opt5
opt5[31] => mux8_1:MU_f:31:MU_i.opt5
opt6[0] => mux8_1:MU_f:0:MU_i.opt6
opt6[1] => mux8_1:MU_f:1:MU_i.opt6
opt6[2] => mux8_1:MU_f:2:MU_i.opt6
opt6[3] => mux8_1:MU_f:3:MU_i.opt6
opt6[4] => mux8_1:MU_f:4:MU_i.opt6
opt6[5] => mux8_1:MU_f:5:MU_i.opt6
opt6[6] => mux8_1:MU_f:6:MU_i.opt6
opt6[7] => mux8_1:MU_f:7:MU_i.opt6
opt6[8] => mux8_1:MU_f:8:MU_i.opt6
opt6[9] => mux8_1:MU_f:9:MU_i.opt6
opt6[10] => mux8_1:MU_f:10:MU_i.opt6
opt6[11] => mux8_1:MU_f:11:MU_i.opt6
opt6[12] => mux8_1:MU_f:12:MU_i.opt6
opt6[13] => mux8_1:MU_f:13:MU_i.opt6
opt6[14] => mux8_1:MU_f:14:MU_i.opt6
opt6[15] => mux8_1:MU_f:15:MU_i.opt6
opt6[16] => mux8_1:MU_f:16:MU_i.opt6
opt6[17] => mux8_1:MU_f:17:MU_i.opt6
opt6[18] => mux8_1:MU_f:18:MU_i.opt6
opt6[19] => mux8_1:MU_f:19:MU_i.opt6
opt6[20] => mux8_1:MU_f:20:MU_i.opt6
opt6[21] => mux8_1:MU_f:21:MU_i.opt6
opt6[22] => mux8_1:MU_f:22:MU_i.opt6
opt6[23] => mux8_1:MU_f:23:MU_i.opt6
opt6[24] => mux8_1:MU_f:24:MU_i.opt6
opt6[25] => mux8_1:MU_f:25:MU_i.opt6
opt6[26] => mux8_1:MU_f:26:MU_i.opt6
opt6[27] => mux8_1:MU_f:27:MU_i.opt6
opt6[28] => mux8_1:MU_f:28:MU_i.opt6
opt6[29] => mux8_1:MU_f:29:MU_i.opt6
opt6[30] => mux8_1:MU_f:30:MU_i.opt6
opt6[31] => mux8_1:MU_f:31:MU_i.opt6
opt7[0] => mux8_1:MU_f:0:MU_i.opt7
opt7[1] => mux8_1:MU_f:1:MU_i.opt7
opt7[2] => mux8_1:MU_f:2:MU_i.opt7
opt7[3] => mux8_1:MU_f:3:MU_i.opt7
opt7[4] => mux8_1:MU_f:4:MU_i.opt7
opt7[5] => mux8_1:MU_f:5:MU_i.opt7
opt7[6] => mux8_1:MU_f:6:MU_i.opt7
opt7[7] => mux8_1:MU_f:7:MU_i.opt7
opt7[8] => mux8_1:MU_f:8:MU_i.opt7
opt7[9] => mux8_1:MU_f:9:MU_i.opt7
opt7[10] => mux8_1:MU_f:10:MU_i.opt7
opt7[11] => mux8_1:MU_f:11:MU_i.opt7
opt7[12] => mux8_1:MU_f:12:MU_i.opt7
opt7[13] => mux8_1:MU_f:13:MU_i.opt7
opt7[14] => mux8_1:MU_f:14:MU_i.opt7
opt7[15] => mux8_1:MU_f:15:MU_i.opt7
opt7[16] => mux8_1:MU_f:16:MU_i.opt7
opt7[17] => mux8_1:MU_f:17:MU_i.opt7
opt7[18] => mux8_1:MU_f:18:MU_i.opt7
opt7[19] => mux8_1:MU_f:19:MU_i.opt7
opt7[20] => mux8_1:MU_f:20:MU_i.opt7
opt7[21] => mux8_1:MU_f:21:MU_i.opt7
opt7[22] => mux8_1:MU_f:22:MU_i.opt7
opt7[23] => mux8_1:MU_f:23:MU_i.opt7
opt7[24] => mux8_1:MU_f:24:MU_i.opt7
opt7[25] => mux8_1:MU_f:25:MU_i.opt7
opt7[26] => mux8_1:MU_f:26:MU_i.opt7
opt7[27] => mux8_1:MU_f:27:MU_i.opt7
opt7[28] => mux8_1:MU_f:28:MU_i.opt7
opt7[29] => mux8_1:MU_f:29:MU_i.opt7
opt7[30] => mux8_1:MU_f:30:MU_i.opt7
opt7[31] => mux8_1:MU_f:31:MU_i.opt7
opt8[0] => mux8_1:MU_f:0:MU_i.opt8
opt8[1] => mux8_1:MU_f:1:MU_i.opt8
opt8[2] => mux8_1:MU_f:2:MU_i.opt8
opt8[3] => mux8_1:MU_f:3:MU_i.opt8
opt8[4] => mux8_1:MU_f:4:MU_i.opt8
opt8[5] => mux8_1:MU_f:5:MU_i.opt8
opt8[6] => mux8_1:MU_f:6:MU_i.opt8
opt8[7] => mux8_1:MU_f:7:MU_i.opt8
opt8[8] => mux8_1:MU_f:8:MU_i.opt8
opt8[9] => mux8_1:MU_f:9:MU_i.opt8
opt8[10] => mux8_1:MU_f:10:MU_i.opt8
opt8[11] => mux8_1:MU_f:11:MU_i.opt8
opt8[12] => mux8_1:MU_f:12:MU_i.opt8
opt8[13] => mux8_1:MU_f:13:MU_i.opt8
opt8[14] => mux8_1:MU_f:14:MU_i.opt8
opt8[15] => mux8_1:MU_f:15:MU_i.opt8
opt8[16] => mux8_1:MU_f:16:MU_i.opt8
opt8[17] => mux8_1:MU_f:17:MU_i.opt8
opt8[18] => mux8_1:MU_f:18:MU_i.opt8
opt8[19] => mux8_1:MU_f:19:MU_i.opt8
opt8[20] => mux8_1:MU_f:20:MU_i.opt8
opt8[21] => mux8_1:MU_f:21:MU_i.opt8
opt8[22] => mux8_1:MU_f:22:MU_i.opt8
opt8[23] => mux8_1:MU_f:23:MU_i.opt8
opt8[24] => mux8_1:MU_f:24:MU_i.opt8
opt8[25] => mux8_1:MU_f:25:MU_i.opt8
opt8[26] => mux8_1:MU_f:26:MU_i.opt8
opt8[27] => mux8_1:MU_f:27:MU_i.opt8
opt8[28] => mux8_1:MU_f:28:MU_i.opt8
opt8[29] => mux8_1:MU_f:29:MU_i.opt8
opt8[30] => mux8_1:MU_f:30:MU_i.opt8
opt8[31] => mux8_1:MU_f:31:MU_i.opt8
sel[0] => mux8_1:MU_f:0:MU_i.sel[0]
sel[0] => mux8_1:MU_f:1:MU_i.sel[0]
sel[0] => mux8_1:MU_f:2:MU_i.sel[0]
sel[0] => mux8_1:MU_f:3:MU_i.sel[0]
sel[0] => mux8_1:MU_f:4:MU_i.sel[0]
sel[0] => mux8_1:MU_f:5:MU_i.sel[0]
sel[0] => mux8_1:MU_f:6:MU_i.sel[0]
sel[0] => mux8_1:MU_f:7:MU_i.sel[0]
sel[0] => mux8_1:MU_f:8:MU_i.sel[0]
sel[0] => mux8_1:MU_f:9:MU_i.sel[0]
sel[0] => mux8_1:MU_f:10:MU_i.sel[0]
sel[0] => mux8_1:MU_f:11:MU_i.sel[0]
sel[0] => mux8_1:MU_f:12:MU_i.sel[0]
sel[0] => mux8_1:MU_f:13:MU_i.sel[0]
sel[0] => mux8_1:MU_f:14:MU_i.sel[0]
sel[0] => mux8_1:MU_f:15:MU_i.sel[0]
sel[0] => mux8_1:MU_f:16:MU_i.sel[0]
sel[0] => mux8_1:MU_f:17:MU_i.sel[0]
sel[0] => mux8_1:MU_f:18:MU_i.sel[0]
sel[0] => mux8_1:MU_f:19:MU_i.sel[0]
sel[0] => mux8_1:MU_f:20:MU_i.sel[0]
sel[0] => mux8_1:MU_f:21:MU_i.sel[0]
sel[0] => mux8_1:MU_f:22:MU_i.sel[0]
sel[0] => mux8_1:MU_f:23:MU_i.sel[0]
sel[0] => mux8_1:MU_f:24:MU_i.sel[0]
sel[0] => mux8_1:MU_f:25:MU_i.sel[0]
sel[0] => mux8_1:MU_f:26:MU_i.sel[0]
sel[0] => mux8_1:MU_f:27:MU_i.sel[0]
sel[0] => mux8_1:MU_f:28:MU_i.sel[0]
sel[0] => mux8_1:MU_f:29:MU_i.sel[0]
sel[0] => mux8_1:MU_f:30:MU_i.sel[0]
sel[0] => mux8_1:MU_f:31:MU_i.sel[0]
sel[1] => mux8_1:MU_f:0:MU_i.sel[1]
sel[1] => mux8_1:MU_f:1:MU_i.sel[1]
sel[1] => mux8_1:MU_f:2:MU_i.sel[1]
sel[1] => mux8_1:MU_f:3:MU_i.sel[1]
sel[1] => mux8_1:MU_f:4:MU_i.sel[1]
sel[1] => mux8_1:MU_f:5:MU_i.sel[1]
sel[1] => mux8_1:MU_f:6:MU_i.sel[1]
sel[1] => mux8_1:MU_f:7:MU_i.sel[1]
sel[1] => mux8_1:MU_f:8:MU_i.sel[1]
sel[1] => mux8_1:MU_f:9:MU_i.sel[1]
sel[1] => mux8_1:MU_f:10:MU_i.sel[1]
sel[1] => mux8_1:MU_f:11:MU_i.sel[1]
sel[1] => mux8_1:MU_f:12:MU_i.sel[1]
sel[1] => mux8_1:MU_f:13:MU_i.sel[1]
sel[1] => mux8_1:MU_f:14:MU_i.sel[1]
sel[1] => mux8_1:MU_f:15:MU_i.sel[1]
sel[1] => mux8_1:MU_f:16:MU_i.sel[1]
sel[1] => mux8_1:MU_f:17:MU_i.sel[1]
sel[1] => mux8_1:MU_f:18:MU_i.sel[1]
sel[1] => mux8_1:MU_f:19:MU_i.sel[1]
sel[1] => mux8_1:MU_f:20:MU_i.sel[1]
sel[1] => mux8_1:MU_f:21:MU_i.sel[1]
sel[1] => mux8_1:MU_f:22:MU_i.sel[1]
sel[1] => mux8_1:MU_f:23:MU_i.sel[1]
sel[1] => mux8_1:MU_f:24:MU_i.sel[1]
sel[1] => mux8_1:MU_f:25:MU_i.sel[1]
sel[1] => mux8_1:MU_f:26:MU_i.sel[1]
sel[1] => mux8_1:MU_f:27:MU_i.sel[1]
sel[1] => mux8_1:MU_f:28:MU_i.sel[1]
sel[1] => mux8_1:MU_f:29:MU_i.sel[1]
sel[1] => mux8_1:MU_f:30:MU_i.sel[1]
sel[1] => mux8_1:MU_f:31:MU_i.sel[1]
sel[2] => mux8_1:MU_f:0:MU_i.sel[2]
sel[2] => mux8_1:MU_f:1:MU_i.sel[2]
sel[2] => mux8_1:MU_f:2:MU_i.sel[2]
sel[2] => mux8_1:MU_f:3:MU_i.sel[2]
sel[2] => mux8_1:MU_f:4:MU_i.sel[2]
sel[2] => mux8_1:MU_f:5:MU_i.sel[2]
sel[2] => mux8_1:MU_f:6:MU_i.sel[2]
sel[2] => mux8_1:MU_f:7:MU_i.sel[2]
sel[2] => mux8_1:MU_f:8:MU_i.sel[2]
sel[2] => mux8_1:MU_f:9:MU_i.sel[2]
sel[2] => mux8_1:MU_f:10:MU_i.sel[2]
sel[2] => mux8_1:MU_f:11:MU_i.sel[2]
sel[2] => mux8_1:MU_f:12:MU_i.sel[2]
sel[2] => mux8_1:MU_f:13:MU_i.sel[2]
sel[2] => mux8_1:MU_f:14:MU_i.sel[2]
sel[2] => mux8_1:MU_f:15:MU_i.sel[2]
sel[2] => mux8_1:MU_f:16:MU_i.sel[2]
sel[2] => mux8_1:MU_f:17:MU_i.sel[2]
sel[2] => mux8_1:MU_f:18:MU_i.sel[2]
sel[2] => mux8_1:MU_f:19:MU_i.sel[2]
sel[2] => mux8_1:MU_f:20:MU_i.sel[2]
sel[2] => mux8_1:MU_f:21:MU_i.sel[2]
sel[2] => mux8_1:MU_f:22:MU_i.sel[2]
sel[2] => mux8_1:MU_f:23:MU_i.sel[2]
sel[2] => mux8_1:MU_f:24:MU_i.sel[2]
sel[2] => mux8_1:MU_f:25:MU_i.sel[2]
sel[2] => mux8_1:MU_f:26:MU_i.sel[2]
sel[2] => mux8_1:MU_f:27:MU_i.sel[2]
sel[2] => mux8_1:MU_f:28:MU_i.sel[2]
sel[2] => mux8_1:MU_f:29:MU_i.sel[2]
sel[2] => mux8_1:MU_f:30:MU_i.sel[2]
sel[2] => mux8_1:MU_f:31:MU_i.sel[2]
muxOut[0] <= mux8_1:MU_f:0:MU_i.muxOut
muxOut[1] <= mux8_1:MU_f:1:MU_i.muxOut
muxOut[2] <= mux8_1:MU_f:2:MU_i.muxOut
muxOut[3] <= mux8_1:MU_f:3:MU_i.muxOut
muxOut[4] <= mux8_1:MU_f:4:MU_i.muxOut
muxOut[5] <= mux8_1:MU_f:5:MU_i.muxOut
muxOut[6] <= mux8_1:MU_f:6:MU_i.muxOut
muxOut[7] <= mux8_1:MU_f:7:MU_i.muxOut
muxOut[8] <= mux8_1:MU_f:8:MU_i.muxOut
muxOut[9] <= mux8_1:MU_f:9:MU_i.muxOut
muxOut[10] <= mux8_1:MU_f:10:MU_i.muxOut
muxOut[11] <= mux8_1:MU_f:11:MU_i.muxOut
muxOut[12] <= mux8_1:MU_f:12:MU_i.muxOut
muxOut[13] <= mux8_1:MU_f:13:MU_i.muxOut
muxOut[14] <= mux8_1:MU_f:14:MU_i.muxOut
muxOut[15] <= mux8_1:MU_f:15:MU_i.muxOut
muxOut[16] <= mux8_1:MU_f:16:MU_i.muxOut
muxOut[17] <= mux8_1:MU_f:17:MU_i.muxOut
muxOut[18] <= mux8_1:MU_f:18:MU_i.muxOut
muxOut[19] <= mux8_1:MU_f:19:MU_i.muxOut
muxOut[20] <= mux8_1:MU_f:20:MU_i.muxOut
muxOut[21] <= mux8_1:MU_f:21:MU_i.muxOut
muxOut[22] <= mux8_1:MU_f:22:MU_i.muxOut
muxOut[23] <= mux8_1:MU_f:23:MU_i.muxOut
muxOut[24] <= mux8_1:MU_f:24:MU_i.muxOut
muxOut[25] <= mux8_1:MU_f:25:MU_i.muxOut
muxOut[26] <= mux8_1:MU_f:26:MU_i.muxOut
muxOut[27] <= mux8_1:MU_f:27:MU_i.muxOut
muxOut[28] <= mux8_1:MU_f:28:MU_i.muxOut
muxOut[29] <= mux8_1:MU_f:29:MU_i.muxOut
muxOut[30] <= mux8_1:MU_f:30:MU_i.muxOut
muxOut[31] <= mux8_1:MU_f:31:MU_i.muxOut


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:0:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:1:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:2:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:3:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:4:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:5:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:6:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:7:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:8:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:9:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:10:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:11:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:12:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:13:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:14:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:15:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:16:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:17:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:18:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:19:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:20:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:21:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:22:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:23:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:24:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:25:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:26:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:27:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:28:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:29:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:30:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|registerfile_8x32:myregfile|nbitmux8_1:muxOut2|mux8_1:\MU_f:31:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|ALUcontrol:myALUcontroller
ALUop[0] => operation.IN1
ALUop[1] => operation.IN1
ALUop[1] => operation.IN0
ALUop[1] => operation.IN0
function_field[0] => operation.IN0
function_field[1] => operation.IN1
function_field[2] => operation.IN1
function_field[3] => operation.IN1
function_field[4] => ~NO_FANOUT~
function_field[5] => ~NO_FANOUT~
operation[0] <= operation.DB_MAX_OUTPUT_PORT_TYPE
operation[1] <= operation.DB_MAX_OUTPUT_PORT_TYPE
operation[2] <= operation.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt1[5] => mux_2_1:Mx_f:5:Mx_i.opt1
opt1[6] => mux_2_1:Mx_f:6:Mx_i.opt1
opt1[7] => mux_2_1:Mx_f:7:Mx_i.opt1
opt1[8] => mux_2_1:Mx_f:8:Mx_i.opt1
opt1[9] => mux_2_1:Mx_f:9:Mx_i.opt1
opt1[10] => mux_2_1:Mx_f:10:Mx_i.opt1
opt1[11] => mux_2_1:Mx_f:11:Mx_i.opt1
opt1[12] => mux_2_1:Mx_f:12:Mx_i.opt1
opt1[13] => mux_2_1:Mx_f:13:Mx_i.opt1
opt1[14] => mux_2_1:Mx_f:14:Mx_i.opt1
opt1[15] => mux_2_1:Mx_f:15:Mx_i.opt1
opt1[16] => mux_2_1:Mx_f:16:Mx_i.opt1
opt1[17] => mux_2_1:Mx_f:17:Mx_i.opt1
opt1[18] => mux_2_1:Mx_f:18:Mx_i.opt1
opt1[19] => mux_2_1:Mx_f:19:Mx_i.opt1
opt1[20] => mux_2_1:Mx_f:20:Mx_i.opt1
opt1[21] => mux_2_1:Mx_f:21:Mx_i.opt1
opt1[22] => mux_2_1:Mx_f:22:Mx_i.opt1
opt1[23] => mux_2_1:Mx_f:23:Mx_i.opt1
opt1[24] => mux_2_1:Mx_f:24:Mx_i.opt1
opt1[25] => mux_2_1:Mx_f:25:Mx_i.opt1
opt1[26] => mux_2_1:Mx_f:26:Mx_i.opt1
opt1[27] => mux_2_1:Mx_f:27:Mx_i.opt1
opt1[28] => mux_2_1:Mx_f:28:Mx_i.opt1
opt1[29] => mux_2_1:Mx_f:29:Mx_i.opt1
opt1[30] => mux_2_1:Mx_f:30:Mx_i.opt1
opt1[31] => mux_2_1:Mx_f:31:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
opt2[5] => mux_2_1:Mx_f:5:Mx_i.opt2
opt2[6] => mux_2_1:Mx_f:6:Mx_i.opt2
opt2[7] => mux_2_1:Mx_f:7:Mx_i.opt2
opt2[8] => mux_2_1:Mx_f:8:Mx_i.opt2
opt2[9] => mux_2_1:Mx_f:9:Mx_i.opt2
opt2[10] => mux_2_1:Mx_f:10:Mx_i.opt2
opt2[11] => mux_2_1:Mx_f:11:Mx_i.opt2
opt2[12] => mux_2_1:Mx_f:12:Mx_i.opt2
opt2[13] => mux_2_1:Mx_f:13:Mx_i.opt2
opt2[14] => mux_2_1:Mx_f:14:Mx_i.opt2
opt2[15] => mux_2_1:Mx_f:15:Mx_i.opt2
opt2[16] => mux_2_1:Mx_f:16:Mx_i.opt2
opt2[17] => mux_2_1:Mx_f:17:Mx_i.opt2
opt2[18] => mux_2_1:Mx_f:18:Mx_i.opt2
opt2[19] => mux_2_1:Mx_f:19:Mx_i.opt2
opt2[20] => mux_2_1:Mx_f:20:Mx_i.opt2
opt2[21] => mux_2_1:Mx_f:21:Mx_i.opt2
opt2[22] => mux_2_1:Mx_f:22:Mx_i.opt2
opt2[23] => mux_2_1:Mx_f:23:Mx_i.opt2
opt2[24] => mux_2_1:Mx_f:24:Mx_i.opt2
opt2[25] => mux_2_1:Mx_f:25:Mx_i.opt2
opt2[26] => mux_2_1:Mx_f:26:Mx_i.opt2
opt2[27] => mux_2_1:Mx_f:27:Mx_i.opt2
opt2[28] => mux_2_1:Mx_f:28:Mx_i.opt2
opt2[29] => mux_2_1:Mx_f:29:Mx_i.opt2
opt2[30] => mux_2_1:Mx_f:30:Mx_i.opt2
opt2[31] => mux_2_1:Mx_f:31:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
sel => mux_2_1:Mx_f:5:Mx_i.sel
sel => mux_2_1:Mx_f:6:Mx_i.sel
sel => mux_2_1:Mx_f:7:Mx_i.sel
sel => mux_2_1:Mx_f:8:Mx_i.sel
sel => mux_2_1:Mx_f:9:Mx_i.sel
sel => mux_2_1:Mx_f:10:Mx_i.sel
sel => mux_2_1:Mx_f:11:Mx_i.sel
sel => mux_2_1:Mx_f:12:Mx_i.sel
sel => mux_2_1:Mx_f:13:Mx_i.sel
sel => mux_2_1:Mx_f:14:Mx_i.sel
sel => mux_2_1:Mx_f:15:Mx_i.sel
sel => mux_2_1:Mx_f:16:Mx_i.sel
sel => mux_2_1:Mx_f:17:Mx_i.sel
sel => mux_2_1:Mx_f:18:Mx_i.sel
sel => mux_2_1:Mx_f:19:Mx_i.sel
sel => mux_2_1:Mx_f:20:Mx_i.sel
sel => mux_2_1:Mx_f:21:Mx_i.sel
sel => mux_2_1:Mx_f:22:Mx_i.sel
sel => mux_2_1:Mx_f:23:Mx_i.sel
sel => mux_2_1:Mx_f:24:Mx_i.sel
sel => mux_2_1:Mx_f:25:Mx_i.sel
sel => mux_2_1:Mx_f:26:Mx_i.sel
sel => mux_2_1:Mx_f:27:Mx_i.sel
sel => mux_2_1:Mx_f:28:Mx_i.sel
sel => mux_2_1:Mx_f:29:Mx_i.sel
sel => mux_2_1:Mx_f:30:Mx_i.sel
sel => mux_2_1:Mx_f:31:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut
muxOut[5] <= mux_2_1:Mx_f:5:Mx_i.muxOut
muxOut[6] <= mux_2_1:Mx_f:6:Mx_i.muxOut
muxOut[7] <= mux_2_1:Mx_f:7:Mx_i.muxOut
muxOut[8] <= mux_2_1:Mx_f:8:Mx_i.muxOut
muxOut[9] <= mux_2_1:Mx_f:9:Mx_i.muxOut
muxOut[10] <= mux_2_1:Mx_f:10:Mx_i.muxOut
muxOut[11] <= mux_2_1:Mx_f:11:Mx_i.muxOut
muxOut[12] <= mux_2_1:Mx_f:12:Mx_i.muxOut
muxOut[13] <= mux_2_1:Mx_f:13:Mx_i.muxOut
muxOut[14] <= mux_2_1:Mx_f:14:Mx_i.muxOut
muxOut[15] <= mux_2_1:Mx_f:15:Mx_i.muxOut
muxOut[16] <= mux_2_1:Mx_f:16:Mx_i.muxOut
muxOut[17] <= mux_2_1:Mx_f:17:Mx_i.muxOut
muxOut[18] <= mux_2_1:Mx_f:18:Mx_i.muxOut
muxOut[19] <= mux_2_1:Mx_f:19:Mx_i.muxOut
muxOut[20] <= mux_2_1:Mx_f:20:Mx_i.muxOut
muxOut[21] <= mux_2_1:Mx_f:21:Mx_i.muxOut
muxOut[22] <= mux_2_1:Mx_f:22:Mx_i.muxOut
muxOut[23] <= mux_2_1:Mx_f:23:Mx_i.muxOut
muxOut[24] <= mux_2_1:Mx_f:24:Mx_i.muxOut
muxOut[25] <= mux_2_1:Mx_f:25:Mx_i.muxOut
muxOut[26] <= mux_2_1:Mx_f:26:Mx_i.muxOut
muxOut[27] <= mux_2_1:Mx_f:27:Mx_i.muxOut
muxOut[28] <= mux_2_1:Mx_f:28:Mx_i.muxOut
muxOut[29] <= mux_2_1:Mx_f:29:Mx_i.muxOut
muxOut[30] <= mux_2_1:Mx_f:30:Mx_i.muxOut
muxOut[31] <= mux_2_1:Mx_f:31:Mx_i.muxOut


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:5:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:6:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:7:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:8:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:9:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:10:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:11:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:12:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:13:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:14:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:15:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:16:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:17:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:18:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:19:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:20:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:21:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:22:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:23:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:24:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:25:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:26:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:27:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:28:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:29:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:30:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:ALUmainMux|mux_2_1:\Mx_f:31:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN
A[0] => and_out[0].IN0
A[0] => or_out[0].IN0
A[0] => zero.IN0
A[0] => nbit_adder:adder32bits.A[0]
A[0] => nbit_adder:subtract32bits.A[0]
A[0] => nBitComparator:compare32bit.B[0]
A[0] => nbit_mux2_1:mux21.opt1[0]
A[1] => and_out[1].IN0
A[1] => or_out[1].IN0
A[1] => zero.IN0
A[1] => nbit_adder:adder32bits.A[1]
A[1] => nbit_adder:subtract32bits.A[1]
A[1] => nBitComparator:compare32bit.B[1]
A[1] => nbit_mux2_1:mux21.opt1[1]
A[2] => and_out[2].IN0
A[2] => or_out[2].IN0
A[2] => zero.IN0
A[2] => nbit_adder:adder32bits.A[2]
A[2] => nbit_adder:subtract32bits.A[2]
A[2] => nBitComparator:compare32bit.B[2]
A[2] => nbit_mux2_1:mux21.opt1[2]
A[3] => and_out[3].IN0
A[3] => or_out[3].IN0
A[3] => zero.IN0
A[3] => nbit_adder:adder32bits.A[3]
A[3] => nbit_adder:subtract32bits.A[3]
A[3] => nBitComparator:compare32bit.B[3]
A[3] => nbit_mux2_1:mux21.opt1[3]
A[4] => and_out[4].IN0
A[4] => or_out[4].IN0
A[4] => zero.IN0
A[4] => nbit_adder:adder32bits.A[4]
A[4] => nbit_adder:subtract32bits.A[4]
A[4] => nBitComparator:compare32bit.B[4]
A[4] => nbit_mux2_1:mux21.opt1[4]
A[5] => and_out[5].IN0
A[5] => or_out[5].IN0
A[5] => zero.IN0
A[5] => nbit_adder:adder32bits.A[5]
A[5] => nbit_adder:subtract32bits.A[5]
A[5] => nBitComparator:compare32bit.B[5]
A[5] => nbit_mux2_1:mux21.opt1[5]
A[6] => and_out[6].IN0
A[6] => or_out[6].IN0
A[6] => zero.IN0
A[6] => nbit_adder:adder32bits.A[6]
A[6] => nbit_adder:subtract32bits.A[6]
A[6] => nBitComparator:compare32bit.B[6]
A[6] => nbit_mux2_1:mux21.opt1[6]
A[7] => and_out[7].IN0
A[7] => or_out[7].IN0
A[7] => zero.IN0
A[7] => nbit_adder:adder32bits.A[7]
A[7] => nbit_adder:subtract32bits.A[7]
A[7] => nBitComparator:compare32bit.B[7]
A[7] => nbit_mux2_1:mux21.opt1[7]
A[8] => and_out[8].IN0
A[8] => or_out[8].IN0
A[8] => zero.IN0
A[8] => nbit_adder:adder32bits.A[8]
A[8] => nbit_adder:subtract32bits.A[8]
A[8] => nBitComparator:compare32bit.B[8]
A[8] => nbit_mux2_1:mux21.opt1[8]
A[9] => and_out[9].IN0
A[9] => or_out[9].IN0
A[9] => zero.IN0
A[9] => nbit_adder:adder32bits.A[9]
A[9] => nbit_adder:subtract32bits.A[9]
A[9] => nBitComparator:compare32bit.B[9]
A[9] => nbit_mux2_1:mux21.opt1[9]
A[10] => and_out[10].IN0
A[10] => or_out[10].IN0
A[10] => zero.IN0
A[10] => nbit_adder:adder32bits.A[10]
A[10] => nbit_adder:subtract32bits.A[10]
A[10] => nBitComparator:compare32bit.B[10]
A[10] => nbit_mux2_1:mux21.opt1[10]
A[11] => and_out[11].IN0
A[11] => or_out[11].IN0
A[11] => zero.IN0
A[11] => nbit_adder:adder32bits.A[11]
A[11] => nbit_adder:subtract32bits.A[11]
A[11] => nBitComparator:compare32bit.B[11]
A[11] => nbit_mux2_1:mux21.opt1[11]
A[12] => and_out[12].IN0
A[12] => or_out[12].IN0
A[12] => zero.IN0
A[12] => nbit_adder:adder32bits.A[12]
A[12] => nbit_adder:subtract32bits.A[12]
A[12] => nBitComparator:compare32bit.B[12]
A[12] => nbit_mux2_1:mux21.opt1[12]
A[13] => and_out[13].IN0
A[13] => or_out[13].IN0
A[13] => zero.IN0
A[13] => nbit_adder:adder32bits.A[13]
A[13] => nbit_adder:subtract32bits.A[13]
A[13] => nBitComparator:compare32bit.B[13]
A[13] => nbit_mux2_1:mux21.opt1[13]
A[14] => and_out[14].IN0
A[14] => or_out[14].IN0
A[14] => zero.IN0
A[14] => nbit_adder:adder32bits.A[14]
A[14] => nbit_adder:subtract32bits.A[14]
A[14] => nBitComparator:compare32bit.B[14]
A[14] => nbit_mux2_1:mux21.opt1[14]
A[15] => and_out[15].IN0
A[15] => or_out[15].IN0
A[15] => zero.IN0
A[15] => nbit_adder:adder32bits.A[15]
A[15] => nbit_adder:subtract32bits.A[15]
A[15] => nBitComparator:compare32bit.B[15]
A[15] => nbit_mux2_1:mux21.opt1[15]
A[16] => and_out[16].IN0
A[16] => or_out[16].IN0
A[16] => zero.IN0
A[16] => nbit_adder:adder32bits.A[16]
A[16] => nbit_adder:subtract32bits.A[16]
A[16] => nBitComparator:compare32bit.B[16]
A[16] => nbit_mux2_1:mux21.opt1[16]
A[17] => and_out[17].IN0
A[17] => or_out[17].IN0
A[17] => zero.IN0
A[17] => nbit_adder:adder32bits.A[17]
A[17] => nbit_adder:subtract32bits.A[17]
A[17] => nBitComparator:compare32bit.B[17]
A[17] => nbit_mux2_1:mux21.opt1[17]
A[18] => and_out[18].IN0
A[18] => or_out[18].IN0
A[18] => zero.IN0
A[18] => nbit_adder:adder32bits.A[18]
A[18] => nbit_adder:subtract32bits.A[18]
A[18] => nBitComparator:compare32bit.B[18]
A[18] => nbit_mux2_1:mux21.opt1[18]
A[19] => and_out[19].IN0
A[19] => or_out[19].IN0
A[19] => zero.IN0
A[19] => nbit_adder:adder32bits.A[19]
A[19] => nbit_adder:subtract32bits.A[19]
A[19] => nBitComparator:compare32bit.B[19]
A[19] => nbit_mux2_1:mux21.opt1[19]
A[20] => and_out[20].IN0
A[20] => or_out[20].IN0
A[20] => zero.IN0
A[20] => nbit_adder:adder32bits.A[20]
A[20] => nbit_adder:subtract32bits.A[20]
A[20] => nBitComparator:compare32bit.B[20]
A[20] => nbit_mux2_1:mux21.opt1[20]
A[21] => and_out[21].IN0
A[21] => or_out[21].IN0
A[21] => zero.IN0
A[21] => nbit_adder:adder32bits.A[21]
A[21] => nbit_adder:subtract32bits.A[21]
A[21] => nBitComparator:compare32bit.B[21]
A[21] => nbit_mux2_1:mux21.opt1[21]
A[22] => and_out[22].IN0
A[22] => or_out[22].IN0
A[22] => zero.IN0
A[22] => nbit_adder:adder32bits.A[22]
A[22] => nbit_adder:subtract32bits.A[22]
A[22] => nBitComparator:compare32bit.B[22]
A[22] => nbit_mux2_1:mux21.opt1[22]
A[23] => and_out[23].IN0
A[23] => or_out[23].IN0
A[23] => zero.IN0
A[23] => nbit_adder:adder32bits.A[23]
A[23] => nbit_adder:subtract32bits.A[23]
A[23] => nBitComparator:compare32bit.B[23]
A[23] => nbit_mux2_1:mux21.opt1[23]
A[24] => and_out[24].IN0
A[24] => or_out[24].IN0
A[24] => zero.IN0
A[24] => nbit_adder:adder32bits.A[24]
A[24] => nbit_adder:subtract32bits.A[24]
A[24] => nBitComparator:compare32bit.B[24]
A[24] => nbit_mux2_1:mux21.opt1[24]
A[25] => and_out[25].IN0
A[25] => or_out[25].IN0
A[25] => zero.IN0
A[25] => nbit_adder:adder32bits.A[25]
A[25] => nbit_adder:subtract32bits.A[25]
A[25] => nBitComparator:compare32bit.B[25]
A[25] => nbit_mux2_1:mux21.opt1[25]
A[26] => and_out[26].IN0
A[26] => or_out[26].IN0
A[26] => zero.IN0
A[26] => nbit_adder:adder32bits.A[26]
A[26] => nbit_adder:subtract32bits.A[26]
A[26] => nBitComparator:compare32bit.B[26]
A[26] => nbit_mux2_1:mux21.opt1[26]
A[27] => and_out[27].IN0
A[27] => or_out[27].IN0
A[27] => zero.IN0
A[27] => nbit_adder:adder32bits.A[27]
A[27] => nbit_adder:subtract32bits.A[27]
A[27] => nBitComparator:compare32bit.B[27]
A[27] => nbit_mux2_1:mux21.opt1[27]
A[28] => and_out[28].IN0
A[28] => or_out[28].IN0
A[28] => zero.IN0
A[28] => nbit_adder:adder32bits.A[28]
A[28] => nbit_adder:subtract32bits.A[28]
A[28] => nBitComparator:compare32bit.B[28]
A[28] => nbit_mux2_1:mux21.opt1[28]
A[29] => and_out[29].IN0
A[29] => or_out[29].IN0
A[29] => zero.IN0
A[29] => nbit_adder:adder32bits.A[29]
A[29] => nbit_adder:subtract32bits.A[29]
A[29] => nBitComparator:compare32bit.B[29]
A[29] => nbit_mux2_1:mux21.opt1[29]
A[30] => and_out[30].IN0
A[30] => or_out[30].IN0
A[30] => zero.IN0
A[30] => nbit_adder:adder32bits.A[30]
A[30] => nbit_adder:subtract32bits.A[30]
A[30] => nBitComparator:compare32bit.B[30]
A[30] => nbit_mux2_1:mux21.opt1[30]
A[31] => and_out[31].IN0
A[31] => or_out[31].IN0
A[31] => zero.IN0
A[31] => nbit_adder:adder32bits.A[31]
A[31] => nbit_adder:subtract32bits.A[31]
A[31] => nBitComparator:compare32bit.B[31]
A[31] => nbit_mux2_1:mux21.opt1[31]
B[0] => and_out[0].IN1
B[0] => or_out[0].IN1
B[0] => zero.IN1
B[0] => nbit_adder:adder32bits.B[0]
B[0] => nbit_one_comp:complementer32bit.A[0]
B[0] => nBitComparator:compare32bit.A[0]
B[1] => and_out[1].IN1
B[1] => or_out[1].IN1
B[1] => zero.IN1
B[1] => nbit_adder:adder32bits.B[1]
B[1] => nbit_one_comp:complementer32bit.A[1]
B[1] => nBitComparator:compare32bit.A[1]
B[2] => and_out[2].IN1
B[2] => or_out[2].IN1
B[2] => zero.IN1
B[2] => nbit_adder:adder32bits.B[2]
B[2] => nbit_one_comp:complementer32bit.A[2]
B[2] => nBitComparator:compare32bit.A[2]
B[3] => and_out[3].IN1
B[3] => or_out[3].IN1
B[3] => zero.IN1
B[3] => nbit_adder:adder32bits.B[3]
B[3] => nbit_one_comp:complementer32bit.A[3]
B[3] => nBitComparator:compare32bit.A[3]
B[4] => and_out[4].IN1
B[4] => or_out[4].IN1
B[4] => zero.IN1
B[4] => nbit_adder:adder32bits.B[4]
B[4] => nbit_one_comp:complementer32bit.A[4]
B[4] => nBitComparator:compare32bit.A[4]
B[5] => and_out[5].IN1
B[5] => or_out[5].IN1
B[5] => zero.IN1
B[5] => nbit_adder:adder32bits.B[5]
B[5] => nbit_one_comp:complementer32bit.A[5]
B[5] => nBitComparator:compare32bit.A[5]
B[6] => and_out[6].IN1
B[6] => or_out[6].IN1
B[6] => zero.IN1
B[6] => nbit_adder:adder32bits.B[6]
B[6] => nbit_one_comp:complementer32bit.A[6]
B[6] => nBitComparator:compare32bit.A[6]
B[7] => and_out[7].IN1
B[7] => or_out[7].IN1
B[7] => zero.IN1
B[7] => nbit_adder:adder32bits.B[7]
B[7] => nbit_one_comp:complementer32bit.A[7]
B[7] => nBitComparator:compare32bit.A[7]
B[8] => and_out[8].IN1
B[8] => or_out[8].IN1
B[8] => zero.IN1
B[8] => nbit_adder:adder32bits.B[8]
B[8] => nbit_one_comp:complementer32bit.A[8]
B[8] => nBitComparator:compare32bit.A[8]
B[9] => and_out[9].IN1
B[9] => or_out[9].IN1
B[9] => zero.IN1
B[9] => nbit_adder:adder32bits.B[9]
B[9] => nbit_one_comp:complementer32bit.A[9]
B[9] => nBitComparator:compare32bit.A[9]
B[10] => and_out[10].IN1
B[10] => or_out[10].IN1
B[10] => zero.IN1
B[10] => nbit_adder:adder32bits.B[10]
B[10] => nbit_one_comp:complementer32bit.A[10]
B[10] => nBitComparator:compare32bit.A[10]
B[11] => and_out[11].IN1
B[11] => or_out[11].IN1
B[11] => zero.IN1
B[11] => nbit_adder:adder32bits.B[11]
B[11] => nbit_one_comp:complementer32bit.A[11]
B[11] => nBitComparator:compare32bit.A[11]
B[12] => and_out[12].IN1
B[12] => or_out[12].IN1
B[12] => zero.IN1
B[12] => nbit_adder:adder32bits.B[12]
B[12] => nbit_one_comp:complementer32bit.A[12]
B[12] => nBitComparator:compare32bit.A[12]
B[13] => and_out[13].IN1
B[13] => or_out[13].IN1
B[13] => zero.IN1
B[13] => nbit_adder:adder32bits.B[13]
B[13] => nbit_one_comp:complementer32bit.A[13]
B[13] => nBitComparator:compare32bit.A[13]
B[14] => and_out[14].IN1
B[14] => or_out[14].IN1
B[14] => zero.IN1
B[14] => nbit_adder:adder32bits.B[14]
B[14] => nbit_one_comp:complementer32bit.A[14]
B[14] => nBitComparator:compare32bit.A[14]
B[15] => and_out[15].IN1
B[15] => or_out[15].IN1
B[15] => zero.IN1
B[15] => nbit_adder:adder32bits.B[15]
B[15] => nbit_one_comp:complementer32bit.A[15]
B[15] => nBitComparator:compare32bit.A[15]
B[16] => and_out[16].IN1
B[16] => or_out[16].IN1
B[16] => zero.IN1
B[16] => nbit_adder:adder32bits.B[16]
B[16] => nbit_one_comp:complementer32bit.A[16]
B[16] => nBitComparator:compare32bit.A[16]
B[17] => and_out[17].IN1
B[17] => or_out[17].IN1
B[17] => zero.IN1
B[17] => nbit_adder:adder32bits.B[17]
B[17] => nbit_one_comp:complementer32bit.A[17]
B[17] => nBitComparator:compare32bit.A[17]
B[18] => and_out[18].IN1
B[18] => or_out[18].IN1
B[18] => zero.IN1
B[18] => nbit_adder:adder32bits.B[18]
B[18] => nbit_one_comp:complementer32bit.A[18]
B[18] => nBitComparator:compare32bit.A[18]
B[19] => and_out[19].IN1
B[19] => or_out[19].IN1
B[19] => zero.IN1
B[19] => nbit_adder:adder32bits.B[19]
B[19] => nbit_one_comp:complementer32bit.A[19]
B[19] => nBitComparator:compare32bit.A[19]
B[20] => and_out[20].IN1
B[20] => or_out[20].IN1
B[20] => zero.IN1
B[20] => nbit_adder:adder32bits.B[20]
B[20] => nbit_one_comp:complementer32bit.A[20]
B[20] => nBitComparator:compare32bit.A[20]
B[21] => and_out[21].IN1
B[21] => or_out[21].IN1
B[21] => zero.IN1
B[21] => nbit_adder:adder32bits.B[21]
B[21] => nbit_one_comp:complementer32bit.A[21]
B[21] => nBitComparator:compare32bit.A[21]
B[22] => and_out[22].IN1
B[22] => or_out[22].IN1
B[22] => zero.IN1
B[22] => nbit_adder:adder32bits.B[22]
B[22] => nbit_one_comp:complementer32bit.A[22]
B[22] => nBitComparator:compare32bit.A[22]
B[23] => and_out[23].IN1
B[23] => or_out[23].IN1
B[23] => zero.IN1
B[23] => nbit_adder:adder32bits.B[23]
B[23] => nbit_one_comp:complementer32bit.A[23]
B[23] => nBitComparator:compare32bit.A[23]
B[24] => and_out[24].IN1
B[24] => or_out[24].IN1
B[24] => zero.IN1
B[24] => nbit_adder:adder32bits.B[24]
B[24] => nbit_one_comp:complementer32bit.A[24]
B[24] => nBitComparator:compare32bit.A[24]
B[25] => and_out[25].IN1
B[25] => or_out[25].IN1
B[25] => zero.IN1
B[25] => nbit_adder:adder32bits.B[25]
B[25] => nbit_one_comp:complementer32bit.A[25]
B[25] => nBitComparator:compare32bit.A[25]
B[26] => and_out[26].IN1
B[26] => or_out[26].IN1
B[26] => zero.IN1
B[26] => nbit_adder:adder32bits.B[26]
B[26] => nbit_one_comp:complementer32bit.A[26]
B[26] => nBitComparator:compare32bit.A[26]
B[27] => and_out[27].IN1
B[27] => or_out[27].IN1
B[27] => zero.IN1
B[27] => nbit_adder:adder32bits.B[27]
B[27] => nbit_one_comp:complementer32bit.A[27]
B[27] => nBitComparator:compare32bit.A[27]
B[28] => and_out[28].IN1
B[28] => or_out[28].IN1
B[28] => zero.IN1
B[28] => nbit_adder:adder32bits.B[28]
B[28] => nbit_one_comp:complementer32bit.A[28]
B[28] => nBitComparator:compare32bit.A[28]
B[29] => and_out[29].IN1
B[29] => or_out[29].IN1
B[29] => zero.IN1
B[29] => nbit_adder:adder32bits.B[29]
B[29] => nbit_one_comp:complementer32bit.A[29]
B[29] => nBitComparator:compare32bit.A[29]
B[30] => and_out[30].IN1
B[30] => or_out[30].IN1
B[30] => zero.IN1
B[30] => nbit_adder:adder32bits.B[30]
B[30] => nbit_one_comp:complementer32bit.A[30]
B[30] => nBitComparator:compare32bit.A[30]
B[31] => and_out[31].IN1
B[31] => or_out[31].IN1
B[31] => zero.IN1
B[31] => nbit_adder:adder32bits.B[31]
B[31] => nbit_one_comp:complementer32bit.A[31]
B[31] => nBitComparator:compare32bit.A[31]
operation[0] => nbitmux8_1:mux81.sel[0]
operation[1] => nbitmux8_1:mux81.sel[1]
operation[2] => nbitmux8_1:mux81.sel[2]
zero <= zero.DB_MAX_OUTPUT_PORT_TYPE
ALUresult[0] <= nbitmux8_1:mux81.muxOut[0]
ALUresult[1] <= nbitmux8_1:mux81.muxOut[1]
ALUresult[2] <= nbitmux8_1:mux81.muxOut[2]
ALUresult[3] <= nbitmux8_1:mux81.muxOut[3]
ALUresult[4] <= nbitmux8_1:mux81.muxOut[4]
ALUresult[5] <= nbitmux8_1:mux81.muxOut[5]
ALUresult[6] <= nbitmux8_1:mux81.muxOut[6]
ALUresult[7] <= nbitmux8_1:mux81.muxOut[7]
ALUresult[8] <= nbitmux8_1:mux81.muxOut[8]
ALUresult[9] <= nbitmux8_1:mux81.muxOut[9]
ALUresult[10] <= nbitmux8_1:mux81.muxOut[10]
ALUresult[11] <= nbitmux8_1:mux81.muxOut[11]
ALUresult[12] <= nbitmux8_1:mux81.muxOut[12]
ALUresult[13] <= nbitmux8_1:mux81.muxOut[13]
ALUresult[14] <= nbitmux8_1:mux81.muxOut[14]
ALUresult[15] <= nbitmux8_1:mux81.muxOut[15]
ALUresult[16] <= nbitmux8_1:mux81.muxOut[16]
ALUresult[17] <= nbitmux8_1:mux81.muxOut[17]
ALUresult[18] <= nbitmux8_1:mux81.muxOut[18]
ALUresult[19] <= nbitmux8_1:mux81.muxOut[19]
ALUresult[20] <= nbitmux8_1:mux81.muxOut[20]
ALUresult[21] <= nbitmux8_1:mux81.muxOut[21]
ALUresult[22] <= nbitmux8_1:mux81.muxOut[22]
ALUresult[23] <= nbitmux8_1:mux81.muxOut[23]
ALUresult[24] <= nbitmux8_1:mux81.muxOut[24]
ALUresult[25] <= nbitmux8_1:mux81.muxOut[25]
ALUresult[26] <= nbitmux8_1:mux81.muxOut[26]
ALUresult[27] <= nbitmux8_1:mux81.muxOut[27]
ALUresult[28] <= nbitmux8_1:mux81.muxOut[28]
ALUresult[29] <= nbitmux8_1:mux81.muxOut[29]
ALUresult[30] <= nbitmux8_1:mux81.muxOut[30]
ALUresult[31] <= nbitmux8_1:mux81.muxOut[31]


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits
A[0] => full_adder:FA_f:0:FA_i.A
A[1] => full_adder:FA_f:1:FA_i.A
A[2] => full_adder:FA_f:2:FA_i.A
A[3] => full_adder:FA_f:3:FA_i.A
A[4] => full_adder:FA_f:4:FA_i.A
A[5] => full_adder:FA_f:5:FA_i.A
A[6] => full_adder:FA_f:6:FA_i.A
A[7] => full_adder:FA_f:7:FA_i.A
A[8] => full_adder:FA_f:8:FA_i.A
A[9] => full_adder:FA_f:9:FA_i.A
A[10] => full_adder:FA_f:10:FA_i.A
A[11] => full_adder:FA_f:11:FA_i.A
A[12] => full_adder:FA_f:12:FA_i.A
A[13] => full_adder:FA_f:13:FA_i.A
A[14] => full_adder:FA_f:14:FA_i.A
A[15] => full_adder:FA_f:15:FA_i.A
A[16] => full_adder:FA_f:16:FA_i.A
A[17] => full_adder:FA_f:17:FA_i.A
A[18] => full_adder:FA_f:18:FA_i.A
A[19] => full_adder:FA_f:19:FA_i.A
A[20] => full_adder:FA_f:20:FA_i.A
A[21] => full_adder:FA_f:21:FA_i.A
A[22] => full_adder:FA_f:22:FA_i.A
A[23] => full_adder:FA_f:23:FA_i.A
A[24] => full_adder:FA_f:24:FA_i.A
A[25] => full_adder:FA_f:25:FA_i.A
A[26] => full_adder:FA_f:26:FA_i.A
A[27] => full_adder:FA_f:27:FA_i.A
A[28] => full_adder:FA_f:28:FA_i.A
A[29] => full_adder:FA_f:29:FA_i.A
A[30] => full_adder:FA_f:30:FA_i.A
A[31] => full_adder:FA_f:31:FA_i.A
B[0] => full_adder:FA_f:0:FA_i.B
B[1] => full_adder:FA_f:1:FA_i.B
B[2] => full_adder:FA_f:2:FA_i.B
B[3] => full_adder:FA_f:3:FA_i.B
B[4] => full_adder:FA_f:4:FA_i.B
B[5] => full_adder:FA_f:5:FA_i.B
B[6] => full_adder:FA_f:6:FA_i.B
B[7] => full_adder:FA_f:7:FA_i.B
B[8] => full_adder:FA_f:8:FA_i.B
B[9] => full_adder:FA_f:9:FA_i.B
B[10] => full_adder:FA_f:10:FA_i.B
B[11] => full_adder:FA_f:11:FA_i.B
B[12] => full_adder:FA_f:12:FA_i.B
B[13] => full_adder:FA_f:13:FA_i.B
B[14] => full_adder:FA_f:14:FA_i.B
B[15] => full_adder:FA_f:15:FA_i.B
B[16] => full_adder:FA_f:16:FA_i.B
B[17] => full_adder:FA_f:17:FA_i.B
B[18] => full_adder:FA_f:18:FA_i.B
B[19] => full_adder:FA_f:19:FA_i.B
B[20] => full_adder:FA_f:20:FA_i.B
B[21] => full_adder:FA_f:21:FA_i.B
B[22] => full_adder:FA_f:22:FA_i.B
B[23] => full_adder:FA_f:23:FA_i.B
B[24] => full_adder:FA_f:24:FA_i.B
B[25] => full_adder:FA_f:25:FA_i.B
B[26] => full_adder:FA_f:26:FA_i.B
B[27] => full_adder:FA_f:27:FA_i.B
B[28] => full_adder:FA_f:28:FA_i.B
B[29] => full_adder:FA_f:29:FA_i.B
B[30] => full_adder:FA_f:30:FA_i.B
B[31] => full_adder:FA_f:31:FA_i.B
Z[0] <= full_adder:FA_f:0:FA_i.Sum
Z[1] <= full_adder:FA_f:1:FA_i.Sum
Z[2] <= full_adder:FA_f:2:FA_i.Sum
Z[3] <= full_adder:FA_f:3:FA_i.Sum
Z[4] <= full_adder:FA_f:4:FA_i.Sum
Z[5] <= full_adder:FA_f:5:FA_i.Sum
Z[6] <= full_adder:FA_f:6:FA_i.Sum
Z[7] <= full_adder:FA_f:7:FA_i.Sum
Z[8] <= full_adder:FA_f:8:FA_i.Sum
Z[9] <= full_adder:FA_f:9:FA_i.Sum
Z[10] <= full_adder:FA_f:10:FA_i.Sum
Z[11] <= full_adder:FA_f:11:FA_i.Sum
Z[12] <= full_adder:FA_f:12:FA_i.Sum
Z[13] <= full_adder:FA_f:13:FA_i.Sum
Z[14] <= full_adder:FA_f:14:FA_i.Sum
Z[15] <= full_adder:FA_f:15:FA_i.Sum
Z[16] <= full_adder:FA_f:16:FA_i.Sum
Z[17] <= full_adder:FA_f:17:FA_i.Sum
Z[18] <= full_adder:FA_f:18:FA_i.Sum
Z[19] <= full_adder:FA_f:19:FA_i.Sum
Z[20] <= full_adder:FA_f:20:FA_i.Sum
Z[21] <= full_adder:FA_f:21:FA_i.Sum
Z[22] <= full_adder:FA_f:22:FA_i.Sum
Z[23] <= full_adder:FA_f:23:FA_i.Sum
Z[24] <= full_adder:FA_f:24:FA_i.Sum
Z[25] <= full_adder:FA_f:25:FA_i.Sum
Z[26] <= full_adder:FA_f:26:FA_i.Sum
Z[27] <= full_adder:FA_f:27:FA_i.Sum
Z[28] <= full_adder:FA_f:28:FA_i.Sum
Z[29] <= full_adder:FA_f:29:FA_i.Sum
Z[30] <= full_adder:FA_f:30:FA_i.Sum
Z[31] <= full_adder:FA_f:31:FA_i.Sum
Cin => full_adder:FA_f:0:FA_i.Cin
Cout <= full_adder:FA_f:31:FA_i.Cout


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:0:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:1:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:2:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:3:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:4:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:5:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:6:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:7:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:8:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:9:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:10:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:11:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:12:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:13:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:14:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:15:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:16:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:17:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:18:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:19:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:20:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:21:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:22:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:23:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:24:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:25:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:26:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:27:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:28:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:29:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:30:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:adder32bits|full_adder:\FA_f:31:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit
A[0] => one_comp_1bit:CO_f:0:CO_i.A
A[1] => one_comp_1bit:CO_f:1:CO_i.A
A[2] => one_comp_1bit:CO_f:2:CO_i.A
A[3] => one_comp_1bit:CO_f:3:CO_i.A
A[4] => one_comp_1bit:CO_f:4:CO_i.A
A[5] => one_comp_1bit:CO_f:5:CO_i.A
A[6] => one_comp_1bit:CO_f:6:CO_i.A
A[7] => one_comp_1bit:CO_f:7:CO_i.A
A[8] => one_comp_1bit:CO_f:8:CO_i.A
A[9] => one_comp_1bit:CO_f:9:CO_i.A
A[10] => one_comp_1bit:CO_f:10:CO_i.A
A[11] => one_comp_1bit:CO_f:11:CO_i.A
A[12] => one_comp_1bit:CO_f:12:CO_i.A
A[13] => one_comp_1bit:CO_f:13:CO_i.A
A[14] => one_comp_1bit:CO_f:14:CO_i.A
A[15] => one_comp_1bit:CO_f:15:CO_i.A
A[16] => one_comp_1bit:CO_f:16:CO_i.A
A[17] => one_comp_1bit:CO_f:17:CO_i.A
A[18] => one_comp_1bit:CO_f:18:CO_i.A
A[19] => one_comp_1bit:CO_f:19:CO_i.A
A[20] => one_comp_1bit:CO_f:20:CO_i.A
A[21] => one_comp_1bit:CO_f:21:CO_i.A
A[22] => one_comp_1bit:CO_f:22:CO_i.A
A[23] => one_comp_1bit:CO_f:23:CO_i.A
A[24] => one_comp_1bit:CO_f:24:CO_i.A
A[25] => one_comp_1bit:CO_f:25:CO_i.A
A[26] => one_comp_1bit:CO_f:26:CO_i.A
A[27] => one_comp_1bit:CO_f:27:CO_i.A
A[28] => one_comp_1bit:CO_f:28:CO_i.A
A[29] => one_comp_1bit:CO_f:29:CO_i.A
A[30] => one_comp_1bit:CO_f:30:CO_i.A
A[31] => one_comp_1bit:CO_f:31:CO_i.A
B[0] <= one_comp_1bit:CO_f:0:CO_i.B
B[1] <= one_comp_1bit:CO_f:1:CO_i.B
B[2] <= one_comp_1bit:CO_f:2:CO_i.B
B[3] <= one_comp_1bit:CO_f:3:CO_i.B
B[4] <= one_comp_1bit:CO_f:4:CO_i.B
B[5] <= one_comp_1bit:CO_f:5:CO_i.B
B[6] <= one_comp_1bit:CO_f:6:CO_i.B
B[7] <= one_comp_1bit:CO_f:7:CO_i.B
B[8] <= one_comp_1bit:CO_f:8:CO_i.B
B[9] <= one_comp_1bit:CO_f:9:CO_i.B
B[10] <= one_comp_1bit:CO_f:10:CO_i.B
B[11] <= one_comp_1bit:CO_f:11:CO_i.B
B[12] <= one_comp_1bit:CO_f:12:CO_i.B
B[13] <= one_comp_1bit:CO_f:13:CO_i.B
B[14] <= one_comp_1bit:CO_f:14:CO_i.B
B[15] <= one_comp_1bit:CO_f:15:CO_i.B
B[16] <= one_comp_1bit:CO_f:16:CO_i.B
B[17] <= one_comp_1bit:CO_f:17:CO_i.B
B[18] <= one_comp_1bit:CO_f:18:CO_i.B
B[19] <= one_comp_1bit:CO_f:19:CO_i.B
B[20] <= one_comp_1bit:CO_f:20:CO_i.B
B[21] <= one_comp_1bit:CO_f:21:CO_i.B
B[22] <= one_comp_1bit:CO_f:22:CO_i.B
B[23] <= one_comp_1bit:CO_f:23:CO_i.B
B[24] <= one_comp_1bit:CO_f:24:CO_i.B
B[25] <= one_comp_1bit:CO_f:25:CO_i.B
B[26] <= one_comp_1bit:CO_f:26:CO_i.B
B[27] <= one_comp_1bit:CO_f:27:CO_i.B
B[28] <= one_comp_1bit:CO_f:28:CO_i.B
B[29] <= one_comp_1bit:CO_f:29:CO_i.B
B[30] <= one_comp_1bit:CO_f:30:CO_i.B
B[31] <= one_comp_1bit:CO_f:31:CO_i.B


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:0:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:1:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:2:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:3:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:4:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:5:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:6:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:7:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:8:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:9:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:10:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:11:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:12:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:13:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:14:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:15:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:16:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:17:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:18:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:19:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:20:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:21:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:22:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:23:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:24:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:25:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:26:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:27:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:28:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:29:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:30:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_one_comp:complementer32bit|one_comp_1bit:\CO_f:31:CO_i
A => B.DATAIN
B <= A.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits
A[0] => full_adder:FA_f:0:FA_i.A
A[1] => full_adder:FA_f:1:FA_i.A
A[2] => full_adder:FA_f:2:FA_i.A
A[3] => full_adder:FA_f:3:FA_i.A
A[4] => full_adder:FA_f:4:FA_i.A
A[5] => full_adder:FA_f:5:FA_i.A
A[6] => full_adder:FA_f:6:FA_i.A
A[7] => full_adder:FA_f:7:FA_i.A
A[8] => full_adder:FA_f:8:FA_i.A
A[9] => full_adder:FA_f:9:FA_i.A
A[10] => full_adder:FA_f:10:FA_i.A
A[11] => full_adder:FA_f:11:FA_i.A
A[12] => full_adder:FA_f:12:FA_i.A
A[13] => full_adder:FA_f:13:FA_i.A
A[14] => full_adder:FA_f:14:FA_i.A
A[15] => full_adder:FA_f:15:FA_i.A
A[16] => full_adder:FA_f:16:FA_i.A
A[17] => full_adder:FA_f:17:FA_i.A
A[18] => full_adder:FA_f:18:FA_i.A
A[19] => full_adder:FA_f:19:FA_i.A
A[20] => full_adder:FA_f:20:FA_i.A
A[21] => full_adder:FA_f:21:FA_i.A
A[22] => full_adder:FA_f:22:FA_i.A
A[23] => full_adder:FA_f:23:FA_i.A
A[24] => full_adder:FA_f:24:FA_i.A
A[25] => full_adder:FA_f:25:FA_i.A
A[26] => full_adder:FA_f:26:FA_i.A
A[27] => full_adder:FA_f:27:FA_i.A
A[28] => full_adder:FA_f:28:FA_i.A
A[29] => full_adder:FA_f:29:FA_i.A
A[30] => full_adder:FA_f:30:FA_i.A
A[31] => full_adder:FA_f:31:FA_i.A
B[0] => full_adder:FA_f:0:FA_i.B
B[1] => full_adder:FA_f:1:FA_i.B
B[2] => full_adder:FA_f:2:FA_i.B
B[3] => full_adder:FA_f:3:FA_i.B
B[4] => full_adder:FA_f:4:FA_i.B
B[5] => full_adder:FA_f:5:FA_i.B
B[6] => full_adder:FA_f:6:FA_i.B
B[7] => full_adder:FA_f:7:FA_i.B
B[8] => full_adder:FA_f:8:FA_i.B
B[9] => full_adder:FA_f:9:FA_i.B
B[10] => full_adder:FA_f:10:FA_i.B
B[11] => full_adder:FA_f:11:FA_i.B
B[12] => full_adder:FA_f:12:FA_i.B
B[13] => full_adder:FA_f:13:FA_i.B
B[14] => full_adder:FA_f:14:FA_i.B
B[15] => full_adder:FA_f:15:FA_i.B
B[16] => full_adder:FA_f:16:FA_i.B
B[17] => full_adder:FA_f:17:FA_i.B
B[18] => full_adder:FA_f:18:FA_i.B
B[19] => full_adder:FA_f:19:FA_i.B
B[20] => full_adder:FA_f:20:FA_i.B
B[21] => full_adder:FA_f:21:FA_i.B
B[22] => full_adder:FA_f:22:FA_i.B
B[23] => full_adder:FA_f:23:FA_i.B
B[24] => full_adder:FA_f:24:FA_i.B
B[25] => full_adder:FA_f:25:FA_i.B
B[26] => full_adder:FA_f:26:FA_i.B
B[27] => full_adder:FA_f:27:FA_i.B
B[28] => full_adder:FA_f:28:FA_i.B
B[29] => full_adder:FA_f:29:FA_i.B
B[30] => full_adder:FA_f:30:FA_i.B
B[31] => full_adder:FA_f:31:FA_i.B
Z[0] <= full_adder:FA_f:0:FA_i.Sum
Z[1] <= full_adder:FA_f:1:FA_i.Sum
Z[2] <= full_adder:FA_f:2:FA_i.Sum
Z[3] <= full_adder:FA_f:3:FA_i.Sum
Z[4] <= full_adder:FA_f:4:FA_i.Sum
Z[5] <= full_adder:FA_f:5:FA_i.Sum
Z[6] <= full_adder:FA_f:6:FA_i.Sum
Z[7] <= full_adder:FA_f:7:FA_i.Sum
Z[8] <= full_adder:FA_f:8:FA_i.Sum
Z[9] <= full_adder:FA_f:9:FA_i.Sum
Z[10] <= full_adder:FA_f:10:FA_i.Sum
Z[11] <= full_adder:FA_f:11:FA_i.Sum
Z[12] <= full_adder:FA_f:12:FA_i.Sum
Z[13] <= full_adder:FA_f:13:FA_i.Sum
Z[14] <= full_adder:FA_f:14:FA_i.Sum
Z[15] <= full_adder:FA_f:15:FA_i.Sum
Z[16] <= full_adder:FA_f:16:FA_i.Sum
Z[17] <= full_adder:FA_f:17:FA_i.Sum
Z[18] <= full_adder:FA_f:18:FA_i.Sum
Z[19] <= full_adder:FA_f:19:FA_i.Sum
Z[20] <= full_adder:FA_f:20:FA_i.Sum
Z[21] <= full_adder:FA_f:21:FA_i.Sum
Z[22] <= full_adder:FA_f:22:FA_i.Sum
Z[23] <= full_adder:FA_f:23:FA_i.Sum
Z[24] <= full_adder:FA_f:24:FA_i.Sum
Z[25] <= full_adder:FA_f:25:FA_i.Sum
Z[26] <= full_adder:FA_f:26:FA_i.Sum
Z[27] <= full_adder:FA_f:27:FA_i.Sum
Z[28] <= full_adder:FA_f:28:FA_i.Sum
Z[29] <= full_adder:FA_f:29:FA_i.Sum
Z[30] <= full_adder:FA_f:30:FA_i.Sum
Z[31] <= full_adder:FA_f:31:FA_i.Sum
Cin => full_adder:FA_f:0:FA_i.Cin
Cout <= full_adder:FA_f:31:FA_i.Cout


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:0:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:1:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:2:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:3:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:4:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:5:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:6:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:7:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:8:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:9:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:10:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:11:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:12:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:13:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:14:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:15:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:16:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:17:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:18:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:19:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:20:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:21:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:22:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:23:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:24:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:25:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:26:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:27:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:28:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:29:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:30:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_adder:subtract32bits|full_adder:\FA_f:31:FA_i
A => Sum.IN0
A => Cout.IN0
A => Cout.IN0
B => Sum.IN1
B => Cout.IN1
B => Cout.IN0
Cin => Sum.IN1
Cin => Cout.IN1
Cin => Cout.IN1
Sum <= Sum.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit
A[0] => oneBitComparator:NC_f:0:NC_i.A
A[1] => oneBitComparator:NC_f:1:NC_i.A
A[2] => oneBitComparator:NC_f:2:NC_i.A
A[3] => oneBitComparator:NC_f:3:NC_i.A
A[4] => oneBitComparator:NC_f:4:NC_i.A
A[5] => oneBitComparator:NC_f:5:NC_i.A
A[6] => oneBitComparator:NC_f:6:NC_i.A
A[7] => oneBitComparator:NC_f:7:NC_i.A
A[8] => oneBitComparator:NC_f:8:NC_i.A
A[9] => oneBitComparator:NC_f:9:NC_i.A
A[10] => oneBitComparator:NC_f:10:NC_i.A
A[11] => oneBitComparator:NC_f:11:NC_i.A
A[12] => oneBitComparator:NC_f:12:NC_i.A
A[13] => oneBitComparator:NC_f:13:NC_i.A
A[14] => oneBitComparator:NC_f:14:NC_i.A
A[15] => oneBitComparator:NC_f:15:NC_i.A
A[16] => oneBitComparator:NC_f:16:NC_i.A
A[17] => oneBitComparator:NC_f:17:NC_i.A
A[18] => oneBitComparator:NC_f:18:NC_i.A
A[19] => oneBitComparator:NC_f:19:NC_i.A
A[20] => oneBitComparator:NC_f:20:NC_i.A
A[21] => oneBitComparator:NC_f:21:NC_i.A
A[22] => oneBitComparator:NC_f:22:NC_i.A
A[23] => oneBitComparator:NC_f:23:NC_i.A
A[24] => oneBitComparator:NC_f:24:NC_i.A
A[25] => oneBitComparator:NC_f:25:NC_i.A
A[26] => oneBitComparator:NC_f:26:NC_i.A
A[27] => oneBitComparator:NC_f:27:NC_i.A
A[28] => oneBitComparator:NC_f:28:NC_i.A
A[29] => oneBitComparator:NC_f:29:NC_i.A
A[30] => oneBitComparator:NC_f:30:NC_i.A
A[31] => oneBitComparator:NC_f:31:NC_i.A
B[0] => oneBitComparator:NC_f:0:NC_i.B
B[1] => oneBitComparator:NC_f:1:NC_i.B
B[2] => oneBitComparator:NC_f:2:NC_i.B
B[3] => oneBitComparator:NC_f:3:NC_i.B
B[4] => oneBitComparator:NC_f:4:NC_i.B
B[5] => oneBitComparator:NC_f:5:NC_i.B
B[6] => oneBitComparator:NC_f:6:NC_i.B
B[7] => oneBitComparator:NC_f:7:NC_i.B
B[8] => oneBitComparator:NC_f:8:NC_i.B
B[9] => oneBitComparator:NC_f:9:NC_i.B
B[10] => oneBitComparator:NC_f:10:NC_i.B
B[11] => oneBitComparator:NC_f:11:NC_i.B
B[12] => oneBitComparator:NC_f:12:NC_i.B
B[13] => oneBitComparator:NC_f:13:NC_i.B
B[14] => oneBitComparator:NC_f:14:NC_i.B
B[15] => oneBitComparator:NC_f:15:NC_i.B
B[16] => oneBitComparator:NC_f:16:NC_i.B
B[17] => oneBitComparator:NC_f:17:NC_i.B
B[18] => oneBitComparator:NC_f:18:NC_i.B
B[19] => oneBitComparator:NC_f:19:NC_i.B
B[20] => oneBitComparator:NC_f:20:NC_i.B
B[21] => oneBitComparator:NC_f:21:NC_i.B
B[22] => oneBitComparator:NC_f:22:NC_i.B
B[23] => oneBitComparator:NC_f:23:NC_i.B
B[24] => oneBitComparator:NC_f:24:NC_i.B
B[25] => oneBitComparator:NC_f:25:NC_i.B
B[26] => oneBitComparator:NC_f:26:NC_i.B
B[27] => oneBitComparator:NC_f:27:NC_i.B
B[28] => oneBitComparator:NC_f:28:NC_i.B
B[29] => oneBitComparator:NC_f:29:NC_i.B
B[30] => oneBitComparator:NC_f:30:NC_i.B
B[31] => oneBitComparator:NC_f:31:NC_i.B
LTprev => ~NO_FANOUT~
LT <= oneBitComparator:NC_f:7:NC_i.LT


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:0:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:1:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:2:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:3:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:4:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:5:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:6:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:7:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:8:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:9:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:10:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:11:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:12:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:13:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:14:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:15:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:16:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:17:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:18:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:19:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:20:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:21:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:22:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:23:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:24:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:25:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:26:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:27:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:28:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:29:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:30:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitComparator:compare32bit|oneBitComparator:\NC_f:31:NC_i
LTprev => C1.IN1
A => C1.IN0
A => C2.IN0
B => C1.IN1
B => C2.IN1
LT <= LT.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt1[5] => mux_2_1:Mx_f:5:Mx_i.opt1
opt1[6] => mux_2_1:Mx_f:6:Mx_i.opt1
opt1[7] => mux_2_1:Mx_f:7:Mx_i.opt1
opt1[8] => mux_2_1:Mx_f:8:Mx_i.opt1
opt1[9] => mux_2_1:Mx_f:9:Mx_i.opt1
opt1[10] => mux_2_1:Mx_f:10:Mx_i.opt1
opt1[11] => mux_2_1:Mx_f:11:Mx_i.opt1
opt1[12] => mux_2_1:Mx_f:12:Mx_i.opt1
opt1[13] => mux_2_1:Mx_f:13:Mx_i.opt1
opt1[14] => mux_2_1:Mx_f:14:Mx_i.opt1
opt1[15] => mux_2_1:Mx_f:15:Mx_i.opt1
opt1[16] => mux_2_1:Mx_f:16:Mx_i.opt1
opt1[17] => mux_2_1:Mx_f:17:Mx_i.opt1
opt1[18] => mux_2_1:Mx_f:18:Mx_i.opt1
opt1[19] => mux_2_1:Mx_f:19:Mx_i.opt1
opt1[20] => mux_2_1:Mx_f:20:Mx_i.opt1
opt1[21] => mux_2_1:Mx_f:21:Mx_i.opt1
opt1[22] => mux_2_1:Mx_f:22:Mx_i.opt1
opt1[23] => mux_2_1:Mx_f:23:Mx_i.opt1
opt1[24] => mux_2_1:Mx_f:24:Mx_i.opt1
opt1[25] => mux_2_1:Mx_f:25:Mx_i.opt1
opt1[26] => mux_2_1:Mx_f:26:Mx_i.opt1
opt1[27] => mux_2_1:Mx_f:27:Mx_i.opt1
opt1[28] => mux_2_1:Mx_f:28:Mx_i.opt1
opt1[29] => mux_2_1:Mx_f:29:Mx_i.opt1
opt1[30] => mux_2_1:Mx_f:30:Mx_i.opt1
opt1[31] => mux_2_1:Mx_f:31:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
opt2[5] => mux_2_1:Mx_f:5:Mx_i.opt2
opt2[6] => mux_2_1:Mx_f:6:Mx_i.opt2
opt2[7] => mux_2_1:Mx_f:7:Mx_i.opt2
opt2[8] => mux_2_1:Mx_f:8:Mx_i.opt2
opt2[9] => mux_2_1:Mx_f:9:Mx_i.opt2
opt2[10] => mux_2_1:Mx_f:10:Mx_i.opt2
opt2[11] => mux_2_1:Mx_f:11:Mx_i.opt2
opt2[12] => mux_2_1:Mx_f:12:Mx_i.opt2
opt2[13] => mux_2_1:Mx_f:13:Mx_i.opt2
opt2[14] => mux_2_1:Mx_f:14:Mx_i.opt2
opt2[15] => mux_2_1:Mx_f:15:Mx_i.opt2
opt2[16] => mux_2_1:Mx_f:16:Mx_i.opt2
opt2[17] => mux_2_1:Mx_f:17:Mx_i.opt2
opt2[18] => mux_2_1:Mx_f:18:Mx_i.opt2
opt2[19] => mux_2_1:Mx_f:19:Mx_i.opt2
opt2[20] => mux_2_1:Mx_f:20:Mx_i.opt2
opt2[21] => mux_2_1:Mx_f:21:Mx_i.opt2
opt2[22] => mux_2_1:Mx_f:22:Mx_i.opt2
opt2[23] => mux_2_1:Mx_f:23:Mx_i.opt2
opt2[24] => mux_2_1:Mx_f:24:Mx_i.opt2
opt2[25] => mux_2_1:Mx_f:25:Mx_i.opt2
opt2[26] => mux_2_1:Mx_f:26:Mx_i.opt2
opt2[27] => mux_2_1:Mx_f:27:Mx_i.opt2
opt2[28] => mux_2_1:Mx_f:28:Mx_i.opt2
opt2[29] => mux_2_1:Mx_f:29:Mx_i.opt2
opt2[30] => mux_2_1:Mx_f:30:Mx_i.opt2
opt2[31] => mux_2_1:Mx_f:31:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
sel => mux_2_1:Mx_f:5:Mx_i.sel
sel => mux_2_1:Mx_f:6:Mx_i.sel
sel => mux_2_1:Mx_f:7:Mx_i.sel
sel => mux_2_1:Mx_f:8:Mx_i.sel
sel => mux_2_1:Mx_f:9:Mx_i.sel
sel => mux_2_1:Mx_f:10:Mx_i.sel
sel => mux_2_1:Mx_f:11:Mx_i.sel
sel => mux_2_1:Mx_f:12:Mx_i.sel
sel => mux_2_1:Mx_f:13:Mx_i.sel
sel => mux_2_1:Mx_f:14:Mx_i.sel
sel => mux_2_1:Mx_f:15:Mx_i.sel
sel => mux_2_1:Mx_f:16:Mx_i.sel
sel => mux_2_1:Mx_f:17:Mx_i.sel
sel => mux_2_1:Mx_f:18:Mx_i.sel
sel => mux_2_1:Mx_f:19:Mx_i.sel
sel => mux_2_1:Mx_f:20:Mx_i.sel
sel => mux_2_1:Mx_f:21:Mx_i.sel
sel => mux_2_1:Mx_f:22:Mx_i.sel
sel => mux_2_1:Mx_f:23:Mx_i.sel
sel => mux_2_1:Mx_f:24:Mx_i.sel
sel => mux_2_1:Mx_f:25:Mx_i.sel
sel => mux_2_1:Mx_f:26:Mx_i.sel
sel => mux_2_1:Mx_f:27:Mx_i.sel
sel => mux_2_1:Mx_f:28:Mx_i.sel
sel => mux_2_1:Mx_f:29:Mx_i.sel
sel => mux_2_1:Mx_f:30:Mx_i.sel
sel => mux_2_1:Mx_f:31:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut
muxOut[5] <= mux_2_1:Mx_f:5:Mx_i.muxOut
muxOut[6] <= mux_2_1:Mx_f:6:Mx_i.muxOut
muxOut[7] <= mux_2_1:Mx_f:7:Mx_i.muxOut
muxOut[8] <= mux_2_1:Mx_f:8:Mx_i.muxOut
muxOut[9] <= mux_2_1:Mx_f:9:Mx_i.muxOut
muxOut[10] <= mux_2_1:Mx_f:10:Mx_i.muxOut
muxOut[11] <= mux_2_1:Mx_f:11:Mx_i.muxOut
muxOut[12] <= mux_2_1:Mx_f:12:Mx_i.muxOut
muxOut[13] <= mux_2_1:Mx_f:13:Mx_i.muxOut
muxOut[14] <= mux_2_1:Mx_f:14:Mx_i.muxOut
muxOut[15] <= mux_2_1:Mx_f:15:Mx_i.muxOut
muxOut[16] <= mux_2_1:Mx_f:16:Mx_i.muxOut
muxOut[17] <= mux_2_1:Mx_f:17:Mx_i.muxOut
muxOut[18] <= mux_2_1:Mx_f:18:Mx_i.muxOut
muxOut[19] <= mux_2_1:Mx_f:19:Mx_i.muxOut
muxOut[20] <= mux_2_1:Mx_f:20:Mx_i.muxOut
muxOut[21] <= mux_2_1:Mx_f:21:Mx_i.muxOut
muxOut[22] <= mux_2_1:Mx_f:22:Mx_i.muxOut
muxOut[23] <= mux_2_1:Mx_f:23:Mx_i.muxOut
muxOut[24] <= mux_2_1:Mx_f:24:Mx_i.muxOut
muxOut[25] <= mux_2_1:Mx_f:25:Mx_i.muxOut
muxOut[26] <= mux_2_1:Mx_f:26:Mx_i.muxOut
muxOut[27] <= mux_2_1:Mx_f:27:Mx_i.muxOut
muxOut[28] <= mux_2_1:Mx_f:28:Mx_i.muxOut
muxOut[29] <= mux_2_1:Mx_f:29:Mx_i.muxOut
muxOut[30] <= mux_2_1:Mx_f:30:Mx_i.muxOut
muxOut[31] <= mux_2_1:Mx_f:31:Mx_i.muxOut


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:5:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:6:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:7:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:8:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:9:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:10:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:11:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:12:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:13:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:14:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:15:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:16:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:17:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:18:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:19:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:20:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:21:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:22:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:23:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:24:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:25:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:26:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:27:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:28:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:29:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:30:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbit_mux2_1:mux21|mux_2_1:\Mx_f:31:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81
opt1[0] => mux8_1:MU_f:0:MU_i.opt1
opt1[1] => mux8_1:MU_f:1:MU_i.opt1
opt1[2] => mux8_1:MU_f:2:MU_i.opt1
opt1[3] => mux8_1:MU_f:3:MU_i.opt1
opt1[4] => mux8_1:MU_f:4:MU_i.opt1
opt1[5] => mux8_1:MU_f:5:MU_i.opt1
opt1[6] => mux8_1:MU_f:6:MU_i.opt1
opt1[7] => mux8_1:MU_f:7:MU_i.opt1
opt1[8] => mux8_1:MU_f:8:MU_i.opt1
opt1[9] => mux8_1:MU_f:9:MU_i.opt1
opt1[10] => mux8_1:MU_f:10:MU_i.opt1
opt1[11] => mux8_1:MU_f:11:MU_i.opt1
opt1[12] => mux8_1:MU_f:12:MU_i.opt1
opt1[13] => mux8_1:MU_f:13:MU_i.opt1
opt1[14] => mux8_1:MU_f:14:MU_i.opt1
opt1[15] => mux8_1:MU_f:15:MU_i.opt1
opt1[16] => mux8_1:MU_f:16:MU_i.opt1
opt1[17] => mux8_1:MU_f:17:MU_i.opt1
opt1[18] => mux8_1:MU_f:18:MU_i.opt1
opt1[19] => mux8_1:MU_f:19:MU_i.opt1
opt1[20] => mux8_1:MU_f:20:MU_i.opt1
opt1[21] => mux8_1:MU_f:21:MU_i.opt1
opt1[22] => mux8_1:MU_f:22:MU_i.opt1
opt1[23] => mux8_1:MU_f:23:MU_i.opt1
opt1[24] => mux8_1:MU_f:24:MU_i.opt1
opt1[25] => mux8_1:MU_f:25:MU_i.opt1
opt1[26] => mux8_1:MU_f:26:MU_i.opt1
opt1[27] => mux8_1:MU_f:27:MU_i.opt1
opt1[28] => mux8_1:MU_f:28:MU_i.opt1
opt1[29] => mux8_1:MU_f:29:MU_i.opt1
opt1[30] => mux8_1:MU_f:30:MU_i.opt1
opt1[31] => mux8_1:MU_f:31:MU_i.opt1
opt2[0] => mux8_1:MU_f:0:MU_i.opt2
opt2[1] => mux8_1:MU_f:1:MU_i.opt2
opt2[2] => mux8_1:MU_f:2:MU_i.opt2
opt2[3] => mux8_1:MU_f:3:MU_i.opt2
opt2[4] => mux8_1:MU_f:4:MU_i.opt2
opt2[5] => mux8_1:MU_f:5:MU_i.opt2
opt2[6] => mux8_1:MU_f:6:MU_i.opt2
opt2[7] => mux8_1:MU_f:7:MU_i.opt2
opt2[8] => mux8_1:MU_f:8:MU_i.opt2
opt2[9] => mux8_1:MU_f:9:MU_i.opt2
opt2[10] => mux8_1:MU_f:10:MU_i.opt2
opt2[11] => mux8_1:MU_f:11:MU_i.opt2
opt2[12] => mux8_1:MU_f:12:MU_i.opt2
opt2[13] => mux8_1:MU_f:13:MU_i.opt2
opt2[14] => mux8_1:MU_f:14:MU_i.opt2
opt2[15] => mux8_1:MU_f:15:MU_i.opt2
opt2[16] => mux8_1:MU_f:16:MU_i.opt2
opt2[17] => mux8_1:MU_f:17:MU_i.opt2
opt2[18] => mux8_1:MU_f:18:MU_i.opt2
opt2[19] => mux8_1:MU_f:19:MU_i.opt2
opt2[20] => mux8_1:MU_f:20:MU_i.opt2
opt2[21] => mux8_1:MU_f:21:MU_i.opt2
opt2[22] => mux8_1:MU_f:22:MU_i.opt2
opt2[23] => mux8_1:MU_f:23:MU_i.opt2
opt2[24] => mux8_1:MU_f:24:MU_i.opt2
opt2[25] => mux8_1:MU_f:25:MU_i.opt2
opt2[26] => mux8_1:MU_f:26:MU_i.opt2
opt2[27] => mux8_1:MU_f:27:MU_i.opt2
opt2[28] => mux8_1:MU_f:28:MU_i.opt2
opt2[29] => mux8_1:MU_f:29:MU_i.opt2
opt2[30] => mux8_1:MU_f:30:MU_i.opt2
opt2[31] => mux8_1:MU_f:31:MU_i.opt2
opt3[0] => mux8_1:MU_f:0:MU_i.opt3
opt3[1] => mux8_1:MU_f:1:MU_i.opt3
opt3[2] => mux8_1:MU_f:2:MU_i.opt3
opt3[3] => mux8_1:MU_f:3:MU_i.opt3
opt3[4] => mux8_1:MU_f:4:MU_i.opt3
opt3[5] => mux8_1:MU_f:5:MU_i.opt3
opt3[6] => mux8_1:MU_f:6:MU_i.opt3
opt3[7] => mux8_1:MU_f:7:MU_i.opt3
opt3[8] => mux8_1:MU_f:8:MU_i.opt3
opt3[9] => mux8_1:MU_f:9:MU_i.opt3
opt3[10] => mux8_1:MU_f:10:MU_i.opt3
opt3[11] => mux8_1:MU_f:11:MU_i.opt3
opt3[12] => mux8_1:MU_f:12:MU_i.opt3
opt3[13] => mux8_1:MU_f:13:MU_i.opt3
opt3[14] => mux8_1:MU_f:14:MU_i.opt3
opt3[15] => mux8_1:MU_f:15:MU_i.opt3
opt3[16] => mux8_1:MU_f:16:MU_i.opt3
opt3[17] => mux8_1:MU_f:17:MU_i.opt3
opt3[18] => mux8_1:MU_f:18:MU_i.opt3
opt3[19] => mux8_1:MU_f:19:MU_i.opt3
opt3[20] => mux8_1:MU_f:20:MU_i.opt3
opt3[21] => mux8_1:MU_f:21:MU_i.opt3
opt3[22] => mux8_1:MU_f:22:MU_i.opt3
opt3[23] => mux8_1:MU_f:23:MU_i.opt3
opt3[24] => mux8_1:MU_f:24:MU_i.opt3
opt3[25] => mux8_1:MU_f:25:MU_i.opt3
opt3[26] => mux8_1:MU_f:26:MU_i.opt3
opt3[27] => mux8_1:MU_f:27:MU_i.opt3
opt3[28] => mux8_1:MU_f:28:MU_i.opt3
opt3[29] => mux8_1:MU_f:29:MU_i.opt3
opt3[30] => mux8_1:MU_f:30:MU_i.opt3
opt3[31] => mux8_1:MU_f:31:MU_i.opt3
opt4[0] => mux8_1:MU_f:0:MU_i.opt4
opt4[1] => mux8_1:MU_f:1:MU_i.opt4
opt4[2] => mux8_1:MU_f:2:MU_i.opt4
opt4[3] => mux8_1:MU_f:3:MU_i.opt4
opt4[4] => mux8_1:MU_f:4:MU_i.opt4
opt4[5] => mux8_1:MU_f:5:MU_i.opt4
opt4[6] => mux8_1:MU_f:6:MU_i.opt4
opt4[7] => mux8_1:MU_f:7:MU_i.opt4
opt4[8] => mux8_1:MU_f:8:MU_i.opt4
opt4[9] => mux8_1:MU_f:9:MU_i.opt4
opt4[10] => mux8_1:MU_f:10:MU_i.opt4
opt4[11] => mux8_1:MU_f:11:MU_i.opt4
opt4[12] => mux8_1:MU_f:12:MU_i.opt4
opt4[13] => mux8_1:MU_f:13:MU_i.opt4
opt4[14] => mux8_1:MU_f:14:MU_i.opt4
opt4[15] => mux8_1:MU_f:15:MU_i.opt4
opt4[16] => mux8_1:MU_f:16:MU_i.opt4
opt4[17] => mux8_1:MU_f:17:MU_i.opt4
opt4[18] => mux8_1:MU_f:18:MU_i.opt4
opt4[19] => mux8_1:MU_f:19:MU_i.opt4
opt4[20] => mux8_1:MU_f:20:MU_i.opt4
opt4[21] => mux8_1:MU_f:21:MU_i.opt4
opt4[22] => mux8_1:MU_f:22:MU_i.opt4
opt4[23] => mux8_1:MU_f:23:MU_i.opt4
opt4[24] => mux8_1:MU_f:24:MU_i.opt4
opt4[25] => mux8_1:MU_f:25:MU_i.opt4
opt4[26] => mux8_1:MU_f:26:MU_i.opt4
opt4[27] => mux8_1:MU_f:27:MU_i.opt4
opt4[28] => mux8_1:MU_f:28:MU_i.opt4
opt4[29] => mux8_1:MU_f:29:MU_i.opt4
opt4[30] => mux8_1:MU_f:30:MU_i.opt4
opt4[31] => mux8_1:MU_f:31:MU_i.opt4
opt5[0] => mux8_1:MU_f:0:MU_i.opt5
opt5[1] => mux8_1:MU_f:1:MU_i.opt5
opt5[2] => mux8_1:MU_f:2:MU_i.opt5
opt5[3] => mux8_1:MU_f:3:MU_i.opt5
opt5[4] => mux8_1:MU_f:4:MU_i.opt5
opt5[5] => mux8_1:MU_f:5:MU_i.opt5
opt5[6] => mux8_1:MU_f:6:MU_i.opt5
opt5[7] => mux8_1:MU_f:7:MU_i.opt5
opt5[8] => mux8_1:MU_f:8:MU_i.opt5
opt5[9] => mux8_1:MU_f:9:MU_i.opt5
opt5[10] => mux8_1:MU_f:10:MU_i.opt5
opt5[11] => mux8_1:MU_f:11:MU_i.opt5
opt5[12] => mux8_1:MU_f:12:MU_i.opt5
opt5[13] => mux8_1:MU_f:13:MU_i.opt5
opt5[14] => mux8_1:MU_f:14:MU_i.opt5
opt5[15] => mux8_1:MU_f:15:MU_i.opt5
opt5[16] => mux8_1:MU_f:16:MU_i.opt5
opt5[17] => mux8_1:MU_f:17:MU_i.opt5
opt5[18] => mux8_1:MU_f:18:MU_i.opt5
opt5[19] => mux8_1:MU_f:19:MU_i.opt5
opt5[20] => mux8_1:MU_f:20:MU_i.opt5
opt5[21] => mux8_1:MU_f:21:MU_i.opt5
opt5[22] => mux8_1:MU_f:22:MU_i.opt5
opt5[23] => mux8_1:MU_f:23:MU_i.opt5
opt5[24] => mux8_1:MU_f:24:MU_i.opt5
opt5[25] => mux8_1:MU_f:25:MU_i.opt5
opt5[26] => mux8_1:MU_f:26:MU_i.opt5
opt5[27] => mux8_1:MU_f:27:MU_i.opt5
opt5[28] => mux8_1:MU_f:28:MU_i.opt5
opt5[29] => mux8_1:MU_f:29:MU_i.opt5
opt5[30] => mux8_1:MU_f:30:MU_i.opt5
opt5[31] => mux8_1:MU_f:31:MU_i.opt5
opt6[0] => mux8_1:MU_f:0:MU_i.opt6
opt6[1] => mux8_1:MU_f:1:MU_i.opt6
opt6[2] => mux8_1:MU_f:2:MU_i.opt6
opt6[3] => mux8_1:MU_f:3:MU_i.opt6
opt6[4] => mux8_1:MU_f:4:MU_i.opt6
opt6[5] => mux8_1:MU_f:5:MU_i.opt6
opt6[6] => mux8_1:MU_f:6:MU_i.opt6
opt6[7] => mux8_1:MU_f:7:MU_i.opt6
opt6[8] => mux8_1:MU_f:8:MU_i.opt6
opt6[9] => mux8_1:MU_f:9:MU_i.opt6
opt6[10] => mux8_1:MU_f:10:MU_i.opt6
opt6[11] => mux8_1:MU_f:11:MU_i.opt6
opt6[12] => mux8_1:MU_f:12:MU_i.opt6
opt6[13] => mux8_1:MU_f:13:MU_i.opt6
opt6[14] => mux8_1:MU_f:14:MU_i.opt6
opt6[15] => mux8_1:MU_f:15:MU_i.opt6
opt6[16] => mux8_1:MU_f:16:MU_i.opt6
opt6[17] => mux8_1:MU_f:17:MU_i.opt6
opt6[18] => mux8_1:MU_f:18:MU_i.opt6
opt6[19] => mux8_1:MU_f:19:MU_i.opt6
opt6[20] => mux8_1:MU_f:20:MU_i.opt6
opt6[21] => mux8_1:MU_f:21:MU_i.opt6
opt6[22] => mux8_1:MU_f:22:MU_i.opt6
opt6[23] => mux8_1:MU_f:23:MU_i.opt6
opt6[24] => mux8_1:MU_f:24:MU_i.opt6
opt6[25] => mux8_1:MU_f:25:MU_i.opt6
opt6[26] => mux8_1:MU_f:26:MU_i.opt6
opt6[27] => mux8_1:MU_f:27:MU_i.opt6
opt6[28] => mux8_1:MU_f:28:MU_i.opt6
opt6[29] => mux8_1:MU_f:29:MU_i.opt6
opt6[30] => mux8_1:MU_f:30:MU_i.opt6
opt6[31] => mux8_1:MU_f:31:MU_i.opt6
opt7[0] => mux8_1:MU_f:0:MU_i.opt7
opt7[1] => mux8_1:MU_f:1:MU_i.opt7
opt7[2] => mux8_1:MU_f:2:MU_i.opt7
opt7[3] => mux8_1:MU_f:3:MU_i.opt7
opt7[4] => mux8_1:MU_f:4:MU_i.opt7
opt7[5] => mux8_1:MU_f:5:MU_i.opt7
opt7[6] => mux8_1:MU_f:6:MU_i.opt7
opt7[7] => mux8_1:MU_f:7:MU_i.opt7
opt7[8] => mux8_1:MU_f:8:MU_i.opt7
opt7[9] => mux8_1:MU_f:9:MU_i.opt7
opt7[10] => mux8_1:MU_f:10:MU_i.opt7
opt7[11] => mux8_1:MU_f:11:MU_i.opt7
opt7[12] => mux8_1:MU_f:12:MU_i.opt7
opt7[13] => mux8_1:MU_f:13:MU_i.opt7
opt7[14] => mux8_1:MU_f:14:MU_i.opt7
opt7[15] => mux8_1:MU_f:15:MU_i.opt7
opt7[16] => mux8_1:MU_f:16:MU_i.opt7
opt7[17] => mux8_1:MU_f:17:MU_i.opt7
opt7[18] => mux8_1:MU_f:18:MU_i.opt7
opt7[19] => mux8_1:MU_f:19:MU_i.opt7
opt7[20] => mux8_1:MU_f:20:MU_i.opt7
opt7[21] => mux8_1:MU_f:21:MU_i.opt7
opt7[22] => mux8_1:MU_f:22:MU_i.opt7
opt7[23] => mux8_1:MU_f:23:MU_i.opt7
opt7[24] => mux8_1:MU_f:24:MU_i.opt7
opt7[25] => mux8_1:MU_f:25:MU_i.opt7
opt7[26] => mux8_1:MU_f:26:MU_i.opt7
opt7[27] => mux8_1:MU_f:27:MU_i.opt7
opt7[28] => mux8_1:MU_f:28:MU_i.opt7
opt7[29] => mux8_1:MU_f:29:MU_i.opt7
opt7[30] => mux8_1:MU_f:30:MU_i.opt7
opt7[31] => mux8_1:MU_f:31:MU_i.opt7
opt8[0] => mux8_1:MU_f:0:MU_i.opt8
opt8[1] => mux8_1:MU_f:1:MU_i.opt8
opt8[2] => mux8_1:MU_f:2:MU_i.opt8
opt8[3] => mux8_1:MU_f:3:MU_i.opt8
opt8[4] => mux8_1:MU_f:4:MU_i.opt8
opt8[5] => mux8_1:MU_f:5:MU_i.opt8
opt8[6] => mux8_1:MU_f:6:MU_i.opt8
opt8[7] => mux8_1:MU_f:7:MU_i.opt8
opt8[8] => mux8_1:MU_f:8:MU_i.opt8
opt8[9] => mux8_1:MU_f:9:MU_i.opt8
opt8[10] => mux8_1:MU_f:10:MU_i.opt8
opt8[11] => mux8_1:MU_f:11:MU_i.opt8
opt8[12] => mux8_1:MU_f:12:MU_i.opt8
opt8[13] => mux8_1:MU_f:13:MU_i.opt8
opt8[14] => mux8_1:MU_f:14:MU_i.opt8
opt8[15] => mux8_1:MU_f:15:MU_i.opt8
opt8[16] => mux8_1:MU_f:16:MU_i.opt8
opt8[17] => mux8_1:MU_f:17:MU_i.opt8
opt8[18] => mux8_1:MU_f:18:MU_i.opt8
opt8[19] => mux8_1:MU_f:19:MU_i.opt8
opt8[20] => mux8_1:MU_f:20:MU_i.opt8
opt8[21] => mux8_1:MU_f:21:MU_i.opt8
opt8[22] => mux8_1:MU_f:22:MU_i.opt8
opt8[23] => mux8_1:MU_f:23:MU_i.opt8
opt8[24] => mux8_1:MU_f:24:MU_i.opt8
opt8[25] => mux8_1:MU_f:25:MU_i.opt8
opt8[26] => mux8_1:MU_f:26:MU_i.opt8
opt8[27] => mux8_1:MU_f:27:MU_i.opt8
opt8[28] => mux8_1:MU_f:28:MU_i.opt8
opt8[29] => mux8_1:MU_f:29:MU_i.opt8
opt8[30] => mux8_1:MU_f:30:MU_i.opt8
opt8[31] => mux8_1:MU_f:31:MU_i.opt8
sel[0] => mux8_1:MU_f:0:MU_i.sel[0]
sel[0] => mux8_1:MU_f:1:MU_i.sel[0]
sel[0] => mux8_1:MU_f:2:MU_i.sel[0]
sel[0] => mux8_1:MU_f:3:MU_i.sel[0]
sel[0] => mux8_1:MU_f:4:MU_i.sel[0]
sel[0] => mux8_1:MU_f:5:MU_i.sel[0]
sel[0] => mux8_1:MU_f:6:MU_i.sel[0]
sel[0] => mux8_1:MU_f:7:MU_i.sel[0]
sel[0] => mux8_1:MU_f:8:MU_i.sel[0]
sel[0] => mux8_1:MU_f:9:MU_i.sel[0]
sel[0] => mux8_1:MU_f:10:MU_i.sel[0]
sel[0] => mux8_1:MU_f:11:MU_i.sel[0]
sel[0] => mux8_1:MU_f:12:MU_i.sel[0]
sel[0] => mux8_1:MU_f:13:MU_i.sel[0]
sel[0] => mux8_1:MU_f:14:MU_i.sel[0]
sel[0] => mux8_1:MU_f:15:MU_i.sel[0]
sel[0] => mux8_1:MU_f:16:MU_i.sel[0]
sel[0] => mux8_1:MU_f:17:MU_i.sel[0]
sel[0] => mux8_1:MU_f:18:MU_i.sel[0]
sel[0] => mux8_1:MU_f:19:MU_i.sel[0]
sel[0] => mux8_1:MU_f:20:MU_i.sel[0]
sel[0] => mux8_1:MU_f:21:MU_i.sel[0]
sel[0] => mux8_1:MU_f:22:MU_i.sel[0]
sel[0] => mux8_1:MU_f:23:MU_i.sel[0]
sel[0] => mux8_1:MU_f:24:MU_i.sel[0]
sel[0] => mux8_1:MU_f:25:MU_i.sel[0]
sel[0] => mux8_1:MU_f:26:MU_i.sel[0]
sel[0] => mux8_1:MU_f:27:MU_i.sel[0]
sel[0] => mux8_1:MU_f:28:MU_i.sel[0]
sel[0] => mux8_1:MU_f:29:MU_i.sel[0]
sel[0] => mux8_1:MU_f:30:MU_i.sel[0]
sel[0] => mux8_1:MU_f:31:MU_i.sel[0]
sel[1] => mux8_1:MU_f:0:MU_i.sel[1]
sel[1] => mux8_1:MU_f:1:MU_i.sel[1]
sel[1] => mux8_1:MU_f:2:MU_i.sel[1]
sel[1] => mux8_1:MU_f:3:MU_i.sel[1]
sel[1] => mux8_1:MU_f:4:MU_i.sel[1]
sel[1] => mux8_1:MU_f:5:MU_i.sel[1]
sel[1] => mux8_1:MU_f:6:MU_i.sel[1]
sel[1] => mux8_1:MU_f:7:MU_i.sel[1]
sel[1] => mux8_1:MU_f:8:MU_i.sel[1]
sel[1] => mux8_1:MU_f:9:MU_i.sel[1]
sel[1] => mux8_1:MU_f:10:MU_i.sel[1]
sel[1] => mux8_1:MU_f:11:MU_i.sel[1]
sel[1] => mux8_1:MU_f:12:MU_i.sel[1]
sel[1] => mux8_1:MU_f:13:MU_i.sel[1]
sel[1] => mux8_1:MU_f:14:MU_i.sel[1]
sel[1] => mux8_1:MU_f:15:MU_i.sel[1]
sel[1] => mux8_1:MU_f:16:MU_i.sel[1]
sel[1] => mux8_1:MU_f:17:MU_i.sel[1]
sel[1] => mux8_1:MU_f:18:MU_i.sel[1]
sel[1] => mux8_1:MU_f:19:MU_i.sel[1]
sel[1] => mux8_1:MU_f:20:MU_i.sel[1]
sel[1] => mux8_1:MU_f:21:MU_i.sel[1]
sel[1] => mux8_1:MU_f:22:MU_i.sel[1]
sel[1] => mux8_1:MU_f:23:MU_i.sel[1]
sel[1] => mux8_1:MU_f:24:MU_i.sel[1]
sel[1] => mux8_1:MU_f:25:MU_i.sel[1]
sel[1] => mux8_1:MU_f:26:MU_i.sel[1]
sel[1] => mux8_1:MU_f:27:MU_i.sel[1]
sel[1] => mux8_1:MU_f:28:MU_i.sel[1]
sel[1] => mux8_1:MU_f:29:MU_i.sel[1]
sel[1] => mux8_1:MU_f:30:MU_i.sel[1]
sel[1] => mux8_1:MU_f:31:MU_i.sel[1]
sel[2] => mux8_1:MU_f:0:MU_i.sel[2]
sel[2] => mux8_1:MU_f:1:MU_i.sel[2]
sel[2] => mux8_1:MU_f:2:MU_i.sel[2]
sel[2] => mux8_1:MU_f:3:MU_i.sel[2]
sel[2] => mux8_1:MU_f:4:MU_i.sel[2]
sel[2] => mux8_1:MU_f:5:MU_i.sel[2]
sel[2] => mux8_1:MU_f:6:MU_i.sel[2]
sel[2] => mux8_1:MU_f:7:MU_i.sel[2]
sel[2] => mux8_1:MU_f:8:MU_i.sel[2]
sel[2] => mux8_1:MU_f:9:MU_i.sel[2]
sel[2] => mux8_1:MU_f:10:MU_i.sel[2]
sel[2] => mux8_1:MU_f:11:MU_i.sel[2]
sel[2] => mux8_1:MU_f:12:MU_i.sel[2]
sel[2] => mux8_1:MU_f:13:MU_i.sel[2]
sel[2] => mux8_1:MU_f:14:MU_i.sel[2]
sel[2] => mux8_1:MU_f:15:MU_i.sel[2]
sel[2] => mux8_1:MU_f:16:MU_i.sel[2]
sel[2] => mux8_1:MU_f:17:MU_i.sel[2]
sel[2] => mux8_1:MU_f:18:MU_i.sel[2]
sel[2] => mux8_1:MU_f:19:MU_i.sel[2]
sel[2] => mux8_1:MU_f:20:MU_i.sel[2]
sel[2] => mux8_1:MU_f:21:MU_i.sel[2]
sel[2] => mux8_1:MU_f:22:MU_i.sel[2]
sel[2] => mux8_1:MU_f:23:MU_i.sel[2]
sel[2] => mux8_1:MU_f:24:MU_i.sel[2]
sel[2] => mux8_1:MU_f:25:MU_i.sel[2]
sel[2] => mux8_1:MU_f:26:MU_i.sel[2]
sel[2] => mux8_1:MU_f:27:MU_i.sel[2]
sel[2] => mux8_1:MU_f:28:MU_i.sel[2]
sel[2] => mux8_1:MU_f:29:MU_i.sel[2]
sel[2] => mux8_1:MU_f:30:MU_i.sel[2]
sel[2] => mux8_1:MU_f:31:MU_i.sel[2]
muxOut[0] <= mux8_1:MU_f:0:MU_i.muxOut
muxOut[1] <= mux8_1:MU_f:1:MU_i.muxOut
muxOut[2] <= mux8_1:MU_f:2:MU_i.muxOut
muxOut[3] <= mux8_1:MU_f:3:MU_i.muxOut
muxOut[4] <= mux8_1:MU_f:4:MU_i.muxOut
muxOut[5] <= mux8_1:MU_f:5:MU_i.muxOut
muxOut[6] <= mux8_1:MU_f:6:MU_i.muxOut
muxOut[7] <= mux8_1:MU_f:7:MU_i.muxOut
muxOut[8] <= mux8_1:MU_f:8:MU_i.muxOut
muxOut[9] <= mux8_1:MU_f:9:MU_i.muxOut
muxOut[10] <= mux8_1:MU_f:10:MU_i.muxOut
muxOut[11] <= mux8_1:MU_f:11:MU_i.muxOut
muxOut[12] <= mux8_1:MU_f:12:MU_i.muxOut
muxOut[13] <= mux8_1:MU_f:13:MU_i.muxOut
muxOut[14] <= mux8_1:MU_f:14:MU_i.muxOut
muxOut[15] <= mux8_1:MU_f:15:MU_i.muxOut
muxOut[16] <= mux8_1:MU_f:16:MU_i.muxOut
muxOut[17] <= mux8_1:MU_f:17:MU_i.muxOut
muxOut[18] <= mux8_1:MU_f:18:MU_i.muxOut
muxOut[19] <= mux8_1:MU_f:19:MU_i.muxOut
muxOut[20] <= mux8_1:MU_f:20:MU_i.muxOut
muxOut[21] <= mux8_1:MU_f:21:MU_i.muxOut
muxOut[22] <= mux8_1:MU_f:22:MU_i.muxOut
muxOut[23] <= mux8_1:MU_f:23:MU_i.muxOut
muxOut[24] <= mux8_1:MU_f:24:MU_i.muxOut
muxOut[25] <= mux8_1:MU_f:25:MU_i.muxOut
muxOut[26] <= mux8_1:MU_f:26:MU_i.muxOut
muxOut[27] <= mux8_1:MU_f:27:MU_i.muxOut
muxOut[28] <= mux8_1:MU_f:28:MU_i.muxOut
muxOut[29] <= mux8_1:MU_f:29:MU_i.muxOut
muxOut[30] <= mux8_1:MU_f:30:MU_i.muxOut
muxOut[31] <= mux8_1:MU_f:31:MU_i.muxOut


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:0:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:1:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:2:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:3:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:4:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:5:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:6:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:7:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:8:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:9:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:10:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:11:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:12:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:13:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:14:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:15:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:16:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:17:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:18:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:19:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:20:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:21:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:22:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:23:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:24:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:25:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:26:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:27:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:28:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:29:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:30:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|mainALU:ALUMAIN|nbitmux8_1:mux81|mux8_1:\MU_f:31:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|myData_memory:RAM
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
data[4] => altsyncram:altsyncram_component.data_a[4]
data[5] => altsyncram:altsyncram_component.data_a[5]
data[6] => altsyncram:altsyncram_component.data_a[6]
data[7] => altsyncram:altsyncram_component.data_a[7]
data[8] => altsyncram:altsyncram_component.data_a[8]
data[9] => altsyncram:altsyncram_component.data_a[9]
data[10] => altsyncram:altsyncram_component.data_a[10]
data[11] => altsyncram:altsyncram_component.data_a[11]
data[12] => altsyncram:altsyncram_component.data_a[12]
data[13] => altsyncram:altsyncram_component.data_a[13]
data[14] => altsyncram:altsyncram_component.data_a[14]
data[15] => altsyncram:altsyncram_component.data_a[15]
data[16] => altsyncram:altsyncram_component.data_a[16]
data[17] => altsyncram:altsyncram_component.data_a[17]
data[18] => altsyncram:altsyncram_component.data_a[18]
data[19] => altsyncram:altsyncram_component.data_a[19]
data[20] => altsyncram:altsyncram_component.data_a[20]
data[21] => altsyncram:altsyncram_component.data_a[21]
data[22] => altsyncram:altsyncram_component.data_a[22]
data[23] => altsyncram:altsyncram_component.data_a[23]
data[24] => altsyncram:altsyncram_component.data_a[24]
data[25] => altsyncram:altsyncram_component.data_a[25]
data[26] => altsyncram:altsyncram_component.data_a[26]
data[27] => altsyncram:altsyncram_component.data_a[27]
data[28] => altsyncram:altsyncram_component.data_a[28]
data[29] => altsyncram:altsyncram_component.data_a[29]
data[30] => altsyncram:altsyncram_component.data_a[30]
data[31] => altsyncram:altsyncram_component.data_a[31]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]
q[8] <= altsyncram:altsyncram_component.q_a[8]
q[9] <= altsyncram:altsyncram_component.q_a[9]
q[10] <= altsyncram:altsyncram_component.q_a[10]
q[11] <= altsyncram:altsyncram_component.q_a[11]
q[12] <= altsyncram:altsyncram_component.q_a[12]
q[13] <= altsyncram:altsyncram_component.q_a[13]
q[14] <= altsyncram:altsyncram_component.q_a[14]
q[15] <= altsyncram:altsyncram_component.q_a[15]
q[16] <= altsyncram:altsyncram_component.q_a[16]
q[17] <= altsyncram:altsyncram_component.q_a[17]
q[18] <= altsyncram:altsyncram_component.q_a[18]
q[19] <= altsyncram:altsyncram_component.q_a[19]
q[20] <= altsyncram:altsyncram_component.q_a[20]
q[21] <= altsyncram:altsyncram_component.q_a[21]
q[22] <= altsyncram:altsyncram_component.q_a[22]
q[23] <= altsyncram:altsyncram_component.q_a[23]
q[24] <= altsyncram:altsyncram_component.q_a[24]
q[25] <= altsyncram:altsyncram_component.q_a[25]
q[26] <= altsyncram:altsyncram_component.q_a[26]
q[27] <= altsyncram:altsyncram_component.q_a[27]
q[28] <= altsyncram:altsyncram_component.q_a[28]
q[29] <= altsyncram:altsyncram_component.q_a[29]
q[30] <= altsyncram:altsyncram_component.q_a[30]
q[31] <= altsyncram:altsyncram_component.q_a[31]


|top|RISC_processor:myRISC|myData_memory:RAM|altsyncram:altsyncram_component
wren_a => altsyncram_0eg1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_0eg1:auto_generated.data_a[0]
data_a[1] => altsyncram_0eg1:auto_generated.data_a[1]
data_a[2] => altsyncram_0eg1:auto_generated.data_a[2]
data_a[3] => altsyncram_0eg1:auto_generated.data_a[3]
data_a[4] => altsyncram_0eg1:auto_generated.data_a[4]
data_a[5] => altsyncram_0eg1:auto_generated.data_a[5]
data_a[6] => altsyncram_0eg1:auto_generated.data_a[6]
data_a[7] => altsyncram_0eg1:auto_generated.data_a[7]
data_a[8] => altsyncram_0eg1:auto_generated.data_a[8]
data_a[9] => altsyncram_0eg1:auto_generated.data_a[9]
data_a[10] => altsyncram_0eg1:auto_generated.data_a[10]
data_a[11] => altsyncram_0eg1:auto_generated.data_a[11]
data_a[12] => altsyncram_0eg1:auto_generated.data_a[12]
data_a[13] => altsyncram_0eg1:auto_generated.data_a[13]
data_a[14] => altsyncram_0eg1:auto_generated.data_a[14]
data_a[15] => altsyncram_0eg1:auto_generated.data_a[15]
data_a[16] => altsyncram_0eg1:auto_generated.data_a[16]
data_a[17] => altsyncram_0eg1:auto_generated.data_a[17]
data_a[18] => altsyncram_0eg1:auto_generated.data_a[18]
data_a[19] => altsyncram_0eg1:auto_generated.data_a[19]
data_a[20] => altsyncram_0eg1:auto_generated.data_a[20]
data_a[21] => altsyncram_0eg1:auto_generated.data_a[21]
data_a[22] => altsyncram_0eg1:auto_generated.data_a[22]
data_a[23] => altsyncram_0eg1:auto_generated.data_a[23]
data_a[24] => altsyncram_0eg1:auto_generated.data_a[24]
data_a[25] => altsyncram_0eg1:auto_generated.data_a[25]
data_a[26] => altsyncram_0eg1:auto_generated.data_a[26]
data_a[27] => altsyncram_0eg1:auto_generated.data_a[27]
data_a[28] => altsyncram_0eg1:auto_generated.data_a[28]
data_a[29] => altsyncram_0eg1:auto_generated.data_a[29]
data_a[30] => altsyncram_0eg1:auto_generated.data_a[30]
data_a[31] => altsyncram_0eg1:auto_generated.data_a[31]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_0eg1:auto_generated.address_a[0]
address_a[1] => altsyncram_0eg1:auto_generated.address_a[1]
address_a[2] => altsyncram_0eg1:auto_generated.address_a[2]
address_a[3] => altsyncram_0eg1:auto_generated.address_a[3]
address_a[4] => altsyncram_0eg1:auto_generated.address_a[4]
address_a[5] => altsyncram_0eg1:auto_generated.address_a[5]
address_a[6] => altsyncram_0eg1:auto_generated.address_a[6]
address_a[7] => altsyncram_0eg1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_0eg1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_0eg1:auto_generated.q_a[0]
q_a[1] <= altsyncram_0eg1:auto_generated.q_a[1]
q_a[2] <= altsyncram_0eg1:auto_generated.q_a[2]
q_a[3] <= altsyncram_0eg1:auto_generated.q_a[3]
q_a[4] <= altsyncram_0eg1:auto_generated.q_a[4]
q_a[5] <= altsyncram_0eg1:auto_generated.q_a[5]
q_a[6] <= altsyncram_0eg1:auto_generated.q_a[6]
q_a[7] <= altsyncram_0eg1:auto_generated.q_a[7]
q_a[8] <= altsyncram_0eg1:auto_generated.q_a[8]
q_a[9] <= altsyncram_0eg1:auto_generated.q_a[9]
q_a[10] <= altsyncram_0eg1:auto_generated.q_a[10]
q_a[11] <= altsyncram_0eg1:auto_generated.q_a[11]
q_a[12] <= altsyncram_0eg1:auto_generated.q_a[12]
q_a[13] <= altsyncram_0eg1:auto_generated.q_a[13]
q_a[14] <= altsyncram_0eg1:auto_generated.q_a[14]
q_a[15] <= altsyncram_0eg1:auto_generated.q_a[15]
q_a[16] <= altsyncram_0eg1:auto_generated.q_a[16]
q_a[17] <= altsyncram_0eg1:auto_generated.q_a[17]
q_a[18] <= altsyncram_0eg1:auto_generated.q_a[18]
q_a[19] <= altsyncram_0eg1:auto_generated.q_a[19]
q_a[20] <= altsyncram_0eg1:auto_generated.q_a[20]
q_a[21] <= altsyncram_0eg1:auto_generated.q_a[21]
q_a[22] <= altsyncram_0eg1:auto_generated.q_a[22]
q_a[23] <= altsyncram_0eg1:auto_generated.q_a[23]
q_a[24] <= altsyncram_0eg1:auto_generated.q_a[24]
q_a[25] <= altsyncram_0eg1:auto_generated.q_a[25]
q_a[26] <= altsyncram_0eg1:auto_generated.q_a[26]
q_a[27] <= altsyncram_0eg1:auto_generated.q_a[27]
q_a[28] <= altsyncram_0eg1:auto_generated.q_a[28]
q_a[29] <= altsyncram_0eg1:auto_generated.q_a[29]
q_a[30] <= altsyncram_0eg1:auto_generated.q_a[30]
q_a[31] <= altsyncram_0eg1:auto_generated.q_a[31]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|top|RISC_processor:myRISC|myData_memory:RAM|altsyncram:altsyncram_component|altsyncram_0eg1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[0] => ram_block1a24.PORTAADDR
address_a[0] => ram_block1a25.PORTAADDR
address_a[0] => ram_block1a26.PORTAADDR
address_a[0] => ram_block1a27.PORTAADDR
address_a[0] => ram_block1a28.PORTAADDR
address_a[0] => ram_block1a29.PORTAADDR
address_a[0] => ram_block1a30.PORTAADDR
address_a[0] => ram_block1a31.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[1] => ram_block1a24.PORTAADDR1
address_a[1] => ram_block1a25.PORTAADDR1
address_a[1] => ram_block1a26.PORTAADDR1
address_a[1] => ram_block1a27.PORTAADDR1
address_a[1] => ram_block1a28.PORTAADDR1
address_a[1] => ram_block1a29.PORTAADDR1
address_a[1] => ram_block1a30.PORTAADDR1
address_a[1] => ram_block1a31.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[2] => ram_block1a24.PORTAADDR2
address_a[2] => ram_block1a25.PORTAADDR2
address_a[2] => ram_block1a26.PORTAADDR2
address_a[2] => ram_block1a27.PORTAADDR2
address_a[2] => ram_block1a28.PORTAADDR2
address_a[2] => ram_block1a29.PORTAADDR2
address_a[2] => ram_block1a30.PORTAADDR2
address_a[2] => ram_block1a31.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[3] => ram_block1a24.PORTAADDR3
address_a[3] => ram_block1a25.PORTAADDR3
address_a[3] => ram_block1a26.PORTAADDR3
address_a[3] => ram_block1a27.PORTAADDR3
address_a[3] => ram_block1a28.PORTAADDR3
address_a[3] => ram_block1a29.PORTAADDR3
address_a[3] => ram_block1a30.PORTAADDR3
address_a[3] => ram_block1a31.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
address_a[4] => ram_block1a24.PORTAADDR4
address_a[4] => ram_block1a25.PORTAADDR4
address_a[4] => ram_block1a26.PORTAADDR4
address_a[4] => ram_block1a27.PORTAADDR4
address_a[4] => ram_block1a28.PORTAADDR4
address_a[4] => ram_block1a29.PORTAADDR4
address_a[4] => ram_block1a30.PORTAADDR4
address_a[4] => ram_block1a31.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[5] => ram_block1a16.PORTAADDR5
address_a[5] => ram_block1a17.PORTAADDR5
address_a[5] => ram_block1a18.PORTAADDR5
address_a[5] => ram_block1a19.PORTAADDR5
address_a[5] => ram_block1a20.PORTAADDR5
address_a[5] => ram_block1a21.PORTAADDR5
address_a[5] => ram_block1a22.PORTAADDR5
address_a[5] => ram_block1a23.PORTAADDR5
address_a[5] => ram_block1a24.PORTAADDR5
address_a[5] => ram_block1a25.PORTAADDR5
address_a[5] => ram_block1a26.PORTAADDR5
address_a[5] => ram_block1a27.PORTAADDR5
address_a[5] => ram_block1a28.PORTAADDR5
address_a[5] => ram_block1a29.PORTAADDR5
address_a[5] => ram_block1a30.PORTAADDR5
address_a[5] => ram_block1a31.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[6] => ram_block1a16.PORTAADDR6
address_a[6] => ram_block1a17.PORTAADDR6
address_a[6] => ram_block1a18.PORTAADDR6
address_a[6] => ram_block1a19.PORTAADDR6
address_a[6] => ram_block1a20.PORTAADDR6
address_a[6] => ram_block1a21.PORTAADDR6
address_a[6] => ram_block1a22.PORTAADDR6
address_a[6] => ram_block1a23.PORTAADDR6
address_a[6] => ram_block1a24.PORTAADDR6
address_a[6] => ram_block1a25.PORTAADDR6
address_a[6] => ram_block1a26.PORTAADDR6
address_a[6] => ram_block1a27.PORTAADDR6
address_a[6] => ram_block1a28.PORTAADDR6
address_a[6] => ram_block1a29.PORTAADDR6
address_a[6] => ram_block1a30.PORTAADDR6
address_a[6] => ram_block1a31.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[7] => ram_block1a16.PORTAADDR7
address_a[7] => ram_block1a17.PORTAADDR7
address_a[7] => ram_block1a18.PORTAADDR7
address_a[7] => ram_block1a19.PORTAADDR7
address_a[7] => ram_block1a20.PORTAADDR7
address_a[7] => ram_block1a21.PORTAADDR7
address_a[7] => ram_block1a22.PORTAADDR7
address_a[7] => ram_block1a23.PORTAADDR7
address_a[7] => ram_block1a24.PORTAADDR7
address_a[7] => ram_block1a25.PORTAADDR7
address_a[7] => ram_block1a26.PORTAADDR7
address_a[7] => ram_block1a27.PORTAADDR7
address_a[7] => ram_block1a28.PORTAADDR7
address_a[7] => ram_block1a29.PORTAADDR7
address_a[7] => ram_block1a30.PORTAADDR7
address_a[7] => ram_block1a31.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
clock0 => ram_block1a24.CLK0
clock0 => ram_block1a25.CLK0
clock0 => ram_block1a26.CLK0
clock0 => ram_block1a27.CLK0
clock0 => ram_block1a28.CLK0
clock0 => ram_block1a29.CLK0
clock0 => ram_block1a30.CLK0
clock0 => ram_block1a31.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
data_a[8] => ram_block1a8.PORTADATAIN
data_a[9] => ram_block1a9.PORTADATAIN
data_a[10] => ram_block1a10.PORTADATAIN
data_a[11] => ram_block1a11.PORTADATAIN
data_a[12] => ram_block1a12.PORTADATAIN
data_a[13] => ram_block1a13.PORTADATAIN
data_a[14] => ram_block1a14.PORTADATAIN
data_a[15] => ram_block1a15.PORTADATAIN
data_a[16] => ram_block1a16.PORTADATAIN
data_a[17] => ram_block1a17.PORTADATAIN
data_a[18] => ram_block1a18.PORTADATAIN
data_a[19] => ram_block1a19.PORTADATAIN
data_a[20] => ram_block1a20.PORTADATAIN
data_a[21] => ram_block1a21.PORTADATAIN
data_a[22] => ram_block1a22.PORTADATAIN
data_a[23] => ram_block1a23.PORTADATAIN
data_a[24] => ram_block1a24.PORTADATAIN
data_a[25] => ram_block1a25.PORTADATAIN
data_a[26] => ram_block1a26.PORTADATAIN
data_a[27] => ram_block1a27.PORTADATAIN
data_a[28] => ram_block1a28.PORTADATAIN
data_a[29] => ram_block1a29.PORTADATAIN
data_a[30] => ram_block1a30.PORTADATAIN
data_a[31] => ram_block1a31.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT
q_a[24] <= ram_block1a24.PORTADATAOUT
q_a[25] <= ram_block1a25.PORTADATAOUT
q_a[26] <= ram_block1a26.PORTADATAOUT
q_a[27] <= ram_block1a27.PORTADATAOUT
q_a[28] <= ram_block1a28.PORTADATAOUT
q_a[29] <= ram_block1a29.PORTADATAOUT
q_a[30] <= ram_block1a30.PORTADATAOUT
q_a[31] <= ram_block1a31.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a8.PORTAWE
wren_a => ram_block1a9.PORTAWE
wren_a => ram_block1a10.PORTAWE
wren_a => ram_block1a11.PORTAWE
wren_a => ram_block1a12.PORTAWE
wren_a => ram_block1a13.PORTAWE
wren_a => ram_block1a14.PORTAWE
wren_a => ram_block1a15.PORTAWE
wren_a => ram_block1a16.PORTAWE
wren_a => ram_block1a17.PORTAWE
wren_a => ram_block1a18.PORTAWE
wren_a => ram_block1a19.PORTAWE
wren_a => ram_block1a20.PORTAWE
wren_a => ram_block1a21.PORTAWE
wren_a => ram_block1a22.PORTAWE
wren_a => ram_block1a23.PORTAWE
wren_a => ram_block1a24.PORTAWE
wren_a => ram_block1a25.PORTAWE
wren_a => ram_block1a26.PORTAWE
wren_a => ram_block1a27.PORTAWE
wren_a => ram_block1a28.PORTAWE
wren_a => ram_block1a29.PORTAWE
wren_a => ram_block1a30.PORTAWE
wren_a => ram_block1a31.PORTAWE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux
opt1[0] => mux_2_1:Mx_f:0:Mx_i.opt1
opt1[1] => mux_2_1:Mx_f:1:Mx_i.opt1
opt1[2] => mux_2_1:Mx_f:2:Mx_i.opt1
opt1[3] => mux_2_1:Mx_f:3:Mx_i.opt1
opt1[4] => mux_2_1:Mx_f:4:Mx_i.opt1
opt1[5] => mux_2_1:Mx_f:5:Mx_i.opt1
opt1[6] => mux_2_1:Mx_f:6:Mx_i.opt1
opt1[7] => mux_2_1:Mx_f:7:Mx_i.opt1
opt1[8] => mux_2_1:Mx_f:8:Mx_i.opt1
opt1[9] => mux_2_1:Mx_f:9:Mx_i.opt1
opt1[10] => mux_2_1:Mx_f:10:Mx_i.opt1
opt1[11] => mux_2_1:Mx_f:11:Mx_i.opt1
opt1[12] => mux_2_1:Mx_f:12:Mx_i.opt1
opt1[13] => mux_2_1:Mx_f:13:Mx_i.opt1
opt1[14] => mux_2_1:Mx_f:14:Mx_i.opt1
opt1[15] => mux_2_1:Mx_f:15:Mx_i.opt1
opt1[16] => mux_2_1:Mx_f:16:Mx_i.opt1
opt1[17] => mux_2_1:Mx_f:17:Mx_i.opt1
opt1[18] => mux_2_1:Mx_f:18:Mx_i.opt1
opt1[19] => mux_2_1:Mx_f:19:Mx_i.opt1
opt1[20] => mux_2_1:Mx_f:20:Mx_i.opt1
opt1[21] => mux_2_1:Mx_f:21:Mx_i.opt1
opt1[22] => mux_2_1:Mx_f:22:Mx_i.opt1
opt1[23] => mux_2_1:Mx_f:23:Mx_i.opt1
opt1[24] => mux_2_1:Mx_f:24:Mx_i.opt1
opt1[25] => mux_2_1:Mx_f:25:Mx_i.opt1
opt1[26] => mux_2_1:Mx_f:26:Mx_i.opt1
opt1[27] => mux_2_1:Mx_f:27:Mx_i.opt1
opt1[28] => mux_2_1:Mx_f:28:Mx_i.opt1
opt1[29] => mux_2_1:Mx_f:29:Mx_i.opt1
opt1[30] => mux_2_1:Mx_f:30:Mx_i.opt1
opt1[31] => mux_2_1:Mx_f:31:Mx_i.opt1
opt2[0] => mux_2_1:Mx_f:0:Mx_i.opt2
opt2[1] => mux_2_1:Mx_f:1:Mx_i.opt2
opt2[2] => mux_2_1:Mx_f:2:Mx_i.opt2
opt2[3] => mux_2_1:Mx_f:3:Mx_i.opt2
opt2[4] => mux_2_1:Mx_f:4:Mx_i.opt2
opt2[5] => mux_2_1:Mx_f:5:Mx_i.opt2
opt2[6] => mux_2_1:Mx_f:6:Mx_i.opt2
opt2[7] => mux_2_1:Mx_f:7:Mx_i.opt2
opt2[8] => mux_2_1:Mx_f:8:Mx_i.opt2
opt2[9] => mux_2_1:Mx_f:9:Mx_i.opt2
opt2[10] => mux_2_1:Mx_f:10:Mx_i.opt2
opt2[11] => mux_2_1:Mx_f:11:Mx_i.opt2
opt2[12] => mux_2_1:Mx_f:12:Mx_i.opt2
opt2[13] => mux_2_1:Mx_f:13:Mx_i.opt2
opt2[14] => mux_2_1:Mx_f:14:Mx_i.opt2
opt2[15] => mux_2_1:Mx_f:15:Mx_i.opt2
opt2[16] => mux_2_1:Mx_f:16:Mx_i.opt2
opt2[17] => mux_2_1:Mx_f:17:Mx_i.opt2
opt2[18] => mux_2_1:Mx_f:18:Mx_i.opt2
opt2[19] => mux_2_1:Mx_f:19:Mx_i.opt2
opt2[20] => mux_2_1:Mx_f:20:Mx_i.opt2
opt2[21] => mux_2_1:Mx_f:21:Mx_i.opt2
opt2[22] => mux_2_1:Mx_f:22:Mx_i.opt2
opt2[23] => mux_2_1:Mx_f:23:Mx_i.opt2
opt2[24] => mux_2_1:Mx_f:24:Mx_i.opt2
opt2[25] => mux_2_1:Mx_f:25:Mx_i.opt2
opt2[26] => mux_2_1:Mx_f:26:Mx_i.opt2
opt2[27] => mux_2_1:Mx_f:27:Mx_i.opt2
opt2[28] => mux_2_1:Mx_f:28:Mx_i.opt2
opt2[29] => mux_2_1:Mx_f:29:Mx_i.opt2
opt2[30] => mux_2_1:Mx_f:30:Mx_i.opt2
opt2[31] => mux_2_1:Mx_f:31:Mx_i.opt2
sel => mux_2_1:Mx_f:0:Mx_i.sel
sel => mux_2_1:Mx_f:1:Mx_i.sel
sel => mux_2_1:Mx_f:2:Mx_i.sel
sel => mux_2_1:Mx_f:3:Mx_i.sel
sel => mux_2_1:Mx_f:4:Mx_i.sel
sel => mux_2_1:Mx_f:5:Mx_i.sel
sel => mux_2_1:Mx_f:6:Mx_i.sel
sel => mux_2_1:Mx_f:7:Mx_i.sel
sel => mux_2_1:Mx_f:8:Mx_i.sel
sel => mux_2_1:Mx_f:9:Mx_i.sel
sel => mux_2_1:Mx_f:10:Mx_i.sel
sel => mux_2_1:Mx_f:11:Mx_i.sel
sel => mux_2_1:Mx_f:12:Mx_i.sel
sel => mux_2_1:Mx_f:13:Mx_i.sel
sel => mux_2_1:Mx_f:14:Mx_i.sel
sel => mux_2_1:Mx_f:15:Mx_i.sel
sel => mux_2_1:Mx_f:16:Mx_i.sel
sel => mux_2_1:Mx_f:17:Mx_i.sel
sel => mux_2_1:Mx_f:18:Mx_i.sel
sel => mux_2_1:Mx_f:19:Mx_i.sel
sel => mux_2_1:Mx_f:20:Mx_i.sel
sel => mux_2_1:Mx_f:21:Mx_i.sel
sel => mux_2_1:Mx_f:22:Mx_i.sel
sel => mux_2_1:Mx_f:23:Mx_i.sel
sel => mux_2_1:Mx_f:24:Mx_i.sel
sel => mux_2_1:Mx_f:25:Mx_i.sel
sel => mux_2_1:Mx_f:26:Mx_i.sel
sel => mux_2_1:Mx_f:27:Mx_i.sel
sel => mux_2_1:Mx_f:28:Mx_i.sel
sel => mux_2_1:Mx_f:29:Mx_i.sel
sel => mux_2_1:Mx_f:30:Mx_i.sel
sel => mux_2_1:Mx_f:31:Mx_i.sel
muxOut[0] <= mux_2_1:Mx_f:0:Mx_i.muxOut
muxOut[1] <= mux_2_1:Mx_f:1:Mx_i.muxOut
muxOut[2] <= mux_2_1:Mx_f:2:Mx_i.muxOut
muxOut[3] <= mux_2_1:Mx_f:3:Mx_i.muxOut
muxOut[4] <= mux_2_1:Mx_f:4:Mx_i.muxOut
muxOut[5] <= mux_2_1:Mx_f:5:Mx_i.muxOut
muxOut[6] <= mux_2_1:Mx_f:6:Mx_i.muxOut
muxOut[7] <= mux_2_1:Mx_f:7:Mx_i.muxOut
muxOut[8] <= mux_2_1:Mx_f:8:Mx_i.muxOut
muxOut[9] <= mux_2_1:Mx_f:9:Mx_i.muxOut
muxOut[10] <= mux_2_1:Mx_f:10:Mx_i.muxOut
muxOut[11] <= mux_2_1:Mx_f:11:Mx_i.muxOut
muxOut[12] <= mux_2_1:Mx_f:12:Mx_i.muxOut
muxOut[13] <= mux_2_1:Mx_f:13:Mx_i.muxOut
muxOut[14] <= mux_2_1:Mx_f:14:Mx_i.muxOut
muxOut[15] <= mux_2_1:Mx_f:15:Mx_i.muxOut
muxOut[16] <= mux_2_1:Mx_f:16:Mx_i.muxOut
muxOut[17] <= mux_2_1:Mx_f:17:Mx_i.muxOut
muxOut[18] <= mux_2_1:Mx_f:18:Mx_i.muxOut
muxOut[19] <= mux_2_1:Mx_f:19:Mx_i.muxOut
muxOut[20] <= mux_2_1:Mx_f:20:Mx_i.muxOut
muxOut[21] <= mux_2_1:Mx_f:21:Mx_i.muxOut
muxOut[22] <= mux_2_1:Mx_f:22:Mx_i.muxOut
muxOut[23] <= mux_2_1:Mx_f:23:Mx_i.muxOut
muxOut[24] <= mux_2_1:Mx_f:24:Mx_i.muxOut
muxOut[25] <= mux_2_1:Mx_f:25:Mx_i.muxOut
muxOut[26] <= mux_2_1:Mx_f:26:Mx_i.muxOut
muxOut[27] <= mux_2_1:Mx_f:27:Mx_i.muxOut
muxOut[28] <= mux_2_1:Mx_f:28:Mx_i.muxOut
muxOut[29] <= mux_2_1:Mx_f:29:Mx_i.muxOut
muxOut[30] <= mux_2_1:Mx_f:30:Mx_i.muxOut
muxOut[31] <= mux_2_1:Mx_f:31:Mx_i.muxOut


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:0:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:1:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:2:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:3:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:4:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:5:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:6:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:7:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:8:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:9:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:10:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:11:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:12:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:13:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:14:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:15:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:16:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:17:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:18:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:19:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:20:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:21:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:22:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:23:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:24:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:25:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:26:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:27:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:28:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:29:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:30:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbit_mux2_1:RAMmux|mux_2_1:\Mx_f:31:Mx_i
opt1 => and1.IN0
opt2 => and2.IN0
sel => and2.IN1
sel => and1.IN1
muxOut <= or1.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout
opt1[0] => mux8_1:MU_f:0:MU_i.opt1
opt1[1] => mux8_1:MU_f:1:MU_i.opt1
opt1[2] => mux8_1:MU_f:2:MU_i.opt1
opt1[3] => mux8_1:MU_f:3:MU_i.opt1
opt1[4] => mux8_1:MU_f:4:MU_i.opt1
opt1[5] => mux8_1:MU_f:5:MU_i.opt1
opt1[6] => mux8_1:MU_f:6:MU_i.opt1
opt1[7] => mux8_1:MU_f:7:MU_i.opt1
opt2[0] => mux8_1:MU_f:0:MU_i.opt2
opt2[1] => mux8_1:MU_f:1:MU_i.opt2
opt2[2] => mux8_1:MU_f:2:MU_i.opt2
opt2[3] => mux8_1:MU_f:3:MU_i.opt2
opt2[4] => mux8_1:MU_f:4:MU_i.opt2
opt2[5] => mux8_1:MU_f:5:MU_i.opt2
opt2[6] => mux8_1:MU_f:6:MU_i.opt2
opt2[7] => mux8_1:MU_f:7:MU_i.opt2
opt3[0] => mux8_1:MU_f:0:MU_i.opt3
opt3[1] => mux8_1:MU_f:1:MU_i.opt3
opt3[2] => mux8_1:MU_f:2:MU_i.opt3
opt3[3] => mux8_1:MU_f:3:MU_i.opt3
opt3[4] => mux8_1:MU_f:4:MU_i.opt3
opt3[5] => mux8_1:MU_f:5:MU_i.opt3
opt3[6] => mux8_1:MU_f:6:MU_i.opt3
opt3[7] => mux8_1:MU_f:7:MU_i.opt3
opt4[0] => mux8_1:MU_f:0:MU_i.opt4
opt4[1] => mux8_1:MU_f:1:MU_i.opt4
opt4[2] => mux8_1:MU_f:2:MU_i.opt4
opt4[3] => mux8_1:MU_f:3:MU_i.opt4
opt4[4] => mux8_1:MU_f:4:MU_i.opt4
opt4[5] => mux8_1:MU_f:5:MU_i.opt4
opt4[6] => mux8_1:MU_f:6:MU_i.opt4
opt4[7] => mux8_1:MU_f:7:MU_i.opt4
opt5[0] => mux8_1:MU_f:0:MU_i.opt5
opt5[1] => mux8_1:MU_f:1:MU_i.opt5
opt5[2] => mux8_1:MU_f:2:MU_i.opt5
opt5[3] => mux8_1:MU_f:3:MU_i.opt5
opt5[4] => mux8_1:MU_f:4:MU_i.opt5
opt5[5] => mux8_1:MU_f:5:MU_i.opt5
opt5[6] => mux8_1:MU_f:6:MU_i.opt5
opt5[7] => mux8_1:MU_f:7:MU_i.opt5
opt6[0] => mux8_1:MU_f:0:MU_i.opt6
opt6[1] => mux8_1:MU_f:1:MU_i.opt6
opt6[2] => mux8_1:MU_f:2:MU_i.opt6
opt6[3] => mux8_1:MU_f:3:MU_i.opt6
opt6[4] => mux8_1:MU_f:4:MU_i.opt6
opt6[5] => mux8_1:MU_f:5:MU_i.opt6
opt6[6] => mux8_1:MU_f:6:MU_i.opt6
opt6[7] => mux8_1:MU_f:7:MU_i.opt6
opt7[0] => mux8_1:MU_f:0:MU_i.opt7
opt7[1] => mux8_1:MU_f:1:MU_i.opt7
opt7[2] => mux8_1:MU_f:2:MU_i.opt7
opt7[3] => mux8_1:MU_f:3:MU_i.opt7
opt7[4] => mux8_1:MU_f:4:MU_i.opt7
opt7[5] => mux8_1:MU_f:5:MU_i.opt7
opt7[6] => mux8_1:MU_f:6:MU_i.opt7
opt7[7] => mux8_1:MU_f:7:MU_i.opt7
opt8[0] => mux8_1:MU_f:0:MU_i.opt8
opt8[1] => mux8_1:MU_f:1:MU_i.opt8
opt8[2] => mux8_1:MU_f:2:MU_i.opt8
opt8[3] => mux8_1:MU_f:3:MU_i.opt8
opt8[4] => mux8_1:MU_f:4:MU_i.opt8
opt8[5] => mux8_1:MU_f:5:MU_i.opt8
opt8[6] => mux8_1:MU_f:6:MU_i.opt8
opt8[7] => mux8_1:MU_f:7:MU_i.opt8
sel[0] => mux8_1:MU_f:0:MU_i.sel[0]
sel[0] => mux8_1:MU_f:1:MU_i.sel[0]
sel[0] => mux8_1:MU_f:2:MU_i.sel[0]
sel[0] => mux8_1:MU_f:3:MU_i.sel[0]
sel[0] => mux8_1:MU_f:4:MU_i.sel[0]
sel[0] => mux8_1:MU_f:5:MU_i.sel[0]
sel[0] => mux8_1:MU_f:6:MU_i.sel[0]
sel[0] => mux8_1:MU_f:7:MU_i.sel[0]
sel[1] => mux8_1:MU_f:0:MU_i.sel[1]
sel[1] => mux8_1:MU_f:1:MU_i.sel[1]
sel[1] => mux8_1:MU_f:2:MU_i.sel[1]
sel[1] => mux8_1:MU_f:3:MU_i.sel[1]
sel[1] => mux8_1:MU_f:4:MU_i.sel[1]
sel[1] => mux8_1:MU_f:5:MU_i.sel[1]
sel[1] => mux8_1:MU_f:6:MU_i.sel[1]
sel[1] => mux8_1:MU_f:7:MU_i.sel[1]
sel[2] => mux8_1:MU_f:0:MU_i.sel[2]
sel[2] => mux8_1:MU_f:1:MU_i.sel[2]
sel[2] => mux8_1:MU_f:2:MU_i.sel[2]
sel[2] => mux8_1:MU_f:3:MU_i.sel[2]
sel[2] => mux8_1:MU_f:4:MU_i.sel[2]
sel[2] => mux8_1:MU_f:5:MU_i.sel[2]
sel[2] => mux8_1:MU_f:6:MU_i.sel[2]
sel[2] => mux8_1:MU_f:7:MU_i.sel[2]
muxOut[0] <= mux8_1:MU_f:0:MU_i.muxOut
muxOut[1] <= mux8_1:MU_f:1:MU_i.muxOut
muxOut[2] <= mux8_1:MU_f:2:MU_i.muxOut
muxOut[3] <= mux8_1:MU_f:3:MU_i.muxOut
muxOut[4] <= mux8_1:MU_f:4:MU_i.muxOut
muxOut[5] <= mux8_1:MU_f:5:MU_i.muxOut
muxOut[6] <= mux8_1:MU_f:6:MU_i.muxOut
muxOut[7] <= mux8_1:MU_f:7:MU_i.muxOut


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:0:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:1:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:2:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:3:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:4:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:5:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:6:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|top|RISC_processor:myRISC|nbitmux8_1:Selectmuxout|mux8_1:\MU_f:7:MU_i
opt1 => bits.IN0
opt2 => bits.IN0
opt3 => bits.IN0
opt4 => bits.IN0
opt5 => bits.IN0
opt6 => bits.IN0
opt7 => bits.IN0
opt8 => bits.IN0
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[0] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[1] => bits.IN1
sel[2] => bits[4].IN1
sel[2] => bits[5].IN1
sel[2] => bits[6].IN1
sel[2] => bits[7].IN1
sel[2] => bits[0].IN1
sel[2] => bits[1].IN1
sel[2] => bits[2].IN1
sel[2] => bits[3].IN1
muxOut <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


